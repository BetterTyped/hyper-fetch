/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/details/page";
exports.ids = ["app/details/page"];
exports.modules = {

/***/ "./action-async-storage.external":
/*!****************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external" ***!
  \****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "./request-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "./static-generation-async-storage.external":
/*!***************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external" ***!
  \***************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "timers":
/*!*************************!*\
  !*** external "timers" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("timers");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fdetails%2Fpage&page=%2Fdetails%2Fpage&appPaths=%2Fdetails%2Fpage&pagePath=private-next-app-dir%2Fdetails%2Fpage.tsx&appDir=%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fexamples%2Fnext-app-router%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fexamples%2Fnext-app-router&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fdetails%2Fpage&page=%2Fdetails%2Fpage&appPaths=%2Fdetails%2Fpage&pagePath=private-next-app-dir%2Fdetails%2Fpage.tsx&appDir=%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fexamples%2Fnext-app-router%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fexamples%2Fnext-app-router&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-page/module.compiled */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/module.compiled.js?1c3a\");\n/* harmony import */ var next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/../../node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/../../node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/../../node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"originalPathname\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\n\"TURBOPACK { transition: next-ssr }\";\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        'details',\n        {\n        children: ['__PAGE__', {}, {\n          page: [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/details/page.tsx */ \"(rsc)/./app/details/page.tsx\")), \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        'layout': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/layout.tsx */ \"(rsc)/./app/layout.tsx\")), \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/layout.tsx\"],\n'not-found': [() => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/../../node_modules/next/dist/client/components/not-found-error.js\", 23)), \"next/dist/client/components/not-found-error\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst originalPathname = \"/details/page\";\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/details/page\",\n        pathname: \"/details\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\",\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyLmpzP25hbWU9YXBwJTJGZGV0YWlscyUyRnBhZ2UmcGFnZT0lMkZkZXRhaWxzJTJGcGFnZSZhcHBQYXRocz0lMkZkZXRhaWxzJTJGcGFnZSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmRldGFpbHMlMkZwYWdlLnRzeCZhcHBEaXI9JTJGVXNlcnMlMkZtYWNpZWpweXJjJTJGUHJhY2ElMkZiZXR0ZXItdHlwZWQlMkZvcGVuLXNvdXJjZSUyRmh5cGVyLWZldGNoJTJGZXhhbXBsZXMlMkZuZXh0LWFwcC1yb3V0ZXIlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGbWFjaWVqcHlyYyUyRlByYWNhJTJGYmV0dGVyLXR5cGVkJTJGb3Blbi1zb3VyY2UlMkZoeXBlci1mZXRjaCUyRmV4YW1wbGVzJTJGbmV4dC1hcHAtcm91dGVyJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsYUFBYSxzQkFBc0I7QUFDaUU7QUFDckM7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDLHVCQUF1Qix3SkFBK0k7QUFDdEs7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQSx5QkFBeUIsNElBQXlJO0FBQ2xLLG9CQUFvQiw4TkFBZ0Y7QUFDcEc7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ3VCO0FBQzZEO0FBQ3BGLDZCQUE2QixtQkFBbUI7QUFDaEQ7QUFDTztBQUNBO0FBQ1A7QUFDQTtBQUNBO0FBQ3VEO0FBQ3ZEO0FBQ08sd0JBQXdCLDhHQUFrQjtBQUNqRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vP2Y1NWYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJUVVJCT1BBQ0sgeyB0cmFuc2l0aW9uOiBuZXh0LXNzciB9XCI7XG5pbXBvcnQgeyBBcHBQYWdlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcGFnZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG4vLyBXZSBpbmplY3QgdGhlIHRyZWUgYW5kIHBhZ2VzIGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCB0cmVlID0ge1xuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAnJyxcbiAgICAgICAge1xuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAnZGV0YWlscycsXG4gICAgICAgIHtcbiAgICAgICAgY2hpbGRyZW46IFsnX19QQUdFX18nLCB7fSwge1xuICAgICAgICAgIHBhZ2U6IFsoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9tYWNpZWpweXJjL1ByYWNhL2JldHRlci10eXBlZC9vcGVuLXNvdXJjZS9oeXBlci1mZXRjaC9leGFtcGxlcy9uZXh0LWFwcC1yb3V0ZXIvYXBwL2RldGFpbHMvcGFnZS50c3hcIiksIFwiL1VzZXJzL21hY2llanB5cmMvUHJhY2EvYmV0dGVyLXR5cGVkL29wZW4tc291cmNlL2h5cGVyLWZldGNoL2V4YW1wbGVzL25leHQtYXBwLXJvdXRlci9hcHAvZGV0YWlscy9wYWdlLnRzeFwiXSxcbiAgICAgICAgICBcbiAgICAgICAgfV1cbiAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgfVxuICAgICAgXVxuICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAnbGF5b3V0JzogWygpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL21hY2llanB5cmMvUHJhY2EvYmV0dGVyLXR5cGVkL29wZW4tc291cmNlL2h5cGVyLWZldGNoL2V4YW1wbGVzL25leHQtYXBwLXJvdXRlci9hcHAvbGF5b3V0LnRzeFwiKSwgXCIvVXNlcnMvbWFjaWVqcHlyYy9QcmFjYS9iZXR0ZXItdHlwZWQvb3Blbi1zb3VyY2UvaHlwZXItZmV0Y2gvZXhhbXBsZXMvbmV4dC1hcHAtcm91dGVyL2FwcC9sYXlvdXQudHN4XCJdLFxuJ25vdC1mb3VuZCc6IFsoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQtZXJyb3JcIiksIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC1lcnJvclwiXSxcbiAgICAgICAgXG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LmNoaWxkcmVuO1xuY29uc3QgcGFnZXMgPSBbXCIvVXNlcnMvbWFjaWVqcHlyYy9QcmFjYS9iZXR0ZXItdHlwZWQvb3Blbi1zb3VyY2UvaHlwZXItZmV0Y2gvZXhhbXBsZXMvbmV4dC1hcHAtcm91dGVyL2FwcC9kZXRhaWxzL3BhZ2UudHN4XCJdO1xuZXhwb3J0IHsgdHJlZSwgcGFnZXMgfTtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgR2xvYmFsRXJyb3IgfSBmcm9tIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2Vycm9yLWJvdW5kYXJ5XCI7XG5jb25zdCBfX25leHRfYXBwX3JlcXVpcmVfXyA9IF9fd2VicGFja19yZXF1aXJlX19cbmNvbnN0IF9fbmV4dF9hcHBfbG9hZF9jaHVua19fID0gKCkgPT4gUHJvbWlzZS5yZXNvbHZlKClcbmV4cG9ydCBjb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvZGV0YWlscy9wYWdlXCI7XG5leHBvcnQgY29uc3QgX19uZXh0X2FwcF9fID0ge1xuICAgIHJlcXVpcmU6IF9fbmV4dF9hcHBfcmVxdWlyZV9fLFxuICAgIGxvYWRDaHVuazogX19uZXh0X2FwcF9sb2FkX2NodW5rX19cbn07XG5leHBvcnQgKiBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9hcHAtcmVuZGVyL2VudHJ5LWJhc2VcIjtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFBhZ2VSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1BBR0UsXG4gICAgICAgIHBhZ2U6IFwiL2RldGFpbHMvcGFnZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvZGV0YWlsc1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcIlwiLFxuICAgICAgICBhcHBQYXRoczogW11cbiAgICB9LFxuICAgIHVzZXJsYW5kOiB7XG4gICAgICAgIGxvYWRlclRyZWU6IHRyZWVcbiAgICB9XG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXBhZ2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fdetails%2Fpage&page=%2Fdetails%2Fpage&appPaths=%2Fdetails%2Fpage&pagePath=private-next-app-dir%2Fdetails%2Fpage.tsx&appDir=%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fexamples%2Fnext-app-router%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fexamples%2Fnext-app-router&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fexamples%2Fnext-app-router%2Fapp%2Fdetails%2Fdetails.page.tsx%22%2C%22ids%22%3A%5B%22DetailsPage%22%5D%7D&server=true!":
/*!*****************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fexamples%2Fnext-app-router%2Fapp%2Fdetails%2Fdetails.page.tsx%22%2C%22ids%22%3A%5B%22DetailsPage%22%5D%7D&server=true! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/details/details.page.tsx */ \"(ssr)/./app/details/details.page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm1hY2llanB5cmMlMkZQcmFjYSUyRmJldHRlci10eXBlZCUyRm9wZW4tc291cmNlJTJGaHlwZXItZmV0Y2glMkZleGFtcGxlcyUyRm5leHQtYXBwLXJvdXRlciUyRmFwcCUyRmRldGFpbHMlMkZkZXRhaWxzLnBhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTIyRGV0YWlsc1BhZ2UlMjIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLHdLQUF3TCIsInNvdXJjZXMiOlsid2VicGFjazovLy8/YmJkZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiwgd2VicGFja0V4cG9ydHM6IFtcIkRldGFpbHNQYWdlXCJdICovIFwiL1VzZXJzL21hY2llanB5cmMvUHJhY2EvYmV0dGVyLXR5cGVkL29wZW4tc291cmNlL2h5cGVyLWZldGNoL2V4YW1wbGVzL25leHQtYXBwLXJvdXRlci9hcHAvZGV0YWlscy9kZXRhaWxzLnBhZ2UudHN4XCIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fexamples%2Fnext-app-router%2Fapp%2Fdetails%2Fdetails.page.tsx%22%2C%22ids%22%3A%5B%22DetailsPage%22%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fapp-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fapp-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/app-router.js */ \"(ssr)/../../node_modules/next/dist/client/components/app-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/client-page.js */ \"(ssr)/../../node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/../../node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/../../node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/not-found-boundary.js */ \"(ssr)/../../node_modules/next/dist/client/components/not-found-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ../../node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/../../node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1mbGlnaHQtY2xpZW50LWVudHJ5LWxvYWRlci5qcz9tb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjIlMkZVc2VycyUyRm1hY2llanB5cmMlMkZQcmFjYSUyRmJldHRlci10eXBlZCUyRm9wZW4tc291cmNlJTJGaHlwZXItZmV0Y2glMkZub2RlX21vZHVsZXMlMkZuZXh0JTJGZGlzdCUyRmNsaWVudCUyRmNvbXBvbmVudHMlMkZhcHAtcm91dGVyLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbWFjaWVqcHlyYyUyRlByYWNhJTJGYmV0dGVyLXR5cGVkJTJGb3Blbi1zb3VyY2UlMkZoeXBlci1mZXRjaCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmNsaWVudC1wYWdlLmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbWFjaWVqcHlyYyUyRlByYWNhJTJGYmV0dGVyLXR5cGVkJTJGb3Blbi1zb3VyY2UlMkZoeXBlci1mZXRjaCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmVycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbWFjaWVqcHlyYyUyRlByYWNhJTJGYmV0dGVyLXR5cGVkJTJGb3Blbi1zb3VyY2UlMkZoeXBlci1mZXRjaCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRmxheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZtYWNpZWpweXJjJTJGUHJhY2ElMkZiZXR0ZXItdHlwZWQlMkZvcGVuLXNvdXJjZSUyRmh5cGVyLWZldGNoJTJGbm9kZV9tb2R1bGVzJTJGbmV4dCUyRmRpc3QlMkZjbGllbnQlMkZjb21wb25lbnRzJTJGbm90LWZvdW5kLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMiUyRlVzZXJzJTJGbWFjaWVqcHlyYyUyRlByYWNhJTJGYmV0dGVyLXR5cGVkJTJGb3Blbi1zb3VyY2UlMkZoeXBlci1mZXRjaCUyRm5vZGVfbW9kdWxlcyUyRm5leHQlMkZkaXN0JTJGY2xpZW50JTJGY29tcG9uZW50cyUyRnJlbmRlci1mcm9tLXRlbXBsYXRlLWNvbnRleHQuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLDBPQUF3SjtBQUN4SjtBQUNBLDRPQUF5SjtBQUN6SjtBQUNBLGtQQUE0SjtBQUM1SjtBQUNBLGdQQUEySjtBQUMzSjtBQUNBLDBQQUFnSztBQUNoSztBQUNBLDhRQUEwSyIsInNvdXJjZXMiOlsid2VicGFjazovLy8/N2E4OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9tYWNpZWpweXJjL1ByYWNhL2JldHRlci10eXBlZC9vcGVuLXNvdXJjZS9oeXBlci1mZXRjaC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2FwcC1yb3V0ZXIuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIi9Vc2Vycy9tYWNpZWpweXJjL1ByYWNhL2JldHRlci10eXBlZC9vcGVuLXNvdXJjZS9oeXBlci1mZXRjaC9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2NsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbWFjaWVqcHlyYy9QcmFjYS9iZXR0ZXItdHlwZWQvb3Blbi1zb3VyY2UvaHlwZXItZmV0Y2gvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9lcnJvci1ib3VuZGFyeS5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL21hY2llanB5cmMvUHJhY2EvYmV0dGVyLXR5cGVkL29wZW4tc291cmNlL2h5cGVyLWZldGNoL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbGF5b3V0LXJvdXRlci5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiL1VzZXJzL21hY2llanB5cmMvUHJhY2EvYmV0dGVyLXR5cGVkL29wZW4tc291cmNlL2h5cGVyLWZldGNoL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMvbWFjaWVqcHlyYy9QcmFjYS9iZXR0ZXItdHlwZWQvb3Blbi1zb3VyY2UvaHlwZXItZmV0Y2gvbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9yZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fapp-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Ferror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Flayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Fnot-found-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fnode_modules%2Fnext%2Fdist%2Fclient%2Fcomponents%2Frender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!**********************************************************************************************************!*\
  !*** ../../node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \**********************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./api/client.ts":
/*!***********************!*\
  !*** ./api/client.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   client: () => (/* binding */ client)\n/* harmony export */ });\n/* harmony import */ var _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hyper-fetch/core */ \"(ssr)/../../packages/core/dist/index.esm.js\");\n\nconst client = new _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_0__.Client({\n    url: \"http://localhost:5000\"\n}).setDebug(true);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9hcGkvY2xpZW50LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJDO0FBRXBDLE1BQU1DLFNBQVMsSUFBSUQscURBQU1BLENBQUM7SUFBRUUsS0FBSztBQUF3QixHQUFHQyxRQUFRLENBQUMsTUFBTSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwaS9jbGllbnQudHM/NjBlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbGllbnQgfSBmcm9tIFwiQGh5cGVyLWZldGNoL2NvcmVcIjtcblxuZXhwb3J0IGNvbnN0IGNsaWVudCA9IG5ldyBDbGllbnQoeyB1cmw6IFwiaHR0cDovL2xvY2FsaG9zdDo1MDAwXCIgfSkuc2V0RGVidWcodHJ1ZSk7XG4iXSwibmFtZXMiOlsiQ2xpZW50IiwiY2xpZW50IiwidXJsIiwic2V0RGVidWciXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./api/client.ts\n");

/***/ }),

/***/ "(ssr)/./api/files/files.api.ts":
/*!********************************!*\
  !*** ./api/files/files.api.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   postFile: () => (/* binding */ postFile)\n/* harmony export */ });\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../client */ \"(ssr)/./api/client.ts\");\n\nconst postFile = _client__WEBPACK_IMPORTED_MODULE_0__.client.createRequest()({\n    endpoint: \"/api/files\",\n    method: \"POST\",\n    queued: true,\n    retry: 0\n}).setDataMapper((data)=>{\n    const formData = new FormData();\n    formData.append(\"file\", data.file);\n    return formData;\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9hcGkvZmlsZXMvZmlsZXMuYXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1DO0FBRTVCLE1BQU1DLFdBQVdELDJDQUFNQSxDQUMzQkUsYUFBYSxHQUFnRTtJQUM1RUMsVUFBVTtJQUNWQyxRQUFRO0lBQ1JDLFFBQVE7SUFDUkMsT0FBTztBQUNULEdBQ0NDLGFBQWEsQ0FBQyxDQUFDQztJQUNkLE1BQU1DLFdBQVcsSUFBSUM7SUFDckJELFNBQVNFLE1BQU0sQ0FBQyxRQUFRSCxLQUFLSSxJQUFJO0lBQ2pDLE9BQU9IO0FBQ1QsR0FBRyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2FwaS9maWxlcy9maWxlcy5hcGkudHM/OTJlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjbGllbnQgfSBmcm9tIFwiLi4vY2xpZW50XCI7XG5cbmV4cG9ydCBjb25zdCBwb3N0RmlsZSA9IGNsaWVudFxuICAuY3JlYXRlUmVxdWVzdDx7IHJlc3BvbnNlOiB7IHJlc3BvbnNlOiBzdHJpbmcgfTsgcGF5bG9hZDogeyBmaWxlOiBGaWxlIH0gfT4oKSh7XG4gICAgZW5kcG9pbnQ6IFwiL2FwaS9maWxlc1wiLFxuICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgcXVldWVkOiB0cnVlLFxuICAgIHJldHJ5OiAwLFxuICB9KVxuICAuc2V0RGF0YU1hcHBlcigoZGF0YSkgPT4ge1xuICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgZm9ybURhdGEuYXBwZW5kKFwiZmlsZVwiLCBkYXRhLmZpbGUpO1xuICAgIHJldHVybiBmb3JtRGF0YTtcbiAgfSk7XG4iXSwibmFtZXMiOlsiY2xpZW50IiwicG9zdEZpbGUiLCJjcmVhdGVSZXF1ZXN0IiwiZW5kcG9pbnQiLCJtZXRob2QiLCJxdWV1ZWQiLCJyZXRyeSIsInNldERhdGFNYXBwZXIiLCJkYXRhIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsImZpbGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./api/files/files.api.ts\n");

/***/ }),

/***/ "(ssr)/./api/index.ts":
/*!**********************!*\
  !*** ./api/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   client: () => (/* reexport safe */ _client__WEBPACK_IMPORTED_MODULE_1__.client),\n/* harmony export */   deleteUser: () => (/* reexport safe */ _users_users_api__WEBPACK_IMPORTED_MODULE_3__.deleteUser),\n/* harmony export */   getUser: () => (/* reexport safe */ _users_users_api__WEBPACK_IMPORTED_MODULE_3__.getUser),\n/* harmony export */   getUsers: () => (/* reexport safe */ _users_users_api__WEBPACK_IMPORTED_MODULE_3__.getUsers),\n/* harmony export */   patchUser: () => (/* reexport safe */ _users_users_api__WEBPACK_IMPORTED_MODULE_3__.patchUser),\n/* harmony export */   postFile: () => (/* reexport safe */ _files_files_api__WEBPACK_IMPORTED_MODULE_2__.postFile),\n/* harmony export */   postUser: () => (/* reexport safe */ _users_users_api__WEBPACK_IMPORTED_MODULE_3__.postUser)\n/* harmony export */ });\n/* harmony import */ var msw_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! msw/node */ \"(ssr)/../../node_modules/msw/lib/node/index.mjs\");\n/* harmony import */ var _mocks__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mocks */ \"(ssr)/./api/mocks.ts\");\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client */ \"(ssr)/./api/client.ts\");\n/* harmony import */ var _files_files_api__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./files/files.api */ \"(ssr)/./api/files/files.api.ts\");\n/* harmony import */ var _users_users_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./users/users.api */ \"(ssr)/./api/users/users.api.ts\");\n\n\n\n\n\n\n// Start MSW\nif (true) {\n    (0,msw_node__WEBPACK_IMPORTED_MODULE_4__.setupServer)(..._mocks__WEBPACK_IMPORTED_MODULE_0__.handlers).listen();\n} else {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9hcGkvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQWtDO0FBQ0s7QUFFSjtBQUVWO0FBRVM7QUFDQTtBQUVsQyxZQUFZO0FBQ1osSUFBSSxJQUE2QixFQUFFO0lBQ2pDQyxxREFBV0EsSUFBSUMsNENBQVFBLEVBQUVDLE1BQU07QUFDakMsT0FBTyxFQUVOIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vYXBpL2luZGV4LnRzPzllNmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2V0dXBXb3JrZXIgfSBmcm9tIFwibXN3XCI7XG5pbXBvcnQgeyBzZXR1cFNlcnZlciB9IGZyb20gXCJtc3cvbm9kZVwiO1xuXG5pbXBvcnQgeyBoYW5kbGVycyB9IGZyb20gXCIuL21vY2tzXCI7XG5cbmV4cG9ydCAqIGZyb20gXCIuL2NsaWVudFwiO1xuXG5leHBvcnQgKiBmcm9tIFwiLi9maWxlcy9maWxlcy5hcGlcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3VzZXJzL3VzZXJzLmFwaVwiO1xuXG4vLyBTdGFydCBNU1dcbmlmICh0eXBlb2Ygd2luZG93ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gIHNldHVwU2VydmVyKC4uLmhhbmRsZXJzKS5saXN0ZW4oKTtcbn0gZWxzZSB7XG4gIHNldHVwV29ya2VyKC4uLmhhbmRsZXJzKS5zdGFydCgpO1xufVxuIl0sIm5hbWVzIjpbInNldHVwV29ya2VyIiwic2V0dXBTZXJ2ZXIiLCJoYW5kbGVycyIsImxpc3RlbiIsInN0YXJ0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./api/index.ts\n");

/***/ }),

/***/ "(ssr)/./api/mocks.ts":
/*!**********************!*\
  !*** ./api/mocks.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handlers: () => (/* binding */ handlers)\n/* harmony export */ });\n/* harmony import */ var msw__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! msw */ \"(ssr)/../../node_modules/msw/lib/index.js\");\n/* harmony import */ var msw__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(msw__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hyper-fetch/core */ \"(ssr)/../../packages/core/dist/index.esm.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils */ \"(ssr)/./utils/index.ts\");\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./client */ \"(ssr)/./api/client.ts\");\n/* harmony import */ var _users_users_api__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./users/users.api */ \"(ssr)/./api/users/users.api.ts\");\n/* harmony import */ var _files_files_api__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./files/files.api */ \"(ssr)/./api/files/files.api.ts\");\n\n\n\n\n\n\n// Mocks setup\nconst getMock = (request, response, delay)=>{\n    const { method, endpoint } = request;\n    const url = _client__WEBPACK_IMPORTED_MODULE_2__.client.url + endpoint;\n    function callback(req, res, ctx) {\n        return res(ctx.delay(delay), ctx.status(200), ctx.json(typeof response === \"function\" ? response(req) : response || {}));\n    }\n    if (method.toUpperCase() === \"POST\") {\n        return msw__WEBPACK_IMPORTED_MODULE_5__.rest.post(url, callback);\n    }\n    if (method.toUpperCase() === \"PUT\") {\n        return msw__WEBPACK_IMPORTED_MODULE_5__.rest.put(url, callback);\n    }\n    if (method.toUpperCase() === \"PATCH\") {\n        return msw__WEBPACK_IMPORTED_MODULE_5__.rest.patch(url, callback);\n    }\n    if (method.toUpperCase() === \"DELETE\") {\n        return msw__WEBPACK_IMPORTED_MODULE_5__.rest.delete(url, callback);\n    }\n    return msw__WEBPACK_IMPORTED_MODULE_5__.rest.get(url, callback);\n};\nconst usersPages = new Map();\nconst getPage = (req)=>{\n    const page = req.url.searchParams.get(\"page\") || 1;\n    const cachedData = usersPages.get(page);\n    if (!cachedData) {\n        const users = (0,_utils__WEBPACK_IMPORTED_MODULE_1__.getRandomUsers)();\n        const newData = {\n            page,\n            data: users\n        };\n        usersPages.set(page, newData);\n        return newData;\n    }\n    return cachedData;\n};\nconst handlers = [\n    getMock(_users_users_api__WEBPACK_IMPORTED_MODULE_3__.getUser, _utils__WEBPACK_IMPORTED_MODULE_1__.getRandomUser, _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_0__.Time.SEC),\n    getMock(_users_users_api__WEBPACK_IMPORTED_MODULE_3__.getUsers, getPage, _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_0__.Time.SEC),\n    getMock(_users_users_api__WEBPACK_IMPORTED_MODULE_3__.postUser, _utils__WEBPACK_IMPORTED_MODULE_1__.getRandomUser, _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_0__.Time.SEC),\n    getMock(_users_users_api__WEBPACK_IMPORTED_MODULE_3__.patchUser, _utils__WEBPACK_IMPORTED_MODULE_1__.getRandomUser, _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_0__.Time.SEC * 3),\n    getMock(_users_users_api__WEBPACK_IMPORTED_MODULE_3__.deleteUser, null),\n    getMock(_files_files_api__WEBPACK_IMPORTED_MODULE_4__.postFile, {\n        response: \"ok\"\n    }, _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_0__.Time.SEC * 2)\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9hcGkvbW9ja3MudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBMkI7QUFDK0I7QUFFRDtBQUN2QjtBQUNxRDtBQUMxQztBQUU3QyxjQUFjO0FBQ2QsTUFBTVcsVUFBVSxDQUNkQyxTQUNBQyxVQUNBQztJQUVBLE1BQU0sRUFBRUMsTUFBTSxFQUFFQyxRQUFRLEVBQUUsR0FBR0o7SUFFN0IsTUFBTUssTUFBTWIsMkNBQU1BLENBQUNhLEdBQUcsR0FBR0Q7SUFFekIsU0FBU0UsU0FBU0MsR0FBUSxFQUFFQyxHQUFRLEVBQUVDLEdBQVE7UUFDNUMsT0FBT0QsSUFDTEMsSUFBSVAsS0FBSyxDQUFDQSxRQUNWTyxJQUFJQyxNQUFNLENBQUMsTUFDWEQsSUFBSUUsSUFBSSxDQUFDLE9BQU9WLGFBQWEsYUFBYUEsU0FBU00sT0FBT04sWUFBWSxDQUFDO0lBRTNFO0lBRUEsSUFBSUUsT0FBT1MsV0FBVyxPQUFPLFFBQVE7UUFDbkMsT0FBT3hCLHFDQUFJQSxDQUFDeUIsSUFBSSxDQUFDUixLQUFLQztJQUN4QjtJQUNBLElBQUlILE9BQU9TLFdBQVcsT0FBTyxPQUFPO1FBQ2xDLE9BQU94QixxQ0FBSUEsQ0FBQzBCLEdBQUcsQ0FBQ1QsS0FBS0M7SUFDdkI7SUFDQSxJQUFJSCxPQUFPUyxXQUFXLE9BQU8sU0FBUztRQUNwQyxPQUFPeEIscUNBQUlBLENBQUMyQixLQUFLLENBQUNWLEtBQUtDO0lBQ3pCO0lBQ0EsSUFBSUgsT0FBT1MsV0FBVyxPQUFPLFVBQVU7UUFDckMsT0FBT3hCLHFDQUFJQSxDQUFDNEIsTUFBTSxDQUFDWCxLQUFLQztJQUMxQjtJQUNBLE9BQU9sQixxQ0FBSUEsQ0FBQzZCLEdBQUcsQ0FBQ1osS0FBS0M7QUFDdkI7QUFFQSxNQUFNWSxhQUFhLElBQUlDO0FBRXZCLE1BQU1DLFVBQVUsQ0FBQ2I7SUFDZixNQUFNYyxPQUFPZCxJQUFJRixHQUFHLENBQUNpQixZQUFZLENBQUNMLEdBQUcsQ0FBQyxXQUFXO0lBQ2pELE1BQU1NLGFBQWFMLFdBQVdELEdBQUcsQ0FBQ0k7SUFFbEMsSUFBSSxDQUFDRSxZQUFZO1FBQ2YsTUFBTUMsUUFBUWpDLHNEQUFjQTtRQUM1QixNQUFNa0MsVUFBVTtZQUNkSjtZQUNBSyxNQUFNRjtRQUNSO1FBQ0FOLFdBQVdTLEdBQUcsQ0FBQ04sTUFBTUk7UUFDckIsT0FBT0E7SUFDVDtJQUNBLE9BQU9GO0FBQ1Q7QUFFTyxNQUFNSyxXQUFXO0lBQ3RCN0IsUUFBUUwscURBQU9BLEVBQUVKLGlEQUFhQSxFQUFFRCxtREFBSUEsQ0FBQ3dDLEdBQUc7SUFDeEM5QixRQUFRSixzREFBUUEsRUFBRXlCLFNBQVMvQixtREFBSUEsQ0FBQ3dDLEdBQUc7SUFDbkM5QixRQUFRRixzREFBUUEsRUFBRVAsaURBQWFBLEVBQUVELG1EQUFJQSxDQUFDd0MsR0FBRztJQUN6QzlCLFFBQVFILHVEQUFTQSxFQUFFTixpREFBYUEsRUFBRUQsbURBQUlBLENBQUN3QyxHQUFHLEdBQUc7SUFDN0M5QixRQUFRTix3REFBVUEsRUFBRTtJQUNwQk0sUUFBUUQsc0RBQVFBLEVBQUU7UUFBRUcsVUFBVTtJQUFLLEdBQUdaLG1EQUFJQSxDQUFDd0MsR0FBRyxHQUFHO0NBQ2xELENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcGkvbW9ja3MudHM/MDI4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyByZXN0IH0gZnJvbSBcIm1zd1wiO1xuaW1wb3J0IHsgUmVxdWVzdEluc3RhbmNlLCBUaW1lIH0gZnJvbSBcIkBoeXBlci1mZXRjaC9jb3JlXCI7XG5cbmltcG9ydCB7IGdldFJhbmRvbVVzZXIsIGdldFJhbmRvbVVzZXJzIH0gZnJvbSBcIi4uL3V0aWxzXCI7XG5pbXBvcnQgeyBjbGllbnQgfSBmcm9tIFwiLi9jbGllbnRcIjtcbmltcG9ydCB7IGRlbGV0ZVVzZXIsIGdldFVzZXIsIGdldFVzZXJzLCBwYXRjaFVzZXIsIHBvc3RVc2VyIH0gZnJvbSBcIi4vdXNlcnMvdXNlcnMuYXBpXCI7XG5pbXBvcnQgeyBwb3N0RmlsZSB9IGZyb20gXCIuL2ZpbGVzL2ZpbGVzLmFwaVwiO1xuXG4vLyBNb2NrcyBzZXR1cFxuY29uc3QgZ2V0TW9jayA9IChcbiAgcmVxdWVzdDogUmVxdWVzdEluc3RhbmNlLFxuICByZXNwb25zZTogUmVjb3JkPHN0cmluZywgYW55PiB8IG51bGwgfCAoKHJlcTogYW55KSA9PiBSZWNvcmQ8c3RyaW5nLCBhbnk+IHwgbnVsbCksXG4gIGRlbGF5PzogbnVtYmVyLFxuKSA9PiB7XG4gIGNvbnN0IHsgbWV0aG9kLCBlbmRwb2ludCB9ID0gcmVxdWVzdDtcblxuICBjb25zdCB1cmwgPSBjbGllbnQudXJsICsgZW5kcG9pbnQ7XG5cbiAgZnVuY3Rpb24gY2FsbGJhY2socmVxOiBhbnksIHJlczogYW55LCBjdHg6IGFueSkge1xuICAgIHJldHVybiByZXMoXG4gICAgICBjdHguZGVsYXkoZGVsYXkpLFxuICAgICAgY3R4LnN0YXR1cygyMDApLFxuICAgICAgY3R4Lmpzb24odHlwZW9mIHJlc3BvbnNlID09PSBcImZ1bmN0aW9uXCIgPyByZXNwb25zZShyZXEpIDogcmVzcG9uc2UgfHwge30pLFxuICAgICk7XG4gIH1cblxuICBpZiAobWV0aG9kLnRvVXBwZXJDYXNlKCkgPT09IFwiUE9TVFwiKSB7XG4gICAgcmV0dXJuIHJlc3QucG9zdCh1cmwsIGNhbGxiYWNrKTtcbiAgfVxuICBpZiAobWV0aG9kLnRvVXBwZXJDYXNlKCkgPT09IFwiUFVUXCIpIHtcbiAgICByZXR1cm4gcmVzdC5wdXQodXJsLCBjYWxsYmFjayk7XG4gIH1cbiAgaWYgKG1ldGhvZC50b1VwcGVyQ2FzZSgpID09PSBcIlBBVENIXCIpIHtcbiAgICByZXR1cm4gcmVzdC5wYXRjaCh1cmwsIGNhbGxiYWNrKTtcbiAgfVxuICBpZiAobWV0aG9kLnRvVXBwZXJDYXNlKCkgPT09IFwiREVMRVRFXCIpIHtcbiAgICByZXR1cm4gcmVzdC5kZWxldGUodXJsLCBjYWxsYmFjayk7XG4gIH1cbiAgcmV0dXJuIHJlc3QuZ2V0KHVybCwgY2FsbGJhY2spO1xufTtcblxuY29uc3QgdXNlcnNQYWdlcyA9IG5ldyBNYXAoKTtcblxuY29uc3QgZ2V0UGFnZSA9IChyZXE6IGFueSkgPT4ge1xuICBjb25zdCBwYWdlID0gcmVxLnVybC5zZWFyY2hQYXJhbXMuZ2V0KFwicGFnZVwiKSB8fCAxO1xuICBjb25zdCBjYWNoZWREYXRhID0gdXNlcnNQYWdlcy5nZXQocGFnZSk7XG5cbiAgaWYgKCFjYWNoZWREYXRhKSB7XG4gICAgY29uc3QgdXNlcnMgPSBnZXRSYW5kb21Vc2VycygpO1xuICAgIGNvbnN0IG5ld0RhdGEgPSB7XG4gICAgICBwYWdlLFxuICAgICAgZGF0YTogdXNlcnMsXG4gICAgfTtcbiAgICB1c2Vyc1BhZ2VzLnNldChwYWdlLCBuZXdEYXRhKTtcbiAgICByZXR1cm4gbmV3RGF0YTtcbiAgfVxuICByZXR1cm4gY2FjaGVkRGF0YTtcbn07XG5cbmV4cG9ydCBjb25zdCBoYW5kbGVycyA9IFtcbiAgZ2V0TW9jayhnZXRVc2VyLCBnZXRSYW5kb21Vc2VyLCBUaW1lLlNFQyksXG4gIGdldE1vY2soZ2V0VXNlcnMsIGdldFBhZ2UsIFRpbWUuU0VDKSxcbiAgZ2V0TW9jayhwb3N0VXNlciwgZ2V0UmFuZG9tVXNlciwgVGltZS5TRUMpLFxuICBnZXRNb2NrKHBhdGNoVXNlciwgZ2V0UmFuZG9tVXNlciwgVGltZS5TRUMgKiAzKSxcbiAgZ2V0TW9jayhkZWxldGVVc2VyLCBudWxsKSxcbiAgZ2V0TW9jayhwb3N0RmlsZSwgeyByZXNwb25zZTogXCJva1wiIH0sIFRpbWUuU0VDICogMiksXG5dO1xuIl0sIm5hbWVzIjpbInJlc3QiLCJUaW1lIiwiZ2V0UmFuZG9tVXNlciIsImdldFJhbmRvbVVzZXJzIiwiY2xpZW50IiwiZGVsZXRlVXNlciIsImdldFVzZXIiLCJnZXRVc2VycyIsInBhdGNoVXNlciIsInBvc3RVc2VyIiwicG9zdEZpbGUiLCJnZXRNb2NrIiwicmVxdWVzdCIsInJlc3BvbnNlIiwiZGVsYXkiLCJtZXRob2QiLCJlbmRwb2ludCIsInVybCIsImNhbGxiYWNrIiwicmVxIiwicmVzIiwiY3R4Iiwic3RhdHVzIiwianNvbiIsInRvVXBwZXJDYXNlIiwicG9zdCIsInB1dCIsInBhdGNoIiwiZGVsZXRlIiwiZ2V0IiwidXNlcnNQYWdlcyIsIk1hcCIsImdldFBhZ2UiLCJwYWdlIiwic2VhcmNoUGFyYW1zIiwiY2FjaGVkRGF0YSIsInVzZXJzIiwibmV3RGF0YSIsImRhdGEiLCJzZXQiLCJoYW5kbGVycyIsIlNFQyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./api/mocks.ts\n");

/***/ }),

/***/ "(ssr)/./api/users/users.api.ts":
/*!********************************!*\
  !*** ./api/users/users.api.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   deleteUser: () => (/* binding */ deleteUser),\n/* harmony export */   getUser: () => (/* binding */ getUser),\n/* harmony export */   getUsers: () => (/* binding */ getUsers),\n/* harmony export */   patchUser: () => (/* binding */ patchUser),\n/* harmony export */   postUser: () => (/* binding */ postUser)\n/* harmony export */ });\n/* harmony import */ var _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @hyper-fetch/core */ \"(ssr)/../../packages/core/dist/index.esm.js\");\n/* harmony import */ var _client__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../client */ \"(ssr)/./api/client.ts\");\n\n\nconst getUser = _client__WEBPACK_IMPORTED_MODULE_1__.client.createRequest()({\n    endpoint: \"/api/user/:userId\",\n    cache: true,\n    cacheTime: _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_0__.Time.SEC * 10\n});\nconst getUsers = _client__WEBPACK_IMPORTED_MODULE_1__.client.createRequest()({\n    endpoint: \"/api/users\",\n    cache: true,\n    cacheTime: _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_0__.Time.SEC * 5\n});\nconst postUser = _client__WEBPACK_IMPORTED_MODULE_1__.client.createRequest()({\n    endpoint: \"/api/user\",\n    method: \"POST\",\n    cancelable: true\n});\nconst patchUser = _client__WEBPACK_IMPORTED_MODULE_1__.client.createRequest()({\n    endpoint: \"/api/user/:userId\",\n    method: \"PATCH\",\n    cancelable: false\n});\nconst deleteUser = _client__WEBPACK_IMPORTED_MODULE_1__.client.createRequest()({\n    endpoint: \"/api/user/:userId\",\n    method: \"DELETE\"\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9hcGkvdXNlcnMvdXNlcnMuYXBpLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBeUM7QUFHTjtBQUU1QixNQUFNRSxVQUFVRCwyQ0FBTUEsQ0FBQ0UsYUFBYSxHQUE0QjtJQUNyRUMsVUFBVTtJQUNWQyxPQUFPO0lBQ1BDLFdBQVdOLG1EQUFJQSxDQUFDTyxHQUFHLEdBQUc7QUFDeEIsR0FBRztBQUVJLE1BQU1DLFdBQVdQLDJDQUFNQSxDQUFDRSxhQUFhLEdBQThCO0lBQ3hFQyxVQUFVO0lBQ1ZDLE9BQU87SUFDUEMsV0FBV04sbURBQUlBLENBQUNPLEdBQUcsR0FBRztBQUN4QixHQUFHO0FBRUksTUFBTUUsV0FBV1IsMkNBQU1BLENBQUNFLGFBQWEsR0FBb0Q7SUFDOUZDLFVBQVU7SUFDVk0sUUFBUTtJQUNSQyxZQUFZO0FBQ2QsR0FBRztBQUVJLE1BQU1DLFlBQVlYLDJDQUFNQSxDQUFDRSxhQUFhLEdBQW9EO0lBQy9GQyxVQUFVO0lBQ1ZNLFFBQVE7SUFDUkMsWUFBWTtBQUNkLEdBQUc7QUFFSSxNQUFNRSxhQUFhWiwyQ0FBTUEsQ0FBQ0UsYUFBYSxHQUFHO0lBQy9DQyxVQUFVO0lBQ1ZNLFFBQVE7QUFDVixHQUFHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vYXBpL3VzZXJzL3VzZXJzLmFwaS50cz9lMmE1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRpbWUgfSBmcm9tIFwiQGh5cGVyLWZldGNoL2NvcmVcIjtcblxuaW1wb3J0IHsgUG9zdFVzZXJNb2RlbCwgVXNlck1vZGVsIH0gZnJvbSBcIi4uLy4uL21vZGVsc1wiO1xuaW1wb3J0IHsgY2xpZW50IH0gZnJvbSBcIi4uL2NsaWVudFwiO1xuXG5leHBvcnQgY29uc3QgZ2V0VXNlciA9IGNsaWVudC5jcmVhdGVSZXF1ZXN0PHsgcmVzcG9uc2U6IFVzZXJNb2RlbCB9PigpKHtcbiAgZW5kcG9pbnQ6IFwiL2FwaS91c2VyLzp1c2VySWRcIixcbiAgY2FjaGU6IHRydWUsXG4gIGNhY2hlVGltZTogVGltZS5TRUMgKiAxMCxcbn0pO1xuXG5leHBvcnQgY29uc3QgZ2V0VXNlcnMgPSBjbGllbnQuY3JlYXRlUmVxdWVzdDx7IHJlc3BvbnNlOiBVc2VyTW9kZWxbXSB9PigpKHtcbiAgZW5kcG9pbnQ6IFwiL2FwaS91c2Vyc1wiLFxuICBjYWNoZTogdHJ1ZSxcbiAgY2FjaGVUaW1lOiBUaW1lLlNFQyAqIDUsXG59KTtcblxuZXhwb3J0IGNvbnN0IHBvc3RVc2VyID0gY2xpZW50LmNyZWF0ZVJlcXVlc3Q8eyByZXNwb25zZTogVXNlck1vZGVsOyBwYXlsb2FkOiBQb3N0VXNlck1vZGVsIH0+KCkoe1xuICBlbmRwb2ludDogXCIvYXBpL3VzZXJcIixcbiAgbWV0aG9kOiBcIlBPU1RcIixcbiAgY2FuY2VsYWJsZTogdHJ1ZSxcbn0pO1xuXG5leHBvcnQgY29uc3QgcGF0Y2hVc2VyID0gY2xpZW50LmNyZWF0ZVJlcXVlc3Q8eyByZXNwb25zZTogVXNlck1vZGVsOyBwYXlsb2FkOiBQb3N0VXNlck1vZGVsIH0+KCkoe1xuICBlbmRwb2ludDogXCIvYXBpL3VzZXIvOnVzZXJJZFwiLFxuICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgY2FuY2VsYWJsZTogZmFsc2UsXG59KTtcblxuZXhwb3J0IGNvbnN0IGRlbGV0ZVVzZXIgPSBjbGllbnQuY3JlYXRlUmVxdWVzdCgpKHtcbiAgZW5kcG9pbnQ6IFwiL2FwaS91c2VyLzp1c2VySWRcIixcbiAgbWV0aG9kOiBcIkRFTEVURVwiLFxufSk7XG4iXSwibmFtZXMiOlsiVGltZSIsImNsaWVudCIsImdldFVzZXIiLCJjcmVhdGVSZXF1ZXN0IiwiZW5kcG9pbnQiLCJjYWNoZSIsImNhY2hlVGltZSIsIlNFQyIsImdldFVzZXJzIiwicG9zdFVzZXIiLCJtZXRob2QiLCJjYW5jZWxhYmxlIiwicGF0Y2hVc2VyIiwiZGVsZXRlVXNlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./api/users/users.api.ts\n");

/***/ }),

/***/ "(ssr)/./app/details/details.page.tsx":
/*!**************************************!*\
  !*** ./app/details/details.page.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DetailsPage: () => (/* binding */ DetailsPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_countdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-countdown */ \"(ssr)/../../node_modules/react-countdown/dist/index.es.js\");\n/* harmony import */ var _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @hyper-fetch/core */ \"(ssr)/../../packages/core/dist/index.esm.js\");\n/* harmony import */ var _hyper_fetch_react__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @hyper-fetch/react */ \"(ssr)/../../packages/react/dist/index.esm.js\");\n/* harmony import */ var _barrel_optimize_names_Button_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=Button,Stack,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/Stack/Stack.js\");\n/* harmony import */ var _barrel_optimize_names_Button_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=Button,Stack,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/Button/Button.js\");\n/* harmony import */ var _barrel_optimize_names_Button_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! __barrel_optimize__?names=Button,Stack,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/Typography/Typography.js\");\n/* harmony import */ var _mui_material_IconButton__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mui/material/IconButton */ \"(ssr)/../../node_modules/@mui/material/IconButton/IconButton.js\");\n/* harmony import */ var _mui_icons_material_Refresh__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @mui/icons-material/Refresh */ \"(ssr)/../../node_modules/@mui/icons-material/Refresh.js\");\n/* harmony import */ var _mui_icons_material_PlayArrow__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @mui/icons-material/PlayArrow */ \"(ssr)/../../node_modules/@mui/icons-material/PlayArrow.js\");\n/* harmony import */ var _mui_icons_material_Stop__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @mui/icons-material/Stop */ \"(ssr)/../../node_modules/@mui/icons-material/Stop.js\");\n/* harmony import */ var _components_viewer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../components/viewer */ \"(ssr)/./components/viewer.tsx\");\n/* harmony import */ var _components_request__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../components/request */ \"(ssr)/./components/request.tsx\");\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../api */ \"(ssr)/./api/index.ts\");\n/* __next_internal_client_entry_do_not_use__ DetailsPage auto */ \n\n\n\n\n\n\n\n\n\n\n\n\nconst refreshTime = _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.Time.SEC * 10;\nconst initialDate = +new Date();\nconst DetailsPage = ()=>{\n    const [dep, setDep] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialDate);\n    const [disabled, setDisabled] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const result = (0,_hyper_fetch_react__WEBPACK_IMPORTED_MODULE_4__.useFetch)(_api__WEBPACK_IMPORTED_MODULE_7__.getUser.setQueryParams({\n        date: dep\n    }), {\n        disabled,\n        dependencies: [\n            dep\n        ],\n        refresh: true,\n        refreshTime,\n        revalidate: false\n    });\n    const { refetch, timestamp } = result;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_viewer__WEBPACK_IMPORTED_MODULE_5__.Viewer, {\n        name: \"Details\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_request__WEBPACK_IMPORTED_MODULE_6__.Request, {\n                name: \"Get one\",\n                result: result,\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Button_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                    direction: \"row\",\n                    spacing: 1,\n                    sx: {\n                        mb: 3\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Button_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                            variant: \"outlined\",\n                            onClick: ()=>setDep(+new Date()),\n                            children: \"Change dependency\"\n                        }, void 0, false, {\n                            fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx\",\n                            lineNumber: 38,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                            onClick: ()=>refetch(),\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_Refresh__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {}, void 0, false, {\n                                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx\",\n                                lineNumber: 42,\n                                columnNumber: 13\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx\",\n                            lineNumber: 41,\n                            columnNumber: 11\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_IconButton__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                            onClick: ()=>setDisabled((prev)=>!prev),\n                            children: disabled ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_PlayArrow__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {}, void 0, false, {\n                                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx\",\n                                lineNumber: 45,\n                                columnNumber: 25\n                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_Stop__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {}, void 0, false, {\n                                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx\",\n                                lineNumber: 45,\n                                columnNumber: 45\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx\",\n                            lineNumber: 44,\n                            columnNumber: 11\n                        }, undefined)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx\",\n                    lineNumber: 37,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx\",\n                lineNumber: 36,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Button_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"b\", {\n                        children: \"Refresh in:\"\n                    }, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx\",\n                        lineNumber: 50,\n                        columnNumber: 9\n                    }, undefined),\n                    \" \",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_countdown__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                        date: timestamp ? +timestamp + refreshTime : Date.now() + refreshTime\n                    }, String(timestamp?.getTime()), false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx\",\n                        lineNumber: 51,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx\",\n                lineNumber: 49,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx\",\n        lineNumber: 35,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9hcHAvZGV0YWlscy9kZXRhaWxzLnBhZ2UudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFd0M7QUFDQTtBQUNDO0FBQ0s7QUFDWTtBQUNSO0FBQ0k7QUFDSTtBQUNWO0FBRUM7QUFDRTtBQUNmO0FBRXBDLE1BQU1lLGNBQWNaLG1EQUFJQSxDQUFDYSxHQUFHLEdBQUc7QUFDL0IsTUFBTUMsY0FBYyxDQUFDLElBQUlDO0FBRWxCLE1BQU1DLGNBQXdCO0lBQ25DLE1BQU0sQ0FBQ0MsS0FBS0MsT0FBTyxHQUFHcEIsK0NBQVFBLENBQUNnQjtJQUMvQixNQUFNLENBQUNLLFVBQVVDLFlBQVksR0FBR3RCLCtDQUFRQSxDQUFDO0lBRXpDLE1BQU11QixTQUFTcEIsNERBQVFBLENBQUNVLHlDQUFPQSxDQUFDVyxjQUFjLENBQUM7UUFBRUMsTUFBTU47SUFBSSxJQUFJO1FBQzdERTtRQUNBSyxjQUFjO1lBQUNQO1NBQUk7UUFDbkJRLFNBQVM7UUFDVGI7UUFDQWMsWUFBWTtJQUNkO0lBRUEsTUFBTSxFQUFFQyxPQUFPLEVBQUVDLFNBQVMsRUFBRSxHQUFHUDtJQUUvQixxQkFDRSw4REFBQ1osc0RBQU1BO1FBQUNvQixNQUFLOzswQkFDWCw4REFBQ25CLHdEQUFPQTtnQkFBQ21CLE1BQUs7Z0JBQVVSLFFBQVFBOzBCQUM5Qiw0RUFBQ25CLG1HQUFLQTtvQkFBQzRCLFdBQVU7b0JBQU1DLFNBQVM7b0JBQUdDLElBQUk7d0JBQUVDLElBQUk7b0JBQUU7O3NDQUM3Qyw4REFBQzlCLG1HQUFNQTs0QkFBQytCLFNBQVE7NEJBQVdDLFNBQVMsSUFBTWpCLE9BQU8sQ0FBQyxJQUFJSDtzQ0FBUzs7Ozs7O3NDQUcvRCw4REFBQ1YsaUVBQVVBOzRCQUFDOEIsU0FBUyxJQUFNUjtzQ0FDekIsNEVBQUNyQixvRUFBV0E7Ozs7Ozs7Ozs7c0NBRWQsOERBQUNELGlFQUFVQTs0QkFBQzhCLFNBQVMsSUFBTWYsWUFBWSxDQUFDZ0IsT0FBUyxDQUFDQTtzQ0FDL0NqQix5QkFBVyw4REFBQ1osc0VBQWFBOzs7OzBEQUFNLDhEQUFDQyxpRUFBUUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFJL0MsOERBQUNKLG9HQUFVQTs7a0NBQ1QsOERBQUNpQztrQ0FBRTs7Ozs7O29CQUFnQjtrQ0FDbkIsOERBQUN0Qyx1REFBU0E7d0JBQ1J3QixNQUFNSyxZQUFZLENBQUNBLFlBQVloQixjQUFjRyxLQUFLdUIsR0FBRyxLQUFLMUI7dUJBQ3JEMkIsT0FBT1gsV0FBV1k7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS2pDLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvZGV0YWlscy9kZXRhaWxzLnBhZ2UudHN4P2Q5YTUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IENvdW50ZG93biBmcm9tIFwicmVhY3QtY291bnRkb3duXCI7XG5pbXBvcnQgeyBUaW1lIH0gZnJvbSBcIkBoeXBlci1mZXRjaC9jb3JlXCI7XG5pbXBvcnQgeyB1c2VGZXRjaCB9IGZyb20gXCJAaHlwZXItZmV0Y2gvcmVhY3RcIjtcbmltcG9ydCB7IFN0YWNrLCBCdXR0b24sIFR5cG9ncmFwaHkgfSBmcm9tIFwiQG11aS9tYXRlcmlhbFwiO1xuaW1wb3J0IEljb25CdXR0b24gZnJvbSBcIkBtdWkvbWF0ZXJpYWwvSWNvbkJ1dHRvblwiO1xuaW1wb3J0IFJlZnJlc2hJY29uIGZyb20gXCJAbXVpL2ljb25zLW1hdGVyaWFsL1JlZnJlc2hcIjtcbmltcG9ydCBQbGF5QXJyb3dJY29uIGZyb20gXCJAbXVpL2ljb25zLW1hdGVyaWFsL1BsYXlBcnJvd1wiO1xuaW1wb3J0IFN0b3BJY29uIGZyb20gXCJAbXVpL2ljb25zLW1hdGVyaWFsL1N0b3BcIjtcblxuaW1wb3J0IHsgVmlld2VyIH0gZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvdmlld2VyXCI7XG5pbXBvcnQgeyBSZXF1ZXN0IH0gZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvcmVxdWVzdFwiO1xuaW1wb3J0IHsgZ2V0VXNlciB9IGZyb20gXCIuLi8uLi9hcGlcIjtcblxuY29uc3QgcmVmcmVzaFRpbWUgPSBUaW1lLlNFQyAqIDEwO1xuY29uc3QgaW5pdGlhbERhdGUgPSArbmV3IERhdGUoKTtcblxuZXhwb3J0IGNvbnN0IERldGFpbHNQYWdlOiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgY29uc3QgW2RlcCwgc2V0RGVwXSA9IHVzZVN0YXRlKGluaXRpYWxEYXRlKTtcbiAgY29uc3QgW2Rpc2FibGVkLCBzZXREaXNhYmxlZF0gPSB1c2VTdGF0ZSh0cnVlKTtcblxuICBjb25zdCByZXN1bHQgPSB1c2VGZXRjaChnZXRVc2VyLnNldFF1ZXJ5UGFyYW1zKHsgZGF0ZTogZGVwIH0pLCB7XG4gICAgZGlzYWJsZWQsXG4gICAgZGVwZW5kZW5jaWVzOiBbZGVwXSxcbiAgICByZWZyZXNoOiB0cnVlLFxuICAgIHJlZnJlc2hUaW1lLFxuICAgIHJldmFsaWRhdGU6IGZhbHNlLFxuICB9KTtcblxuICBjb25zdCB7IHJlZmV0Y2gsIHRpbWVzdGFtcCB9ID0gcmVzdWx0O1xuXG4gIHJldHVybiAoXG4gICAgPFZpZXdlciBuYW1lPVwiRGV0YWlsc1wiPlxuICAgICAgPFJlcXVlc3QgbmFtZT1cIkdldCBvbmVcIiByZXN1bHQ9e3Jlc3VsdH0+XG4gICAgICAgIDxTdGFjayBkaXJlY3Rpb249XCJyb3dcIiBzcGFjaW5nPXsxfSBzeD17eyBtYjogMyB9fT5cbiAgICAgICAgICA8QnV0dG9uIHZhcmlhbnQ9XCJvdXRsaW5lZFwiIG9uQ2xpY2s9eygpID0+IHNldERlcCgrbmV3IERhdGUoKSl9PlxuICAgICAgICAgICAgQ2hhbmdlIGRlcGVuZGVuY3lcbiAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICA8SWNvbkJ1dHRvbiBvbkNsaWNrPXsoKSA9PiByZWZldGNoKCl9PlxuICAgICAgICAgICAgPFJlZnJlc2hJY29uIC8+XG4gICAgICAgICAgPC9JY29uQnV0dG9uPlxuICAgICAgICAgIDxJY29uQnV0dG9uIG9uQ2xpY2s9eygpID0+IHNldERpc2FibGVkKChwcmV2KSA9PiAhcHJldil9PlxuICAgICAgICAgICAge2Rpc2FibGVkID8gPFBsYXlBcnJvd0ljb24gLz4gOiA8U3RvcEljb24gLz59XG4gICAgICAgICAgPC9JY29uQnV0dG9uPlxuICAgICAgICA8L1N0YWNrPlxuICAgICAgPC9SZXF1ZXN0PlxuICAgICAgPFR5cG9ncmFwaHk+XG4gICAgICAgIDxiPlJlZnJlc2ggaW46PC9iPntcIiBcIn1cbiAgICAgICAgPENvdW50ZG93blxuICAgICAgICAgIGRhdGU9e3RpbWVzdGFtcCA/ICt0aW1lc3RhbXAgKyByZWZyZXNoVGltZSA6IERhdGUubm93KCkgKyByZWZyZXNoVGltZX1cbiAgICAgICAgICBrZXk9e1N0cmluZyh0aW1lc3RhbXA/LmdldFRpbWUoKSl9XG4gICAgICAgIC8+XG4gICAgICA8L1R5cG9ncmFwaHk+XG4gICAgPC9WaWV3ZXI+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJDb3VudGRvd24iLCJUaW1lIiwidXNlRmV0Y2giLCJTdGFjayIsIkJ1dHRvbiIsIlR5cG9ncmFwaHkiLCJJY29uQnV0dG9uIiwiUmVmcmVzaEljb24iLCJQbGF5QXJyb3dJY29uIiwiU3RvcEljb24iLCJWaWV3ZXIiLCJSZXF1ZXN0IiwiZ2V0VXNlciIsInJlZnJlc2hUaW1lIiwiU0VDIiwiaW5pdGlhbERhdGUiLCJEYXRlIiwiRGV0YWlsc1BhZ2UiLCJkZXAiLCJzZXREZXAiLCJkaXNhYmxlZCIsInNldERpc2FibGVkIiwicmVzdWx0Iiwic2V0UXVlcnlQYXJhbXMiLCJkYXRlIiwiZGVwZW5kZW5jaWVzIiwicmVmcmVzaCIsInJldmFsaWRhdGUiLCJyZWZldGNoIiwidGltZXN0YW1wIiwibmFtZSIsImRpcmVjdGlvbiIsInNwYWNpbmciLCJzeCIsIm1iIiwidmFyaWFudCIsIm9uQ2xpY2siLCJwcmV2IiwiYiIsIm5vdyIsIlN0cmluZyIsImdldFRpbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./app/details/details.page.tsx\n");

/***/ }),

/***/ "(ssr)/./components/request.tsx":
/*!********************************!*\
  !*** ./components/request.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Request: () => (/* binding */ Request)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/material/CircularProgress */ \"(ssr)/../../node_modules/@mui/material/CircularProgress/CircularProgress.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Divider,List,ListItem,ListItemButton,ListItemIcon,ListItemText,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/Box/Box.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Divider,List,ListItem,ListItemButton,ListItemIcon,ListItemText,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/Typography/Typography.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Divider,List,ListItem,ListItemButton,ListItemIcon,ListItemText,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/List/List.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Divider,List,ListItem,ListItemButton,ListItemIcon,ListItemText,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/ListItem/ListItem.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Divider,List,ListItem,ListItemButton,ListItemIcon,ListItemText,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/ListItemButton/ListItemButton.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Divider,List,ListItem,ListItemButton,ListItemIcon,ListItemText,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/ListItemIcon/ListItemIcon.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Divider,List,ListItem,ListItemButton,ListItemIcon,ListItemText,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/ListItemText/ListItemText.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Divider,List,ListItem,ListItemButton,ListItemIcon,ListItemText,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/Divider/Divider.js\");\n/* harmony import */ var _mui_material_Accordion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material/Accordion */ \"(ssr)/../../node_modules/@mui/material/Accordion/Accordion.js\");\n/* harmony import */ var _mui_material_AccordionSummary__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/material/AccordionSummary */ \"(ssr)/../../node_modules/@mui/material/AccordionSummary/AccordionSummary.js\");\n/* harmony import */ var _mui_material_AccordionDetails__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @mui/material/AccordionDetails */ \"(ssr)/../../node_modules/@mui/material/AccordionDetails/AccordionDetails.js\");\n/* harmony import */ var _mui_icons_material_ExpandMore__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @mui/icons-material/ExpandMore */ \"(ssr)/../../node_modules/@mui/icons-material/ExpandMore.js\");\n/* harmony import */ var _mui_material_LinearProgress__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/material/LinearProgress */ \"(ssr)/../../node_modules/@mui/material/LinearProgress/LinearProgress.js\");\n/* harmony import */ var notistack__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! notistack */ \"(ssr)/../../node_modules/notistack/dist/notistack.esm.js\");\n/* harmony import */ var _mui_icons_material_HourglassBottom__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @mui/icons-material/HourglassBottom */ \"(ssr)/../../node_modules/@mui/icons-material/HourglassBottom.js\");\n/* harmony import */ var _mui_icons_material_Autorenew__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @mui/icons-material/Autorenew */ \"(ssr)/../../node_modules/@mui/icons-material/Autorenew.js\");\n/* harmony import */ var _mui_icons_material_Error__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @mui/icons-material/Error */ \"(ssr)/../../node_modules/@mui/icons-material/Error.js\");\n/* harmony import */ var _mui_icons_material_DataArray__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @mui/icons-material/DataArray */ \"(ssr)/../../node_modules/@mui/icons-material/DataArray.js\");\n/* harmony import */ var _mui_icons_material_AccessTime__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @mui/icons-material/AccessTime */ \"(ssr)/../../node_modules/@mui/icons-material/AccessTime.js\");\n/* __next_internal_client_entry_do_not_use__ Request auto */ \n/* eslint-disable react/destructuring-assignment */ /* eslint-disable react/jsx-props-no-spreading */ /* eslint-disable no-console */ /* eslint-disable react/require-default-props */ \n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction LinearProgressWithLabel(props) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        sx: {\n            display: \"flex\",\n            alignItems: \"center\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                sx: {\n                    width: \"100%\",\n                    mr: 1\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_LinearProgress__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    variant: \"determinate\",\n                    ...props\n                }, void 0, false, {\n                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                    lineNumber: 36,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                lineNumber: 35,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                sx: {\n                    minWidth: 35\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: `${Math.round(props.value)}%`\n                }, void 0, false, {\n                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                    lineNumber: 39,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                lineNumber: 38,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n        lineNumber: 34,\n        columnNumber: 5\n    }, this);\n}\nfunction Request({ name, children, result }) {\n    const { data, error, timestamp } = result;\n    const { enqueueSnackbar } = (0,notistack__WEBPACK_IMPORTED_MODULE_2__.useSnackbar)() || {};\n    const [mounted, setMounted] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n    const [fetched, setFetched] = react__WEBPACK_IMPORTED_MODULE_1__.useState(false);\n    const [downloadProgress, setDownloadProgress] = react__WEBPACK_IMPORTED_MODULE_1__.useState({});\n    const [uploadProgress, setUploadProgress] = react__WEBPACK_IMPORTED_MODULE_1__.useState({});\n    const loading = \"loading\" in result ? result.loading : result.submitting;\n    const loadingComponent = loading ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        sx: {\n            display: \"flex\",\n            gap: \"10px\"\n        },\n        children: [\n            \"True \",\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_CircularProgress__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                size: \"4\"\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                lineNumber: 60,\n                columnNumber: 12\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n        lineNumber: 59,\n        columnNumber: 5\n    }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        sx: {\n            display: \"flex\",\n            gap: \"10px\"\n        },\n        children: \"False\"\n    }, void 0, false, {\n        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n        lineNumber: 63,\n        columnNumber: 5\n    }, this);\n    const dataComponent = data ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_Accordion__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_AccordionSummary__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                expandIcon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_ExpandMore__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {}, void 0, false, {\n                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                    lineNumber: 68,\n                    columnNumber: 37\n                }, void 0),\n                \"aria-controls\": \"panel1a-content\",\n                id: \"panel1a-header\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    children: \"Show Data\"\n                }, void 0, false, {\n                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                    lineNumber: 69,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                lineNumber: 68,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_AccordionDetails__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"code\", {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                        style: {\n                            margin: 0\n                        },\n                        children: JSON.stringify(data, null, 2)\n                    }, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 73,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                    lineNumber: 72,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                lineNumber: 71,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n        lineNumber: 67,\n        columnNumber: 5\n    }, this) : \"---\";\n    const errorComponent = error ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_Accordion__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_AccordionSummary__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                expandIcon: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_ExpandMore__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {}, void 0, false, {\n                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                    lineNumber: 83,\n                    columnNumber: 37\n                }, void 0),\n                \"aria-controls\": \"panel1a-content\",\n                id: \"panel1a-header\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    children: \"Show Error\"\n                }, void 0, false, {\n                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                    lineNumber: 84,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                lineNumber: 83,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_AccordionDetails__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"code\", {\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                        style: {\n                            margin: 0\n                        },\n                        children: JSON.stringify(error instanceof Error ? {\n                            message: error.message\n                        } : error, null, 2)\n                    }, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 88,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                    lineNumber: 87,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                lineNumber: 86,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n        lineNumber: 82,\n        columnNumber: 5\n    }, this) : \"---\";\n    const onSuccess = \"onSuccess\" in result ? result?.onSuccess : result?.onSubmitSuccess;\n    const onError = \"onError\" in result ? result?.onError : result?.onSubmitError;\n    const onAbort = \"onAbort\" in result ? result?.onAbort : result?.onSubmitAbort;\n    const onFinished = \"onFinished\" in result ? result?.onFinished : result?.onSubmitFinished;\n    const onRequestStart = \"onRequestStart\" in result ? result?.onRequestStart : result?.onSubmitRequestStart;\n    const onResponseStart = \"onResponseStart\" in result ? result?.onResponseStart : result?.onSubmitResponseStart;\n    const onDownloadProgress = \"onDownloadProgress\" in result ? result?.onDownloadProgress : result?.onSubmitDownloadProgress;\n    const onUploadProgress = \"onUploadProgress\" in result ? result?.onUploadProgress : result?.onSubmitUploadProgress;\n    onRequestStart(()=>{\n        setFetched(true);\n        enqueueSnackbar(\"Request started\", {\n            variant: \"default\"\n        });\n    });\n    onResponseStart(()=>{\n        enqueueSnackbar(\"Response started\", {\n            variant: \"info\"\n        });\n    });\n    onSuccess(()=>{\n        enqueueSnackbar(\"Success\", {\n            variant: \"success\"\n        });\n    });\n    onError(()=>{\n        enqueueSnackbar(\"Error\", {\n            variant: \"error\"\n        });\n    });\n    onAbort(()=>{\n        enqueueSnackbar(\"Abort Error\", {\n            variant: \"error\"\n        });\n    });\n    onFinished(()=>{\n        enqueueSnackbar(\"Finished\", {\n            variant: \"warning\"\n        });\n    });\n    onDownloadProgress((progress, details)=>{\n        setDownloadProgress((prev)=>({\n                ...prev,\n                [details.requestId]: progress\n            }));\n        if (progress.total === progress.loaded) {\n            setTimeout(()=>{\n                setUploadProgress((prev)=>{\n                    const newProgress = {\n                        ...prev\n                    };\n                    delete newProgress[details.requestId];\n                    return newProgress;\n                });\n                setDownloadProgress((prev)=>{\n                    const newProgress = {\n                        ...prev\n                    };\n                    delete newProgress[details.requestId];\n                    return newProgress;\n                });\n            }, 4000);\n        }\n    });\n    onUploadProgress((progress, details)=>{\n        setUploadProgress((prev)=>({\n                ...prev,\n                [details.requestId]: progress\n            }));\n    });\n    react__WEBPACK_IMPORTED_MODULE_1__.useEffect(()=>{\n        setMounted(true);\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n        sx: {\n            mb: 4\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                variant: \"h4\",\n                textTransform: \"uppercase\",\n                fontWeight: \"800\",\n                children: name\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                lineNumber: 161,\n                columnNumber: 7\n            }, this),\n            children && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                sx: {\n                    mt: 2,\n                    mb: 2\n                },\n                children: children\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                lineNumber: 164,\n                columnNumber: 20\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                        disablePadding: true,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_HourglassBottom__WEBPACK_IMPORTED_MODULE_15__[\"default\"], {}, void 0, false, {\n                                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                        lineNumber: 169,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 168,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    primary: \"Initially Fetched\",\n                                    sx: {\n                                        minWidth: \"150px\",\n                                        maxWidth: \"150px\"\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 171,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                    orientation: \"vertical\",\n                                    flexItem: true,\n                                    sx: {\n                                        margin: \"0 20px 0 10px\"\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 172,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    secondary: String(fetched)\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 173,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                            lineNumber: 167,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 166,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {}, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 176,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                        disablePadding: true,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_Autorenew__WEBPACK_IMPORTED_MODULE_18__[\"default\"], {}, void 0, false, {\n                                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                        lineNumber: 180,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 179,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    primary: \"Loading\",\n                                    sx: {\n                                        minWidth: \"150px\",\n                                        maxWidth: \"150px\"\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 182,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                    orientation: \"vertical\",\n                                    flexItem: true,\n                                    sx: {\n                                        margin: \"0 20px 0 10px\"\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 183,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    primary: loadingComponent\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 184,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                            lineNumber: 178,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 177,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {}, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 187,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                        disablePadding: true,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_Error__WEBPACK_IMPORTED_MODULE_19__[\"default\"], {}, void 0, false, {\n                                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                        lineNumber: 191,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 190,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    primary: \"Error\",\n                                    sx: {\n                                        minWidth: \"150px\",\n                                        maxWidth: \"150px\"\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 193,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                    orientation: \"vertical\",\n                                    flexItem: true,\n                                    sx: {\n                                        margin: \"0 20px 0 10px\"\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 194,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    primary: errorComponent\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 195,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                            lineNumber: 189,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 188,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {}, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 198,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                        disablePadding: true,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_DataArray__WEBPACK_IMPORTED_MODULE_20__[\"default\"], {}, void 0, false, {\n                                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                        lineNumber: 202,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 201,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    primary: \"Data\",\n                                    sx: {\n                                        minWidth: \"150px\",\n                                        maxWidth: \"150px\"\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 204,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                    orientation: \"vertical\",\n                                    flexItem: true,\n                                    sx: {\n                                        margin: \"0 20px 0 10px\"\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 205,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    primary: dataComponent\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 206,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                            lineNumber: 200,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 199,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {}, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 209,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                        disablePadding: true,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_13__[\"default\"], {\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_14__[\"default\"], {\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_icons_material_AccessTime__WEBPACK_IMPORTED_MODULE_21__[\"default\"], {}, void 0, false, {\n                                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                        lineNumber: 213,\n                                        columnNumber: 15\n                                    }, this)\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 212,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    primary: \"Timestamp\",\n                                    sx: {\n                                        minWidth: \"150px\",\n                                        maxWidth: \"150px\"\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 215,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {\n                                    orientation: \"vertical\",\n                                    flexItem: true,\n                                    sx: {\n                                        margin: \"0 20px 0 10px\"\n                                    }\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 216,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_16__[\"default\"], {\n                                    secondary: mounted && timestamp ? `${timestamp?.toDateString()} ${timestamp?.toLocaleTimeString()}` : \"---\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                                    lineNumber: 217,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                            lineNumber: 211,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 210,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {}, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 224,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                        variant: \"subtitle2\",\n                        textTransform: \"uppercase\",\n                        fontWeight: \"800\",\n                        children: \"Uploads\"\n                    }, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 225,\n                        columnNumber: 9\n                    }, this),\n                    Object.keys(uploadProgress).map((key)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LinearProgressWithLabel, {\n                            value: uploadProgress[key].progress\n                        }, key, false, {\n                            fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                            lineNumber: 229,\n                            columnNumber: 11\n                        }, this)),\n                    !Object.keys(uploadProgress).length && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                        variant: \"caption\",\n                        color: \"GrayText\",\n                        children: \"No uploaded entities\"\n                    }, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 232,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                        variant: \"subtitle2\",\n                        textTransform: \"uppercase\",\n                        fontWeight: \"800\",\n                        children: \"Downloads\"\n                    }, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 236,\n                        columnNumber: 9\n                    }, this),\n                    Object.keys(downloadProgress).map((key)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(LinearProgressWithLabel, {\n                            value: downloadProgress[key].progress\n                        }, key, false, {\n                            fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                            lineNumber: 240,\n                            columnNumber: 11\n                        }, this)),\n                    !Object.keys(downloadProgress).length && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                        variant: \"caption\",\n                        color: \"GrayText\",\n                        children: \"No downloaded entities\"\n                    }, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 243,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Divider_List_ListItem_ListItemButton_ListItemIcon_ListItemText_Typography_mui_material__WEBPACK_IMPORTED_MODULE_17__[\"default\"], {}, void 0, false, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                        lineNumber: 247,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n                lineNumber: 165,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/request.tsx\",\n        lineNumber: 160,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./components/request.tsx\n");

/***/ }),

/***/ "(ssr)/./components/sidebar.tsx":
/*!********************************!*\
  !*** ./components/sidebar.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Sidebar: () => (/* binding */ Sidebar)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mui_material_Box__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/material/Box */ \"(ssr)/../../node_modules/@mui/material/Box/Box.js\");\n/* harmony import */ var _mui_material_List__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/material/List */ \"(ssr)/../../node_modules/@mui/material/List/List.js\");\n/* harmony import */ var _mui_material_ListItem__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @mui/material/ListItem */ \"(ssr)/../../node_modules/@mui/material/ListItem/ListItem.js\");\n/* harmony import */ var _mui_material_ListItemButton__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @mui/material/ListItemButton */ \"(ssr)/../../node_modules/@mui/material/ListItemButton/ListItemButton.js\");\n/* harmony import */ var _mui_material_ListItemText__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @mui/material/ListItemText */ \"(ssr)/../../node_modules/@mui/material/ListItemText/ListItemText.js\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(ssr)/../../node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _constants_routing_constants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants/routing.constants */ \"(ssr)/./constants/routing.constants.ts\");\n/* __next_internal_client_entry_do_not_use__ Sidebar auto */ \n\n\n\n\n\n\n\n\nconst links = [\n    _constants_routing_constants__WEBPACK_IMPORTED_MODULE_3__.SSR_PAGE,\n    _constants_routing_constants__WEBPACK_IMPORTED_MODULE_3__.DETAILS_PAGE,\n    _constants_routing_constants__WEBPACK_IMPORTED_MODULE_3__.LIST_PAGE,\n    _constants_routing_constants__WEBPACK_IMPORTED_MODULE_3__.FORM_PAGE\n];\nconst drawerWidth = 240;\nconst Sidebar = ({ children })=>{\n    const { push } = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n        sx: {\n            display: \"flex\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_Box__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                sx: {\n                    width: {\n                        sm: drawerWidth\n                    },\n                    flexShrink: {\n                        sm: 0\n                    },\n                    height: \"100%\"\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_List__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    children: links.map((link)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_ListItem__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                            disablePadding: true,\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_ListItemButton__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                                onClick: ()=>push(link.path),\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_mui_material_ListItemText__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                    primary: link.name\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/sidebar.tsx\",\n                                    lineNumber: 32,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/sidebar.tsx\",\n                                lineNumber: 31,\n                                columnNumber: 15\n                            }, undefined)\n                        }, link.path, false, {\n                            fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/sidebar.tsx\",\n                            lineNumber: 30,\n                            columnNumber: 13\n                        }, undefined))\n                }, void 0, false, {\n                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/sidebar.tsx\",\n                    lineNumber: 28,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/sidebar.tsx\",\n                lineNumber: 21,\n                columnNumber: 7\n            }, undefined),\n            children\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/sidebar.tsx\",\n        lineNumber: 20,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL3NpZGViYXIudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFMEI7QUFDVTtBQUNFO0FBQ1E7QUFDWTtBQUNKO0FBQ1Y7QUFFa0Q7QUFFOUYsTUFBTVcsUUFBUTtJQUFDRCxrRUFBUUE7SUFBRUgsc0VBQVlBO0lBQUVFLG1FQUFTQTtJQUFFRCxtRUFBU0E7Q0FBQztBQUM1RCxNQUFNSSxjQUFjO0FBRWIsTUFBTUMsVUFBVSxDQUFDLEVBQUVDLFFBQVEsRUFBb0Q7SUFDcEYsTUFBTSxFQUFFQyxJQUFJLEVBQUUsR0FBR1QsMERBQVNBO0lBRTFCLHFCQUNFLDhEQUFDTCx5REFBR0E7UUFBQ2UsSUFBSTtZQUFFQyxTQUFTO1FBQU87OzBCQUN6Qiw4REFBQ2hCLHlEQUFHQTtnQkFDRmUsSUFBSTtvQkFDRkUsT0FBTzt3QkFBRUMsSUFBSVA7b0JBQVk7b0JBQ3pCUSxZQUFZO3dCQUFFRCxJQUFJO29CQUFFO29CQUNwQkUsUUFBUTtnQkFDVjswQkFFQSw0RUFBQ25CLDBEQUFJQTs4QkFDRlMsTUFBTVcsR0FBRyxDQUFDLENBQUNDLHFCQUNWLDhEQUFDcEIsOERBQVFBOzRCQUFDcUIsY0FBYztzQ0FDdEIsNEVBQUNwQixvRUFBY0E7Z0NBQUNxQixTQUFTLElBQU1WLEtBQUtRLEtBQUtHLElBQUk7MENBQzNDLDRFQUFDckIsa0VBQVlBO29DQUFDc0IsU0FBU0osS0FBS0ssSUFBSTs7Ozs7Ozs7Ozs7MkJBRk5MLEtBQUtHLElBQUk7Ozs7Ozs7Ozs7Ozs7OztZQVE1Q1o7Ozs7Ozs7QUFHUCxFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY29tcG9uZW50cy9zaWRlYmFyLnRzeD83YTg3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG5pbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgQm94IGZyb20gXCJAbXVpL21hdGVyaWFsL0JveFwiO1xuaW1wb3J0IExpc3QgZnJvbSBcIkBtdWkvbWF0ZXJpYWwvTGlzdFwiO1xuaW1wb3J0IExpc3RJdGVtIGZyb20gXCJAbXVpL21hdGVyaWFsL0xpc3RJdGVtXCI7XG5pbXBvcnQgTGlzdEl0ZW1CdXR0b24gZnJvbSBcIkBtdWkvbWF0ZXJpYWwvTGlzdEl0ZW1CdXR0b25cIjtcbmltcG9ydCBMaXN0SXRlbVRleHQgZnJvbSBcIkBtdWkvbWF0ZXJpYWwvTGlzdEl0ZW1UZXh0XCI7XG5pbXBvcnQgeyB1c2VSb3V0ZXIgfSBmcm9tIFwibmV4dC9uYXZpZ2F0aW9uXCI7XG5cbmltcG9ydCB7IERFVEFJTFNfUEFHRSwgRk9STV9QQUdFLCBMSVNUX1BBR0UsIFNTUl9QQUdFIH0gZnJvbSBcIi4uL2NvbnN0YW50cy9yb3V0aW5nLmNvbnN0YW50c1wiO1xuXG5jb25zdCBsaW5rcyA9IFtTU1JfUEFHRSwgREVUQUlMU19QQUdFLCBMSVNUX1BBR0UsIEZPUk1fUEFHRV07XG5jb25zdCBkcmF3ZXJXaWR0aCA9IDI0MDtcblxuZXhwb3J0IGNvbnN0IFNpZGViYXIgPSAoeyBjaGlsZHJlbiB9OiB7IGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGUgfCB1bmRlZmluZWQgfCBudWxsIH0pID0+IHtcbiAgY29uc3QgeyBwdXNoIH0gPSB1c2VSb3V0ZXIoKTtcblxuICByZXR1cm4gKFxuICAgIDxCb3ggc3g9e3sgZGlzcGxheTogXCJmbGV4XCIgfX0+XG4gICAgICA8Qm94XG4gICAgICAgIHN4PXt7XG4gICAgICAgICAgd2lkdGg6IHsgc206IGRyYXdlcldpZHRoIH0sXG4gICAgICAgICAgZmxleFNocmluazogeyBzbTogMCB9LFxuICAgICAgICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgICAgIH19XG4gICAgICA+XG4gICAgICAgIDxMaXN0PlxuICAgICAgICAgIHtsaW5rcy5tYXAoKGxpbmspID0+IChcbiAgICAgICAgICAgIDxMaXN0SXRlbSBkaXNhYmxlUGFkZGluZyBrZXk9e2xpbmsucGF0aH0+XG4gICAgICAgICAgICAgIDxMaXN0SXRlbUJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBwdXNoKGxpbmsucGF0aCl9PlxuICAgICAgICAgICAgICAgIDxMaXN0SXRlbVRleHQgcHJpbWFyeT17bGluay5uYW1lfSAvPlxuICAgICAgICAgICAgICA8L0xpc3RJdGVtQnV0dG9uPlxuICAgICAgICAgICAgPC9MaXN0SXRlbT5cbiAgICAgICAgICApKX1cbiAgICAgICAgPC9MaXN0PlxuICAgICAgPC9Cb3g+XG4gICAgICB7Y2hpbGRyZW59XG4gICAgPC9Cb3g+XG4gICk7XG59O1xuIl0sIm5hbWVzIjpbIlJlYWN0IiwiQm94IiwiTGlzdCIsIkxpc3RJdGVtIiwiTGlzdEl0ZW1CdXR0b24iLCJMaXN0SXRlbVRleHQiLCJ1c2VSb3V0ZXIiLCJERVRBSUxTX1BBR0UiLCJGT1JNX1BBR0UiLCJMSVNUX1BBR0UiLCJTU1JfUEFHRSIsImxpbmtzIiwiZHJhd2VyV2lkdGgiLCJTaWRlYmFyIiwiY2hpbGRyZW4iLCJwdXNoIiwic3giLCJkaXNwbGF5Iiwid2lkdGgiLCJzbSIsImZsZXhTaHJpbmsiLCJoZWlnaHQiLCJtYXAiLCJsaW5rIiwiZGlzYWJsZVBhZGRpbmciLCJvbkNsaWNrIiwicGF0aCIsInByaW1hcnkiLCJuYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./components/sidebar.tsx\n");

/***/ }),

/***/ "(ssr)/./components/viewer.tsx":
/*!*******************************!*\
  !*** ./components/viewer.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Viewer: () => (/* binding */ Viewer)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(ssr)/../../node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Button,Chip,Container,Stack,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/Box/Box.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Button,Chip,Container,Stack,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/Typography/Typography.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Button,Chip,Container,Stack,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/Chip/Chip.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Button,Chip,Container,Stack,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/Stack/Stack.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Button,Chip,Container,Stack,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/Button/Button.js\");\n/* harmony import */ var _barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! __barrel_optimize__?names=Box,Button,Chip,Container,Stack,Typography!=!@mui/material */ \"(ssr)/../../node_modules/@mui/material/Container/Container.js\");\n/* harmony import */ var _hyper_fetch_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @hyper-fetch/react */ \"(ssr)/../../packages/react/dist/index.esm.js\");\n/* harmony import */ var _sidebar__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sidebar */ \"(ssr)/./components/sidebar.tsx\");\n/* harmony import */ var _constants_routing_constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants/routing.constants */ \"(ssr)/./constants/routing.constants.ts\");\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../api */ \"(ssr)/./api/index.ts\");\n/* __next_internal_client_entry_do_not_use__ Viewer auto */ \n/* eslint-disable react/require-default-props */ \n\n\n\n\n\n\nconst Viewer = ({ name, children, noButtons })=>{\n    const [mount, setMount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const { isOnline, isFocused } = (0,_hyper_fetch_react__WEBPACK_IMPORTED_MODULE_3__.useAppManager)(_api__WEBPACK_IMPORTED_MODULE_6__.client);\n    const { push } = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const handleToggle = ()=>{\n        setMount((prev)=>!prev);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                sx: {\n                    background: \"#eaeaea\",\n                    pt: \"30px\",\n                    pb: \"40px\",\n                    pl: 3,\n                    pr: 3\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                        variant: \"h3\",\n                        sx: {\n                            fontWeight: \"800\"\n                        },\n                        children: [\n                            name,\n                            !isFocused && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                label: \"Blur\",\n                                color: \"primary\"\n                            }, void 0, false, {\n                                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n                                lineNumber: 32,\n                                columnNumber: 26\n                            }, undefined),\n                            !isOnline && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                label: \"Offline\",\n                                color: \"error\"\n                            }, void 0, false, {\n                                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n                                lineNumber: 33,\n                                columnNumber: 25\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n                        lineNumber: 30,\n                        columnNumber: 9\n                    }, undefined),\n                    !noButtons && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                        direction: \"row\",\n                        spacing: 2,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                                    size: \"small\",\n                                    variant: \"contained\",\n                                    type: \"button\",\n                                    onClick: ()=>push(_constants_routing_constants__WEBPACK_IMPORTED_MODULE_5__.DASHBOARD_PAGE.path),\n                                    children: \"Go To dashboard\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n                                    lineNumber: 38,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n                                lineNumber: 37,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                                    color: mount ? \"success\" : \"error\",\n                                    size: \"small\",\n                                    variant: \"contained\",\n                                    type: \"button\",\n                                    onClick: handleToggle,\n                                    children: mount ? \"Unmount\" : \"Mount\"\n                                }, void 0, false, {\n                                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n                                    lineNumber: 43,\n                                    columnNumber: 15\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n                                lineNumber: 42,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n                        lineNumber: 36,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n                lineNumber: 29,\n                columnNumber: 7\n            }, undefined),\n            !noButtons && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_sidebar__WEBPACK_IMPORTED_MODULE_4__.Sidebar, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                    sx: {\n                        pt: 4,\n                        borderLeft: \"1px solid rgba(0, 0, 0, 0.12)\"\n                    },\n                    children: mount && children\n                }, void 0, false, {\n                    fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n                    lineNumber: 59,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n                lineNumber: 58,\n                columnNumber: 9\n            }, undefined),\n            noButtons && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Box_Button_Chip_Container_Stack_Typography_mui_material__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                sx: {\n                    pt: 4,\n                    borderLeft: \"1px solid rgba(0, 0, 0, 0.12)\"\n                },\n                children: mount && children\n            }, void 0, false, {\n                fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n                lineNumber: 70,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/components/viewer.tsx\",\n        lineNumber: 28,\n        columnNumber: 5\n    }, undefined);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL3ZpZXdlci50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSw4Q0FBOEMsR0FDTjtBQUNJO0FBQ29DO0FBQzdCO0FBRWY7QUFDNEI7QUFDaEM7QUFFekIsTUFBTWEsU0FBcUYsQ0FBQyxFQUNqR0MsSUFBSSxFQUNKQyxRQUFRLEVBQ1JDLFNBQVMsRUFDVjtJQUNDLE1BQU0sQ0FBQ0MsT0FBT0MsU0FBUyxHQUFHakIsK0NBQVFBLENBQUM7SUFDbkMsTUFBTSxFQUFFa0IsUUFBUSxFQUFFQyxTQUFTLEVBQUUsR0FBR1gsaUVBQWFBLENBQUNHLHdDQUFNQTtJQUVwRCxNQUFNLEVBQUVTLElBQUksRUFBRSxHQUFHbkIsMERBQVNBO0lBRTFCLE1BQU1vQixlQUFlO1FBQ25CSixTQUFTLENBQUNLLE9BQVMsQ0FBQ0E7SUFDdEI7SUFFQSxxQkFDRSw4REFBQ2xCLHNIQUFHQTs7MEJBQ0YsOERBQUNBLHNIQUFHQTtnQkFBQ21CLElBQUk7b0JBQUVDLFlBQVk7b0JBQVdDLElBQUk7b0JBQVFDLElBQUk7b0JBQVFDLElBQUk7b0JBQUdDLElBQUk7Z0JBQUU7O2tDQUNyRSw4REFBQ3ZCLHNIQUFVQTt3QkFBQ3dCLFNBQVE7d0JBQUtOLElBQUk7NEJBQUVPLFlBQVk7d0JBQU07OzRCQUM5Q2pCOzRCQUNBLENBQUNNLDJCQUFhLDhEQUFDWixzSEFBSUE7Z0NBQUN3QixPQUFNO2dDQUFPQyxPQUFNOzs7Ozs7NEJBQ3ZDLENBQUNkLDBCQUFZLDhEQUFDWCxzSEFBSUE7Z0NBQUN3QixPQUFNO2dDQUFVQyxPQUFNOzs7Ozs7Ozs7Ozs7b0JBRTNDLENBQUNqQiwyQkFDQSw4REFBQ1osdUhBQUtBO3dCQUFDOEIsV0FBVTt3QkFBTUMsU0FBUzs7MENBQzlCLDhEQUFDOUIsc0hBQUdBOzBDQUNGLDRFQUFDRix1SEFBTUE7b0NBQUNpQyxNQUFLO29DQUFRTixTQUFRO29DQUFZTyxNQUFLO29DQUFTQyxTQUFTLElBQU1qQixLQUFLVix3RUFBY0EsQ0FBQzRCLElBQUk7OENBQUc7Ozs7Ozs7Ozs7OzBDQUluRyw4REFBQ2xDLHNIQUFHQTswQ0FDRiw0RUFBQ0YsdUhBQU1BO29DQUNMOEIsT0FBT2hCLFFBQVEsWUFBWTtvQ0FDM0JtQixNQUFLO29DQUNMTixTQUFRO29DQUNSTyxNQUFLO29DQUNMQyxTQUFTaEI7OENBRVJMLFFBQVEsWUFBWTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7WUFPOUIsQ0FBQ0QsMkJBQ0EsOERBQUNOLDZDQUFPQTswQkFDTiw0RUFBQ0gsdUhBQVNBO29CQUNSaUIsSUFBSTt3QkFDRkUsSUFBSTt3QkFDSmMsWUFBWTtvQkFDZDs4QkFFQ3ZCLFNBQVNGOzs7Ozs7Ozs7OztZQUlmQywyQkFDQyw4REFBQ1QsdUhBQVNBO2dCQUNSaUIsSUFBSTtvQkFDRkUsSUFBSTtvQkFDSmMsWUFBWTtnQkFDZDswQkFFQ3ZCLFNBQVNGOzs7Ozs7Ozs7Ozs7QUFLcEIsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL2NvbXBvbmVudHMvdmlld2VyLnRzeD9lYjBiIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG4vKiBlc2xpbnQtZGlzYWJsZSByZWFjdC9yZXF1aXJlLWRlZmF1bHQtcHJvcHMgKi9cbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSBcIm5leHQvbmF2aWdhdGlvblwiO1xuaW1wb3J0IHsgQnV0dG9uLCBTdGFjaywgQm94LCBUeXBvZ3JhcGh5LCBDb250YWluZXIsIENoaXAgfSBmcm9tIFwiQG11aS9tYXRlcmlhbFwiO1xuaW1wb3J0IHsgdXNlQXBwTWFuYWdlciB9IGZyb20gXCJAaHlwZXItZmV0Y2gvcmVhY3RcIjtcblxuaW1wb3J0IHsgU2lkZWJhciB9IGZyb20gXCIuL3NpZGViYXJcIjtcbmltcG9ydCB7IERBU0hCT0FSRF9QQUdFIH0gZnJvbSBcIi4uL2NvbnN0YW50cy9yb3V0aW5nLmNvbnN0YW50c1wiO1xuaW1wb3J0IHsgY2xpZW50IH0gZnJvbSBcIi4uL2FwaVwiO1xuXG5leHBvcnQgY29uc3QgVmlld2VyOiBSZWFjdC5GQzx7IG5hbWU6IHN0cmluZzsgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZTsgbm9CdXR0b25zPzogYm9vbGVhbiB9PiA9ICh7XG4gIG5hbWUsXG4gIGNoaWxkcmVuLFxuICBub0J1dHRvbnMsXG59KSA9PiB7XG4gIGNvbnN0IFttb3VudCwgc2V0TW91bnRdID0gdXNlU3RhdGUodHJ1ZSk7XG4gIGNvbnN0IHsgaXNPbmxpbmUsIGlzRm9jdXNlZCB9ID0gdXNlQXBwTWFuYWdlcihjbGllbnQpO1xuXG4gIGNvbnN0IHsgcHVzaCB9ID0gdXNlUm91dGVyKCk7XG5cbiAgY29uc3QgaGFuZGxlVG9nZ2xlID0gKCkgPT4ge1xuICAgIHNldE1vdW50KChwcmV2KSA9PiAhcHJldik7XG4gIH07XG5cbiAgcmV0dXJuIChcbiAgICA8Qm94PlxuICAgICAgPEJveCBzeD17eyBiYWNrZ3JvdW5kOiBcIiNlYWVhZWFcIiwgcHQ6IFwiMzBweFwiLCBwYjogXCI0MHB4XCIsIHBsOiAzLCBwcjogMyB9fT5cbiAgICAgICAgPFR5cG9ncmFwaHkgdmFyaWFudD1cImgzXCIgc3g9e3sgZm9udFdlaWdodDogXCI4MDBcIiB9fT5cbiAgICAgICAgICB7bmFtZX1cbiAgICAgICAgICB7IWlzRm9jdXNlZCAmJiA8Q2hpcCBsYWJlbD1cIkJsdXJcIiBjb2xvcj1cInByaW1hcnlcIiAvPn1cbiAgICAgICAgICB7IWlzT25saW5lICYmIDxDaGlwIGxhYmVsPVwiT2ZmbGluZVwiIGNvbG9yPVwiZXJyb3JcIiAvPn1cbiAgICAgICAgPC9UeXBvZ3JhcGh5PlxuICAgICAgICB7IW5vQnV0dG9ucyAmJiAoXG4gICAgICAgICAgPFN0YWNrIGRpcmVjdGlvbj1cInJvd1wiIHNwYWNpbmc9ezJ9PlxuICAgICAgICAgICAgPEJveD5cbiAgICAgICAgICAgICAgPEJ1dHRvbiBzaXplPVwic21hbGxcIiB2YXJpYW50PVwiY29udGFpbmVkXCIgdHlwZT1cImJ1dHRvblwiIG9uQ2xpY2s9eygpID0+IHB1c2goREFTSEJPQVJEX1BBR0UucGF0aCl9PlxuICAgICAgICAgICAgICAgIEdvIFRvIGRhc2hib2FyZFxuICAgICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgICAgIDwvQm94PlxuICAgICAgICAgICAgPEJveD5cbiAgICAgICAgICAgICAgPEJ1dHRvblxuICAgICAgICAgICAgICAgIGNvbG9yPXttb3VudCA/IFwic3VjY2Vzc1wiIDogXCJlcnJvclwifVxuICAgICAgICAgICAgICAgIHNpemU9XCJzbWFsbFwiXG4gICAgICAgICAgICAgICAgdmFyaWFudD1cImNvbnRhaW5lZFwiXG4gICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgb25DbGljaz17aGFuZGxlVG9nZ2xlfVxuICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge21vdW50ID8gXCJVbm1vdW50XCIgOiBcIk1vdW50XCJ9XG4gICAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICAgICAgPC9Cb3g+XG4gICAgICAgICAgPC9TdGFjaz5cbiAgICAgICAgKX1cbiAgICAgIDwvQm94PlxuXG4gICAgICB7IW5vQnV0dG9ucyAmJiAoXG4gICAgICAgIDxTaWRlYmFyPlxuICAgICAgICAgIDxDb250YWluZXJcbiAgICAgICAgICAgIHN4PXt7XG4gICAgICAgICAgICAgIHB0OiA0LFxuICAgICAgICAgICAgICBib3JkZXJMZWZ0OiBcIjFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIDAuMTIpXCIsXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHttb3VudCAmJiBjaGlsZHJlbn1cbiAgICAgICAgICA8L0NvbnRhaW5lcj5cbiAgICAgICAgPC9TaWRlYmFyPlxuICAgICAgKX1cbiAgICAgIHtub0J1dHRvbnMgJiYgKFxuICAgICAgICA8Q29udGFpbmVyXG4gICAgICAgICAgc3g9e3tcbiAgICAgICAgICAgIHB0OiA0LFxuICAgICAgICAgICAgYm9yZGVyTGVmdDogXCIxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjEyKVwiLFxuICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICB7bW91bnQgJiYgY2hpbGRyZW59XG4gICAgICAgIDwvQ29udGFpbmVyPlxuICAgICAgKX1cbiAgICA8L0JveD5cbiAgKTtcbn07XG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZVJvdXRlciIsIkJ1dHRvbiIsIlN0YWNrIiwiQm94IiwiVHlwb2dyYXBoeSIsIkNvbnRhaW5lciIsIkNoaXAiLCJ1c2VBcHBNYW5hZ2VyIiwiU2lkZWJhciIsIkRBU0hCT0FSRF9QQUdFIiwiY2xpZW50IiwiVmlld2VyIiwibmFtZSIsImNoaWxkcmVuIiwibm9CdXR0b25zIiwibW91bnQiLCJzZXRNb3VudCIsImlzT25saW5lIiwiaXNGb2N1c2VkIiwicHVzaCIsImhhbmRsZVRvZ2dsZSIsInByZXYiLCJzeCIsImJhY2tncm91bmQiLCJwdCIsInBiIiwicGwiLCJwciIsInZhcmlhbnQiLCJmb250V2VpZ2h0IiwibGFiZWwiLCJjb2xvciIsImRpcmVjdGlvbiIsInNwYWNpbmciLCJzaXplIiwidHlwZSIsIm9uQ2xpY2siLCJwYXRoIiwiYm9yZGVyTGVmdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./components/viewer.tsx\n");

/***/ }),

/***/ "(ssr)/./constants/routing.constants.ts":
/*!****************************************!*\
  !*** ./constants/routing.constants.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DASHBOARD_PAGE: () => (/* binding */ DASHBOARD_PAGE),\n/* harmony export */   DETAILS_PAGE: () => (/* binding */ DETAILS_PAGE),\n/* harmony export */   FORM_PAGE: () => (/* binding */ FORM_PAGE),\n/* harmony export */   LIST_PAGE: () => (/* binding */ LIST_PAGE),\n/* harmony export */   SSR_PAGE: () => (/* binding */ SSR_PAGE)\n/* harmony export */ });\nconst DASHBOARD_PAGE = {\n    name: \"Dashboard\",\n    path: \"/\"\n};\nconst SSR_PAGE = {\n    name: \"Server side\",\n    path: \"/ssr\"\n};\nconst DETAILS_PAGE = {\n    name: \"Details\",\n    path: \"/details\"\n};\nconst LIST_PAGE = {\n    name: \"List\",\n    path: \"/list\"\n};\nconst FORM_PAGE = {\n    name: \"Form\",\n    path: \"/form\"\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb25zdGFudHMvcm91dGluZy5jb25zdGFudHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBTyxNQUFNQSxpQkFBaUI7SUFDNUJDLE1BQU07SUFDTkMsTUFBTTtBQUNSLEVBQUU7QUFDSyxNQUFNQyxXQUFXO0lBQ3RCRixNQUFNO0lBQ05DLE1BQU07QUFDUixFQUFFO0FBQ0ssTUFBTUUsZUFBZTtJQUMxQkgsTUFBTTtJQUNOQyxNQUFNO0FBQ1IsRUFBRTtBQUNLLE1BQU1HLFlBQVk7SUFDdkJKLE1BQU07SUFDTkMsTUFBTTtBQUNSLEVBQUU7QUFDSyxNQUFNSSxZQUFZO0lBQ3ZCTCxNQUFNO0lBQ05DLE1BQU07QUFDUixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vY29uc3RhbnRzL3JvdXRpbmcuY29uc3RhbnRzLnRzPzgwYjkiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IERBU0hCT0FSRF9QQUdFID0ge1xuICBuYW1lOiBcIkRhc2hib2FyZFwiLFxuICBwYXRoOiBcIi9cIixcbn07XG5leHBvcnQgY29uc3QgU1NSX1BBR0UgPSB7XG4gIG5hbWU6IFwiU2VydmVyIHNpZGVcIixcbiAgcGF0aDogXCIvc3NyXCIsXG59O1xuZXhwb3J0IGNvbnN0IERFVEFJTFNfUEFHRSA9IHtcbiAgbmFtZTogXCJEZXRhaWxzXCIsXG4gIHBhdGg6IFwiL2RldGFpbHNcIixcbn07XG5leHBvcnQgY29uc3QgTElTVF9QQUdFID0ge1xuICBuYW1lOiBcIkxpc3RcIixcbiAgcGF0aDogXCIvbGlzdFwiLFxufTtcbmV4cG9ydCBjb25zdCBGT1JNX1BBR0UgPSB7XG4gIG5hbWU6IFwiRm9ybVwiLFxuICBwYXRoOiBcIi9mb3JtXCIsXG59O1xuIl0sIm5hbWVzIjpbIkRBU0hCT0FSRF9QQUdFIiwibmFtZSIsInBhdGgiLCJTU1JfUEFHRSIsIkRFVEFJTFNfUEFHRSIsIkxJU1RfUEFHRSIsIkZPUk1fUEFHRSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./constants/routing.constants.ts\n");

/***/ }),

/***/ "(ssr)/./utils/index.ts":
/*!************************!*\
  !*** ./utils/index.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomUser: () => (/* reexport safe */ _users_utils__WEBPACK_IMPORTED_MODULE_1__.getRandomUser),\n/* harmony export */   getRandomUsers: () => (/* reexport safe */ _users_utils__WEBPACK_IMPORTED_MODULE_1__.getRandomUsers),\n/* harmony export */   getWord: () => (/* reexport safe */ _random_utils__WEBPACK_IMPORTED_MODULE_0__.getWord),\n/* harmony export */   getWords: () => (/* reexport safe */ _random_utils__WEBPACK_IMPORTED_MODULE_0__.getWords),\n/* harmony export */   randomParagraph: () => (/* reexport safe */ _random_utils__WEBPACK_IMPORTED_MODULE_0__.randomParagraph),\n/* harmony export */   randomSentence: () => (/* reexport safe */ _random_utils__WEBPACK_IMPORTED_MODULE_0__.randomSentence),\n/* harmony export */   randomWords: () => (/* reexport safe */ _random_utils__WEBPACK_IMPORTED_MODULE_0__.randomWords)\n/* harmony export */ });\n/* harmony import */ var _random_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random.utils */ \"(ssr)/./utils/random.utils.ts\");\n/* harmony import */ var _users_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./users.utils */ \"(ssr)/./utils/users.utils.ts\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi91dGlscy9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBK0I7QUFDRCIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWxzL2luZGV4LnRzPzU2ZDciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vcmFuZG9tLnV0aWxzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91c2Vycy51dGlsc1wiO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./utils/index.ts\n");

/***/ }),

/***/ "(ssr)/./utils/random.utils.ts":
/*!*******************************!*\
  !*** ./utils/random.utils.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getWord: () => (/* binding */ getWord),\n/* harmony export */   getWords: () => (/* binding */ getWords),\n/* harmony export */   randomParagraph: () => (/* binding */ randomParagraph),\n/* harmony export */   randomSentence: () => (/* binding */ randomSentence),\n/* harmony export */   randomWords: () => (/* binding */ randomWords)\n/* harmony export */ });\nconst arrayOf = (length, mapFunc)=>Array.from({\n        length\n    }, (_, index)=>mapFunc(index));\nconst lerp = (min, max, t)=>{\n    return min * (1 - t) + max * t;\n};\nconst round = (value, decimalPoint = 0)=>{\n    if (decimalPoint >= 0) {\n        return Math.round(value * 10 ** decimalPoint) / 10 ** decimalPoint;\n    }\n    const exp = Number(`10e${decimalPoint - 1}`);\n    return Math.round(value * exp) * 10 ** Math.abs(decimalPoint);\n};\nconst lerpRounded = (min, max, t, decimalPoint = 0)=>round(lerp(min, max, t), decimalPoint);\nconst words = [\n    \"a\",\n    \"ac\",\n    \"accumsan\",\n    \"ad\",\n    \"adipiscing\",\n    \"aenean\",\n    \"aenean\",\n    \"aliquam\",\n    \"aliquam\",\n    \"aliquet\",\n    \"amet\",\n    \"ante\",\n    \"aptent\",\n    \"arcu\",\n    \"at\",\n    \"auctor\",\n    \"augue\",\n    \"bibendum\",\n    \"blandit\",\n    \"class\",\n    \"commodo\",\n    \"condimentum\",\n    \"congue\",\n    \"consectetur\",\n    \"consequat\",\n    \"conubia\",\n    \"convallis\",\n    \"cras\",\n    \"cubilia\",\n    \"curabitur\",\n    \"curabitur\",\n    \"curae\",\n    \"cursus\",\n    \"dapibus\",\n    \"diam\",\n    \"dictum\",\n    \"dictumst\",\n    \"dolor\",\n    \"donec\",\n    \"donec\",\n    \"dui\",\n    \"duis\",\n    \"egestas\",\n    \"eget\",\n    \"eleifend\",\n    \"elementum\",\n    \"elit\",\n    \"enim\",\n    \"erat\",\n    \"eros\",\n    \"est\",\n    \"et\",\n    \"etiam\",\n    \"etiam\",\n    \"eu\",\n    \"euismod\",\n    \"facilisis\",\n    \"fames\",\n    \"faucibus\",\n    \"felis\",\n    \"fermentum\",\n    \"feugiat\",\n    \"fringilla\",\n    \"fusce\",\n    \"gravida\",\n    \"habitant\",\n    \"habitasse\",\n    \"hac\",\n    \"hendrerit\",\n    \"himenaeos\",\n    \"iaculis\",\n    \"id\",\n    \"imperdiet\",\n    \"in\",\n    \"inceptos\",\n    \"integer\",\n    \"interdum\",\n    \"ipsum\",\n    \"justo\",\n    \"lacinia\",\n    \"lacus\",\n    \"laoreet\",\n    \"lectus\",\n    \"leo\",\n    \"libero\",\n    \"ligula\",\n    \"litora\",\n    \"lobortis\",\n    \"lorem\",\n    \"luctus\",\n    \"maecenas\",\n    \"magna\",\n    \"malesuada\",\n    \"massa\",\n    \"mattis\",\n    \"mauris\",\n    \"metus\",\n    \"mi\",\n    \"molestie\",\n    \"mollis\",\n    \"morbi\",\n    \"nam\",\n    \"nec\",\n    \"neque\",\n    \"netus\",\n    \"nibh\",\n    \"nisi\",\n    \"nisl\",\n    \"non\",\n    \"nostra\",\n    \"nulla\",\n    \"nullam\",\n    \"nunc\",\n    \"odio\",\n    \"orci\",\n    \"ornare\",\n    \"pellentesque\",\n    \"per\",\n    \"pharetra\",\n    \"phasellus\",\n    \"placerat\",\n    \"platea\",\n    \"porta\",\n    \"porttitor\",\n    \"posuere\",\n    \"potenti\",\n    \"praesent\",\n    \"pretium\",\n    \"primis\",\n    \"proin\",\n    \"pulvinar\",\n    \"purus\",\n    \"quam\",\n    \"quis\",\n    \"quisque\",\n    \"quisque\",\n    \"rhoncus\",\n    \"risus\",\n    \"rutrum\",\n    \"sagittis\",\n    \"sapien\",\n    \"scelerisque\",\n    \"sed\",\n    \"sem\",\n    \"semper\",\n    \"senectus\",\n    \"sit\",\n    \"sociosqu\",\n    \"sodales\",\n    \"sollicitudin\",\n    \"suscipit\",\n    \"suspendisse\",\n    \"taciti\",\n    \"tellus\",\n    \"tempor\",\n    \"tempus\",\n    \"tincidunt\",\n    \"torquent\",\n    \"tortor\",\n    \"tristique\",\n    \"turpis\",\n    \"ullamcorper\",\n    \"ultrices\",\n    \"ultricies\",\n    \"urna\",\n    \"ut\",\n    \"ut\",\n    \"varius\",\n    \"vehicula\",\n    \"vel\",\n    \"velit\",\n    \"venenatis\",\n    \"vestibulum\",\n    \"vitae\",\n    \"vivamus\",\n    \"viverra\",\n    \"volutpat\",\n    \"vulputate\"\n];\nconst getWord = ()=>words[lerpRounded(0, words.length - 1, Math.random())];\nconst getWords = (min, max)=>arrayOf(lerpRounded(min, max, Math.random()), getWord);\nconst randomWords = (min = 2, max = 10)=>getWords(min, max).join(\" \");\nconst randomSentence = (min = 8, max = 20)=>{\n    const sentence = getWords(min, max);\n    if (sentence.length) {\n        sentence[0] = sentence[0].charAt(0).toUpperCase() + sentence[0].slice(1);\n        sentence[sentence.length - 1] += \".\";\n    }\n    return sentence.join(\" \");\n};\nconst randomParagraph = (min, max)=>{\n    const sentencesAmount = lerpRounded(min, max, Math.random());\n    return arrayOf(sentencesAmount, ()=>randomSentence()).join(\" \");\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./utils/random.utils.ts\n");

/***/ }),

/***/ "(ssr)/./utils/users.utils.ts":
/*!******************************!*\
  !*** ./utils/users.utils.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomUser: () => (/* binding */ getRandomUser),\n/* harmony export */   getRandomUsers: () => (/* binding */ getRandomUsers)\n/* harmony export */ });\n/* harmony import */ var _random_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./random.utils */ \"(ssr)/./utils/random.utils.ts\");\n\nconst getRandomUser = ()=>{\n    const name = (0,_random_utils__WEBPACK_IMPORTED_MODULE_0__.getWord)();\n    return {\n        id: Math.round(Math.random() * 10000),\n        name,\n        email: `${name}@local.local`,\n        age: Math.round(Math.random() * 100)\n    };\n};\nconst getRandomUsers = (count = 10)=>{\n    return Array.from(Array(count).keys()).map(getRandomUser);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi91dGlscy91c2Vycy51dGlscy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFDeUM7QUFFbEMsTUFBTUMsZ0JBQWdCO0lBQzNCLE1BQU1DLE9BQU9GLHNEQUFPQTtJQUVwQixPQUFPO1FBQ0xHLElBQUlDLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLO1FBQy9CSjtRQUNBSyxPQUFPLENBQUMsRUFBRUwsS0FBSyxZQUFZLENBQUM7UUFDNUJNLEtBQUtKLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLO0lBQ2xDO0FBQ0YsRUFBRTtBQUVLLE1BQU1HLGlCQUFpQixDQUFDQyxRQUFRLEVBQUU7SUFDdkMsT0FBT0MsTUFBTUMsSUFBSSxDQUFDRCxNQUFNRCxPQUFPRyxJQUFJLElBQUlDLEdBQUcsQ0FBQ2I7QUFDN0MsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3V0aWxzL3VzZXJzLnV0aWxzLnRzP2U0M2YiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVXNlck1vZGVsIH0gZnJvbSBcIi4uL21vZGVsc1wiO1xuaW1wb3J0IHsgZ2V0V29yZCB9IGZyb20gXCIuL3JhbmRvbS51dGlsc1wiO1xuXG5leHBvcnQgY29uc3QgZ2V0UmFuZG9tVXNlciA9ICgpOiBVc2VyTW9kZWwgPT4ge1xuICBjb25zdCBuYW1lID0gZ2V0V29yZCgpO1xuXG4gIHJldHVybiB7XG4gICAgaWQ6IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDEwMDAwKSxcbiAgICBuYW1lLFxuICAgIGVtYWlsOiBgJHtuYW1lfUBsb2NhbC5sb2NhbGAsXG4gICAgYWdlOiBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAxMDApLFxuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGdldFJhbmRvbVVzZXJzID0gKGNvdW50ID0gMTApOiBVc2VyTW9kZWxbXSA9PiB7XG4gIHJldHVybiBBcnJheS5mcm9tKEFycmF5KGNvdW50KS5rZXlzKCkpLm1hcChnZXRSYW5kb21Vc2VyKTtcbn07XG4iXSwibmFtZXMiOlsiZ2V0V29yZCIsImdldFJhbmRvbVVzZXIiLCJuYW1lIiwiaWQiLCJNYXRoIiwicm91bmQiLCJyYW5kb20iLCJlbWFpbCIsImFnZSIsImdldFJhbmRvbVVzZXJzIiwiY291bnQiLCJBcnJheSIsImZyb20iLCJrZXlzIiwibWFwIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./utils/users.utils.ts\n");

/***/ }),

/***/ "(ssr)/../../packages/core/dist/index.esm.js":
/*!*********************************************!*\
  !*** ../../packages/core/dist/index.esm.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppEvents: () => (/* binding */ AppEvents),\n/* harmony export */   AppManager: () => (/* binding */ AppManager),\n/* harmony export */   Cache: () => (/* binding */ Cache),\n/* harmony export */   Client: () => (/* binding */ Client),\n/* harmony export */   Dispatcher: () => (/* binding */ Dispatcher),\n/* harmony export */   DispatcherRequestType: () => (/* binding */ DispatcherRequestType),\n/* harmony export */   HttpMethodsEnum: () => (/* binding */ HttpMethodsEnum),\n/* harmony export */   LoggerManager: () => (/* binding */ LoggerManager),\n/* harmony export */   Request: () => (/* binding */ Request),\n/* harmony export */   RequestEffect: () => (/* binding */ RequestEffect),\n/* harmony export */   RequestManager: () => (/* binding */ RequestManager),\n/* harmony export */   Time: () => (/* binding */ Time),\n/* harmony export */   adapter: () => (/* binding */ adapter3),\n/* harmony export */   appManagerInitialOptions: () => (/* binding */ appManagerInitialOptions),\n/* harmony export */   canRetryRequest: () => (/* binding */ canRetryRequest),\n/* harmony export */   defaultTimeout: () => (/* binding */ defaultTimeout),\n/* harmony export */   getAbortByIdEventKey: () => (/* binding */ getAbortByIdEventKey),\n/* harmony export */   getAbortEventKey: () => (/* binding */ getAbortEventKey),\n/* harmony export */   getAdapterBindings: () => (/* binding */ getAdapterBindings),\n/* harmony export */   getAdapterHeaders: () => (/* binding */ getAdapterHeaders),\n/* harmony export */   getAdapterPayload: () => (/* binding */ getAdapterPayload),\n/* harmony export */   getAppManagerEvents: () => (/* binding */ getAppManagerEvents),\n/* harmony export */   getCacheData: () => (/* binding */ getCacheData),\n/* harmony export */   getCacheEvents: () => (/* binding */ getCacheEvents),\n/* harmony export */   getCacheIdKey: () => (/* binding */ getCacheIdKey),\n/* harmony export */   getCacheKey: () => (/* binding */ getCacheKey),\n/* harmony export */   getDispatcherChangeEventKey: () => (/* binding */ getDispatcherChangeEventKey),\n/* harmony export */   getDispatcherDrainedEventKey: () => (/* binding */ getDispatcherDrainedEventKey),\n/* harmony export */   getDispatcherEvents: () => (/* binding */ getDispatcherEvents),\n/* harmony export */   getDispatcherStatusEventKey: () => (/* binding */ getDispatcherStatusEventKey),\n/* harmony export */   getDownloadProgressEventKey: () => (/* binding */ getDownloadProgressEventKey),\n/* harmony export */   getDownloadProgressIdEventKey: () => (/* binding */ getDownloadProgressIdEventKey),\n/* harmony export */   getErrorMessage: () => (/* binding */ getErrorMessage),\n/* harmony export */   getInvalidateEventKey: () => (/* binding */ getInvalidateEventKey),\n/* harmony export */   getIsEqualTimestamp: () => (/* binding */ getIsEqualTimestamp),\n/* harmony export */   getLoadingEventKey: () => (/* binding */ getLoadingEventKey),\n/* harmony export */   getLoadingIdEventKey: () => (/* binding */ getLoadingIdEventKey),\n/* harmony export */   getProgressData: () => (/* binding */ getProgressData),\n/* harmony export */   getProgressValue: () => (/* binding */ getProgressValue),\n/* harmony export */   getRemoveEventKey: () => (/* binding */ getRemoveEventKey),\n/* harmony export */   getRemoveIdEventKey: () => (/* binding */ getRemoveIdEventKey),\n/* harmony export */   getRequestDispatcher: () => (/* binding */ getRequestDispatcher),\n/* harmony export */   getRequestEta: () => (/* binding */ getRequestEta),\n/* harmony export */   getRequestKey: () => (/* binding */ getRequestKey),\n/* harmony export */   getRequestManagerEvents: () => (/* binding */ getRequestManagerEvents),\n/* harmony export */   getRequestStartEventKey: () => (/* binding */ getRequestStartEventKey),\n/* harmony export */   getRequestStartIdEventKey: () => (/* binding */ getRequestStartIdEventKey),\n/* harmony export */   getRequestType: () => (/* binding */ getRequestType),\n/* harmony export */   getResponseEventKey: () => (/* binding */ getResponseEventKey),\n/* harmony export */   getResponseHeaders: () => (/* binding */ getResponseHeaders),\n/* harmony export */   getResponseIdEventKey: () => (/* binding */ getResponseIdEventKey),\n/* harmony export */   getResponseStartEventKey: () => (/* binding */ getResponseStartEventKey),\n/* harmony export */   getResponseStartIdEventKey: () => (/* binding */ getResponseStartIdEventKey),\n/* harmony export */   getSimpleKey: () => (/* binding */ getSimpleKey),\n/* harmony export */   getTime: () => (/* binding */ getTime),\n/* harmony export */   getUniqueRequestId: () => (/* binding */ getUniqueRequestId),\n/* harmony export */   getUploadProgressEventKey: () => (/* binding */ getUploadProgressEventKey),\n/* harmony export */   getUploadProgressIdEventKey: () => (/* binding */ getUploadProgressIdEventKey),\n/* harmony export */   hasDocument: () => (/* binding */ hasDocument),\n/* harmony export */   hasWindow: () => (/* binding */ hasWindow),\n/* harmony export */   hydrate: () => (/* binding */ hydrate),\n/* harmony export */   interceptRequest: () => (/* binding */ interceptRequest),\n/* harmony export */   interceptResponse: () => (/* binding */ interceptResponse),\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   loggerIconLevels: () => (/* binding */ loggerIconLevels),\n/* harmony export */   loggerStyles: () => (/* binding */ loggerStyles),\n/* harmony export */   mocker: () => (/* binding */ mocker),\n/* harmony export */   onDocumentEvent: () => (/* binding */ onDocumentEvent),\n/* harmony export */   onWindowEvent: () => (/* binding */ onWindowEvent),\n/* harmony export */   parseErrorResponse: () => (/* binding */ parseErrorResponse),\n/* harmony export */   parseResponse: () => (/* binding */ parseResponse),\n/* harmony export */   sendRequest: () => (/* binding */ sendRequest),\n/* harmony export */   serialize: () => (/* binding */ serialize),\n/* harmony export */   severity: () => (/* binding */ severity),\n/* harmony export */   stringifyDefaultOptions: () => (/* binding */ stringifyDefaultOptions),\n/* harmony export */   stringifyKey: () => (/* binding */ stringifyKey),\n/* harmony export */   stringifyQueryParams: () => (/* binding */ stringifyQueryParams),\n/* harmony export */   stringifyValue: () => (/* binding */ stringifyValue),\n/* harmony export */   xhrExtra: () => (/* binding */ xhrExtra)\n/* harmony export */ });\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! http */ \"http\");\n/* harmony import */ var http__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(http__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! https */ \"https\");\n/* harmony import */ var https__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(https__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! events */ \"events\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_2__);\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nvar __spreadProps = (a, b)=>__defProps(a, __getOwnPropDescs(b));\nvar __objRest = (source, exclude)=>{\n    var target = {};\n    for(var prop in source)if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n    if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)){\n        if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n    }\n    return target;\n};\nvar __async = (__this, __arguments, generator)=>{\n    return new Promise((resolve, reject)=>{\n        var fulfilled = (value)=>{\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var rejected = (value)=>{\n            try {\n                step(generator.throw(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var step = (x)=>x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n        step((generator = generator.apply(__this, __arguments)).next());\n    });\n};\n// src/effect/request.effect.ts\nvar RequestEffect = class {\n    constructor(config){\n        this.config = config;\n        this.getEffectKey = ()=>{\n            return this.config.effectKey;\n        };\n        this.onTrigger = (request)=>{\n            var _a, _b;\n            (_b = (_a = this.config).onTrigger) == null ? void 0 : _b.call(_a, request);\n        };\n        this.onStart = (request)=>{\n            var _a, _b;\n            (_b = (_a = this.config).onStart) == null ? void 0 : _b.call(_a, request);\n        };\n        this.onSuccess = (response, request)=>{\n            var _a, _b;\n            (_b = (_a = this.config).onSuccess) == null ? void 0 : _b.call(_a, response, request);\n        };\n        this.onError = (response, request)=>{\n            var _a, _b;\n            (_b = (_a = this.config).onError) == null ? void 0 : _b.call(_a, response, request);\n        };\n        this.onFinished = (response, request)=>{\n            var _a, _b;\n            (_b = (_a = this.config).onFinished) == null ? void 0 : _b.call(_a, response, request);\n        };\n    }\n};\n// src/constants/time.constants.ts\nvar Time = /* @__PURE__ */ ((Time2)=>{\n    Time2[Time2[\"SEC\"] = 1e3] = \"SEC\";\n    Time2[Time2[\"MIN\"] = 6e4] = \"MIN\";\n    Time2[Time2[\"HOUR\"] = 36e5] = \"HOUR\";\n    Time2[Time2[\"DAY\"] = 864e5] = \"DAY\";\n    Time2[Time2[\"WEEK\"] = 6048e5] = \"WEEK\";\n    Time2[Time2[\"MONTH_30\"] = 2592e6] = \"MONTH_30\";\n    Time2[Time2[\"MONTH_31\"] = 26784e5] = \"MONTH_31\";\n    Time2[Time2[\"YEAR\"] = 31536e6] = \"YEAR\";\n    Time2[Time2[\"YEAR_LEAP\"] = 316224e5] = \"YEAR_LEAP\";\n    return Time2;\n})(Time || {});\n// src/adapter/adapter.constants.ts\nvar defaultTimeout = 1e3 /* SEC */  * 5;\nvar xhrExtra = {\n    headers: {}\n};\n// src/adapter/adapter.browser.ts\nvar adapter = (request, requestId)=>__async(void 0, null, function*() {\n        const { makeRequest, fullUrl, config, payload, headers, onError, onResponseEnd, onTimeoutError, onRequestEnd, createAbortListener, onResponseProgress, onRequestProgress, onResponseStart, onBeforeRequest, onRequestStart, onSuccess } = yield getAdapterBindings(request, requestId, 0, {\n            headers: {}\n        });\n        const { method = \"GET\" } = request;\n        return makeRequest((resolve)=>{\n            const xhr = new XMLHttpRequest();\n            xhr.timeout = defaultTimeout;\n            const abort = ()=>xhr.abort();\n            Object.entries(config).forEach(([name, value])=>{\n                xhr[name] = value;\n            });\n            xhr.open(method, fullUrl, true);\n            Object.entries(headers).forEach(([name, value])=>xhr.setRequestHeader(name, value));\n            const unmountListener = createAbortListener(0, xhrExtra, abort, resolve);\n            xhr.upload.onprogress = onRequestProgress;\n            xhr.onloadstart = ()=>{\n                onRequestEnd();\n                onResponseStart();\n            };\n            xhr.onprogress = onResponseProgress;\n            xhr.onloadend = ()=>{\n                onResponseEnd();\n                unmountListener();\n            };\n            xhr.ontimeout = ()=>onTimeoutError(0, xhrExtra, resolve);\n            xhr.onreadystatechange = (e)=>{\n                const event = e;\n                const finishedState = 4;\n                if (event.target && event.target.readyState === finishedState) {\n                    const { status } = event.target;\n                    const success = String(status).startsWith(\"2\") || String(status).startsWith(\"3\");\n                    const responseHeaders = getResponseHeaders(xhr.getAllResponseHeaders());\n                    if (success) {\n                        const data = parseResponse(event.target.response);\n                        onSuccess(data, status, {\n                            headers: responseHeaders\n                        }, resolve);\n                    } else {\n                        const data = parseErrorResponse(event.target.response);\n                        onError(data, status, {\n                            headers: responseHeaders\n                        }, resolve);\n                    }\n                }\n            };\n            onBeforeRequest();\n            onRequestStart();\n            xhr.send(payload);\n        });\n    });\n// src/adapter/adapter.server.ts\n\n\n// src/constants/http.constants.ts\nvar HttpMethodsEnum = /* @__PURE__ */ ((HttpMethodsEnum2)=>{\n    HttpMethodsEnum2[\"get\"] = \"GET\";\n    HttpMethodsEnum2[\"post\"] = \"POST\";\n    HttpMethodsEnum2[\"put\"] = \"PUT\";\n    HttpMethodsEnum2[\"patch\"] = \"PATCH\";\n    HttpMethodsEnum2[\"delete\"] = \"DELETE\";\n    return HttpMethodsEnum2;\n})(HttpMethodsEnum || {});\n// src/adapter/adapter.server.ts\nvar adapter2 = (request, requestId)=>__async(void 0, null, function*() {\n        const { makeRequest, fullUrl, config, headers, payload, onError, onResponseEnd, onTimeoutError, onRequestEnd, createAbortListener, onResponseProgress, onResponseStart, onBeforeRequest, onRequestStart, onSuccess } = yield getAdapterBindings(request, requestId, 0, xhrExtra);\n        const { method = \"GET\" /* get */ , client } = request;\n        const httpClient = client.url.includes(\"https://\") ? (https__WEBPACK_IMPORTED_MODULE_1___default()) : (http__WEBPACK_IMPORTED_MODULE_0___default());\n        const options = {\n            method,\n            headers,\n            timeout: defaultTimeout\n        };\n        Object.entries(config).forEach(([name, value])=>{\n            options[name] = value;\n        });\n        let unmountListener = ()=>null;\n        onBeforeRequest();\n        if (payload) {\n            options.headers[\"Content-Length\"] = Buffer.byteLength(JSON.stringify(payload));\n        }\n        const requestUrl = !fullUrl.startsWith(\"http\") ? `http://${fullUrl}` : fullUrl;\n        return makeRequest((resolve)=>{\n            const httpRequest = httpClient.request(requestUrl, options, (response)=>{\n                response.setEncoding(\"utf8\");\n                unmountListener = createAbortListener(0, xhrExtra, response.destroy, resolve);\n                let chunks = \"\";\n                const totalDownloadBytes = Number(response.headers[\"content-length\"]);\n                let downloadedBytes = 0;\n                onRequestStart();\n                response.on(\"data\", (chunk)=>{\n                    if (!chunks) {\n                        onRequestEnd();\n                        onResponseStart();\n                    }\n                    downloadedBytes += chunk.length;\n                    chunks += chunk;\n                    onResponseProgress({\n                        total: totalDownloadBytes,\n                        loaded: downloadedBytes\n                    });\n                });\n                response.on(\"end\", ()=>{\n                    const { statusCode } = response;\n                    const success = String(statusCode).startsWith(\"2\") || String(statusCode).startsWith(\"3\");\n                    if (success) {\n                        const data = parseResponse(chunks);\n                        onSuccess(data, statusCode, {\n                            headers: response.headers\n                        }, resolve);\n                    } else {\n                        const data = parseErrorResponse(chunks);\n                        onError(data, statusCode, {\n                            headers: response.headers\n                        }, resolve);\n                    }\n                    unmountListener();\n                    onResponseEnd();\n                });\n            });\n            httpRequest.on(\"timeout\", ()=>onTimeoutError(0, xhrExtra, resolve));\n            httpRequest.on(\"error\", (error)=>onError(error, 0, xhrExtra, resolve));\n            if (payload) {\n                httpRequest.write(payload);\n            }\n            httpRequest.end();\n        });\n    });\n// src/adapter/adapter.ts\nvar adapter3 = (request, requestId)=>__async(void 0, null, function*() {\n        if (typeof XMLHttpRequest !== \"undefined\") {\n            return adapter(request, requestId);\n        }\n        return adapter2(request, requestId);\n    });\n// src/adapter/adapter.utils.ts\nvar getErrorMessage = (errorCase)=>{\n    if (errorCase === \"timeout\") {\n        return new Error(\"Request timeout\");\n    }\n    if (errorCase === \"abort\") {\n        return new Error(\"Request cancelled\");\n    }\n    return new Error(\"Unexpected error\");\n};\nvar getResponseHeaders = (headersString)=>{\n    const arr = headersString.trim().split(/[\\r\\n]+/);\n    const headers = {};\n    arr.forEach((line)=>{\n        const parts = line.split(\": \");\n        const header = parts.shift();\n        const value = parts.join(\": \");\n        headers[header] = value;\n    });\n    return headers;\n};\nvar parseResponse = (response)=>{\n    try {\n        return JSON.parse(response);\n    } catch (err) {\n        return response;\n    }\n};\nvar parseErrorResponse = (response)=>{\n    return response ? parseResponse(response) : getErrorMessage();\n};\n// src/utils/uuid.utils.ts\nvar getUniqueRequestId = (key)=>{\n    return `${key}_${Date.now().toString(36)}_${Math.random().toString(36).substring(2)}`;\n};\n// src/utils/hydration.utils.ts\nvar serialize = (request, response, options)=>{\n    const { cacheKey } = request;\n    const data = response != null ? response : request.client.cache.get(cacheKey);\n    return __spreadProps(__spreadValues({}, options), {\n        // Keys to allow for easy serialization and deserialization\n        cacheKey,\n        // Data to be stored\n        timestamp: Date.now(),\n        data: JSON.stringify(data)\n    });\n};\nvar hydrate = (client, fallbacks, options)=>{\n    fallbacks == null ? void 0 : fallbacks.forEach((fallback)=>{\n        const _a = fallback, { cacheKey, data } = _a, fallbackOptions = __objRest(_a, [\n            \"cacheKey\",\n            \"data\"\n        ]);\n        const defaults = {\n            cache: true,\n            cacheTime: null,\n            garbageCollection: null,\n            override: false\n        };\n        const config = typeof options === \"function\" ? __spreadValues(__spreadValues(__spreadValues({}, defaults), fallbackOptions), options(fallback)) : __spreadValues(__spreadValues(__spreadValues({}, defaults), fallbackOptions), options);\n        if (!config.override) {\n            const cachedData = client.cache.get(cacheKey);\n            if (cachedData) {\n                return;\n            }\n        }\n        const parsedData = parseResponse(data);\n        client.cache.set(__spreadProps(__spreadValues({}, config), {\n            cacheKey\n        }), parsedData);\n    });\n};\n// src/request/request.ts\nvar Request = class _Request {\n    constructor(client, requestOptions, requestJSON){\n        this.client = client;\n        this.requestOptions = requestOptions;\n        this.requestJSON = requestJSON;\n        this.isMockEnabled = false;\n        this.setHeaders = (headers)=>{\n            return this.clone({\n                headers\n            });\n        };\n        this.setAuth = (auth)=>{\n            return this.clone({\n                auth\n            });\n        };\n        this.setParams = (params)=>{\n            return this.clone({\n                params\n            });\n        };\n        this.setData = (data)=>{\n            return this.clone({\n                data\n            });\n        };\n        this.setQueryParams = (queryParams)=>{\n            return this.clone({\n                queryParams\n            });\n        };\n        this.setOptions = (options)=>{\n            return this.clone({\n                options\n            });\n        };\n        this.setCancelable = (cancelable)=>{\n            return this.clone({\n                cancelable\n            });\n        };\n        this.setRetry = (retry)=>{\n            return this.clone({\n                retry\n            });\n        };\n        this.setRetryTime = (retryTime)=>{\n            return this.clone({\n                retryTime\n            });\n        };\n        this.setGarbageCollection = (garbageCollection)=>{\n            return this.clone({\n                garbageCollection\n            });\n        };\n        this.setCache = (cache)=>{\n            return this.clone({\n                cache\n            });\n        };\n        this.setCacheTime = (cacheTime)=>{\n            return this.clone({\n                cacheTime\n            });\n        };\n        this.setQueued = (queued)=>{\n            return this.clone({\n                queued\n            });\n        };\n        this.setAbortKey = (abortKey)=>{\n            this.updatedAbortKey = true;\n            return this.clone({\n                abortKey\n            });\n        };\n        this.setCacheKey = (cacheKey)=>{\n            this.updatedCacheKey = true;\n            return this.clone({\n                cacheKey\n            });\n        };\n        this.setQueueKey = (queueKey)=>{\n            this.updatedQueueKey = true;\n            return this.clone({\n                queueKey\n            });\n        };\n        this.setEffectKey = (effectKey)=>{\n            this.updatedEffectKey = true;\n            return this.clone({\n                effectKey\n            });\n        };\n        this.setDeduplicate = (deduplicate)=>{\n            return this.clone({\n                deduplicate\n            });\n        };\n        this.setDeduplicateTime = (deduplicateTime)=>{\n            return this.clone({\n                deduplicateTime\n            });\n        };\n        this.setUsed = (used)=>{\n            return this.clone({\n                used\n            });\n        };\n        this.setOffline = (offline)=>{\n            return this.clone({\n                offline\n            });\n        };\n        this.setMock = (mockData)=>{\n            const mockGenerator = function* mocked(mockedValues) {\n                if (Array.isArray(mockData)) {\n                    let iteration = 0;\n                    while(true){\n                        yield mockedValues[iteration];\n                        iteration = mockData.length === iteration + 1 ? 0 : iteration + 1;\n                    }\n                } else {\n                    while(true){\n                        yield mockData;\n                    }\n                }\n            };\n            this.mockData = mockData;\n            this.mock = mockGenerator(mockData);\n            this.isMockEnabled = true;\n            return this;\n        };\n        this.removeMock = ()=>{\n            this.mockData = null;\n            this.mock = null;\n            this.isMockEnabled = false;\n            return this;\n        };\n        this.setEnableMocking = (isMockEnabled)=>{\n            this.isMockEnabled = isMockEnabled;\n            return this;\n        };\n        /**\n     * Mappers\n     */ /**\n     * Map data before it gets send to the server\n     * @param dataMapper\n     * @returns\n     */ this.setDataMapper = (dataMapper)=>{\n            const cloned = this.clone(void 0);\n            cloned.dataMapper = dataMapper;\n            return cloned;\n        };\n        /**\n     * Map request before it gets send to the server\n     * @param requestMapper mapper of the request\n     * @returns new request\n     */ this.setRequestMapper = (requestMapper)=>{\n            const cloned = this.clone(void 0);\n            cloned.requestMapper = requestMapper;\n            return cloned;\n        };\n        /**\n     * Map the response to the new interface\n     * @param responseMapper our mapping callback\n     * @returns new response\n     */ this.setResponseMapper = (responseMapper)=>{\n            const cloned = this.clone();\n            cloned.responseMapper = responseMapper;\n            return cloned;\n        };\n        this.paramsMapper = (params, queryParams)=>{\n            let endpoint = this.requestOptions.endpoint;\n            if (params) {\n                Object.entries(params).forEach(([key, value])=>{\n                    endpoint = endpoint.replace(new RegExp(`:${key}`, \"g\"), String(value));\n                });\n            }\n            if (queryParams) {\n                endpoint += this.client.stringifyQueryParams(queryParams);\n            }\n            return endpoint;\n        };\n        this.hydrate = (data)=>{\n            this.client.cache.set(this, data);\n            return this;\n        };\n        this.abort = ()=>{\n            const { requestManager } = this.client;\n            requestManager.abortByKey(this.abortKey);\n            return this.clone();\n        };\n        /**\n     * Make a request without any side effects for cache or queues.\n     *\n     * Best way for making simple requests or using HF with the SSR.\n     * Method to use the request WITHOUT adding it to cache and queues.\n     * @param options\n     */ this.exec = (options)=>__async(this, null, function*() {\n                const { adapter: adapter4, requestManager } = this.client;\n                const request = this.clone(options);\n                const requestId = getUniqueRequestId(this.queueKey);\n                requestManager.addAbortController(this.abortKey, requestId);\n                const response = yield adapter4(request, requestId);\n                requestManager.removeAbortController(this.abortKey, requestId);\n                if (request.responseMapper) {\n                    return request.responseMapper(response);\n                }\n                return response;\n            });\n        /**\n     * Method used to perform requests with usage of cache and queues.\n     * @param options\n     */ this.send = (options)=>__async(this, null, function*() {\n                const _a = options || {}, { dispatcherType } = _a, rest = __objRest(_a, [\n                    \"dispatcherType\"\n                ]);\n                const request = this.clone(rest);\n                return sendRequest(request, options);\n            });\n        var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _A, _B, _C;\n        const { endpoint, headers, auth = true, method = client.defaultMethod, options, cancelable = false, retry = 0, retryTime = 500, garbageCollection = 6e4 /* MIN */  * 5, cache = true, cacheTime = 6e4 /* MIN */  * 5, queued = false, offline = true, abortKey, cacheKey, queueKey, effectKey, deduplicate = false, deduplicateTime = 10 } = __spreadValues(__spreadValues({}, (_b = (_a = this.client).requestDefaultOptions) == null ? void 0 : _b.call(_a, requestOptions)), requestOptions);\n        this.endpoint = (_c = requestJSON == null ? void 0 : requestJSON.endpoint) != null ? _c : endpoint;\n        this.headers = (_d = requestJSON == null ? void 0 : requestJSON.headers) != null ? _d : headers;\n        this.auth = (_e = requestJSON == null ? void 0 : requestJSON.auth) != null ? _e : auth;\n        this.method = method;\n        this.params = requestJSON == null ? void 0 : requestJSON.params;\n        this.data = requestJSON == null ? void 0 : requestJSON.data;\n        this.queryParams = requestJSON == null ? void 0 : requestJSON.queryParams;\n        this.options = (_f = requestJSON == null ? void 0 : requestJSON.options) != null ? _f : options;\n        this.cancelable = (_g = requestJSON == null ? void 0 : requestJSON.cancelable) != null ? _g : cancelable;\n        this.retry = (_h = requestJSON == null ? void 0 : requestJSON.retry) != null ? _h : retry;\n        this.retryTime = (_i = requestJSON == null ? void 0 : requestJSON.retryTime) != null ? _i : retryTime;\n        this.garbageCollection = (_j = requestJSON == null ? void 0 : requestJSON.garbageCollection) != null ? _j : garbageCollection;\n        this.cache = (_k = requestJSON == null ? void 0 : requestJSON.cache) != null ? _k : cache;\n        this.cacheTime = (_l = requestJSON == null ? void 0 : requestJSON.cacheTime) != null ? _l : cacheTime;\n        this.queued = (_m = requestJSON == null ? void 0 : requestJSON.queued) != null ? _m : queued;\n        this.offline = (_n = requestJSON == null ? void 0 : requestJSON.offline) != null ? _n : offline;\n        this.abortKey = (_p = (_o = requestJSON == null ? void 0 : requestJSON.abortKey) != null ? _o : abortKey) != null ? _p : this.client.abortKeyMapper(this);\n        this.cacheKey = (_r = (_q = requestJSON == null ? void 0 : requestJSON.cacheKey) != null ? _q : cacheKey) != null ? _r : this.client.cacheKeyMapper(this);\n        this.queueKey = (_t = (_s = requestJSON == null ? void 0 : requestJSON.queueKey) != null ? _s : queueKey) != null ? _t : this.client.queueKeyMapper(this);\n        this.effectKey = (_v = (_u = requestJSON == null ? void 0 : requestJSON.effectKey) != null ? _u : effectKey) != null ? _v : this.client.effectKeyMapper(this);\n        this.used = (_w = requestJSON == null ? void 0 : requestJSON.used) != null ? _w : false;\n        this.deduplicate = (_x = requestJSON == null ? void 0 : requestJSON.deduplicate) != null ? _x : deduplicate;\n        this.deduplicateTime = (_y = requestJSON == null ? void 0 : requestJSON.deduplicateTime) != null ? _y : deduplicateTime;\n        this.updatedAbortKey = (_z = requestJSON == null ? void 0 : requestJSON.updatedAbortKey) != null ? _z : false;\n        this.updatedCacheKey = (_A = requestJSON == null ? void 0 : requestJSON.updatedCacheKey) != null ? _A : false;\n        this.updatedQueueKey = (_B = requestJSON == null ? void 0 : requestJSON.updatedQueueKey) != null ? _B : false;\n        this.updatedEffectKey = (_C = requestJSON == null ? void 0 : requestJSON.updatedEffectKey) != null ? _C : false;\n    }\n    toJSON() {\n        return {\n            requestOptions: this.requestOptions,\n            endpoint: this.endpoint,\n            headers: this.headers,\n            auth: this.auth,\n            method: this.method,\n            params: this.params,\n            data: this.data,\n            queryParams: this.queryParams,\n            options: this.options,\n            cancelable: this.cancelable,\n            retry: this.retry,\n            retryTime: this.retryTime,\n            garbageCollection: this.garbageCollection,\n            cache: this.cache,\n            cacheTime: this.cacheTime,\n            queued: this.queued,\n            offline: this.offline,\n            abortKey: this.abortKey,\n            cacheKey: this.cacheKey,\n            queueKey: this.queueKey,\n            effectKey: this.effectKey,\n            used: this.used,\n            disableResponseInterceptors: this.requestOptions.disableResponseInterceptors,\n            disableRequestInterceptors: this.requestOptions.disableRequestInterceptors,\n            updatedAbortKey: this.updatedAbortKey,\n            updatedCacheKey: this.updatedCacheKey,\n            updatedQueueKey: this.updatedQueueKey,\n            updatedEffectKey: this.updatedEffectKey,\n            deduplicate: this.deduplicate,\n            deduplicateTime: this.deduplicateTime\n        };\n    }\n    clone(options) {\n        const json = this.toJSON();\n        const requestJSON = __spreadProps(__spreadValues(__spreadValues({}, json), options), {\n            params: options == null ? void 0 : options.params,\n            abortKey: this.updatedAbortKey ? (options == null ? void 0 : options.abortKey) || this.abortKey : void 0,\n            cacheKey: this.updatedCacheKey ? (options == null ? void 0 : options.cacheKey) || this.cacheKey : void 0,\n            queueKey: this.updatedQueueKey ? (options == null ? void 0 : options.queueKey) || this.queueKey : void 0,\n            endpoint: this.paramsMapper((options == null ? void 0 : options.params) || this.params, (options == null ? void 0 : options.queryParams) || this.queryParams),\n            queryParams: (options == null ? void 0 : options.queryParams) || this.queryParams,\n            // Typescript circular types issue - we have to leave any here\n            data: (options == null ? void 0 : options.data) || this.data\n        });\n        const cloned = new _Request(this.client, this.requestOptions, requestJSON);\n        cloned.dataMapper = this.dataMapper;\n        cloned.responseMapper = this.responseMapper;\n        cloned.requestMapper = this.requestMapper;\n        cloned.mockData = this.mockData;\n        cloned.mock = this.mock;\n        cloned.isMockEnabled = this.isMockEnabled;\n        return cloned;\n    }\n};\n// src/dispatcher/dispatcher.constants.ts\nvar DispatcherRequestType = /* @__PURE__ */ ((DispatcherRequestType2)=>{\n    DispatcherRequestType2[\"oneByOne\"] = \"one-by-one\";\n    DispatcherRequestType2[\"allAtOnce\"] = \"all-at-once\";\n    DispatcherRequestType2[\"previousCanceled\"] = \"previous-canceled\";\n    DispatcherRequestType2[\"deduplicated\"] = \"deduplicated\";\n    return DispatcherRequestType2;\n})(DispatcherRequestType || {});\n// src/dispatcher/dispatcher.events.ts\nvar getDispatcherEvents = (emitter)=>({\n        setDrained: (queueKey, values)=>{\n            emitter.emit(getDispatcherDrainedEventKey(queueKey), values);\n        },\n        setQueueStatus: (queueKey, values)=>{\n            emitter.emit(getDispatcherStatusEventKey(queueKey), values);\n        },\n        setQueueChanged: (queueKey, values)=>{\n            emitter.emit(getDispatcherChangeEventKey(queueKey), values);\n        },\n        onDrained: (queueKey, callback)=>{\n            emitter.on(getDispatcherDrainedEventKey(queueKey), callback);\n            return ()=>emitter.removeListener(getDispatcherDrainedEventKey(queueKey), callback);\n        },\n        onQueueStatus: (queueKey, callback)=>{\n            emitter.on(getDispatcherStatusEventKey(queueKey), callback);\n            return ()=>emitter.removeListener(getDispatcherStatusEventKey(queueKey), callback);\n        },\n        onQueueChange: (queueKey, callback)=>{\n            emitter.on(getDispatcherChangeEventKey(queueKey), callback);\n            return ()=>emitter.removeListener(getDispatcherChangeEventKey(queueKey), callback);\n        }\n    });\n// src/dispatcher/dispatcher.ts\n\nvar Dispatcher = class {\n    constructor(client, options){\n        this.client = client;\n        this.options = options;\n        this.emitter = new (events__WEBPACK_IMPORTED_MODULE_2___default())();\n        this.events = getDispatcherEvents(this.emitter);\n        this.storage = /* @__PURE__ */ new Map();\n        this.requestCount = /* @__PURE__ */ new Map();\n        this.runningRequests = /* @__PURE__ */ new Map();\n        // ********************\n        // ********************\n        // Queue\n        // ********************\n        // ********************\n        /**\n     * Start request handling by queueKey\n     */ this.start = (queueKey)=>{\n            const queue = this.getQueue(queueKey);\n            queue.stopped = false;\n            this.setQueue(queueKey, queue);\n            this.flushQueue(queueKey);\n            this.events.setQueueStatus(queueKey, queue);\n        };\n        /**\n     * Pause request queue, but not cancel already started requests\n     */ this.pause = (queueKey)=>{\n            const queue = this.getQueue(queueKey);\n            queue.stopped = true;\n            this.setQueue(queueKey, queue);\n            this.events.setQueueStatus(queueKey, queue);\n        };\n        /**\n     * Stop request queue and cancel all started requests - those will be treated like not started\n     */ this.stop = (queueKey)=>{\n            const queue = this.getQueue(queueKey);\n            queue.stopped = true;\n            this.setQueue(queueKey, queue);\n            this.cancelRunningRequests(queueKey);\n            this.events.setQueueStatus(queueKey, queue);\n        };\n        /**\n     * Return all\n     */ this.getQueuesKeys = ()=>{\n            return Array.from(this.storage.keys());\n        };\n        /**\n     * Return queue state object\n     */ this.getQueue = (queueKey)=>{\n            const initialQueueState = {\n                requests: [],\n                stopped: false\n            };\n            const storedEntity = this.storage.get(queueKey);\n            return storedEntity || initialQueueState;\n        };\n        /**\n     * Return request from queue state\n     */ this.getRequest = (queueKey, requestId)=>{\n            const initialQueueState = {\n                requests: [],\n                stopped: false\n            };\n            const storedEntity = this.storage.get(queueKey) || initialQueueState;\n            return storedEntity.requests.find((req)=>req.requestId === requestId);\n        };\n        /**\n     * Get value of the active queue status based on the stopped status\n     */ this.getIsActiveQueue = (queueKey)=>{\n            const queue = this.getQueue(queueKey);\n            const hasAvailableRequests = queue.requests.some((req)=>!req.stopped);\n            const isRunningQueue = !queue.stopped;\n            return hasAvailableRequests && isRunningQueue;\n        };\n        /**\n     * Add new element to storage\n     */ this.addQueueElement = (queueKey, dispatcherDump)=>{\n            const queue = this.getQueue(queueKey);\n            queue.requests.push(dispatcherDump);\n            this.setQueue(queueKey, queue);\n        };\n        /**\n     * Set new queue storage value\n     */ this.setQueue = (queueKey, queue)=>{\n            var _a, _b;\n            this.storage.set(queueKey, queue);\n            (_b = (_a = this.options) == null ? void 0 : _a.onUpdateStorage) == null ? void 0 : _b.call(_a, queueKey, queue);\n            this.events.setQueueChanged(queueKey, queue);\n            return queue;\n        };\n        /**\n     * Clear requests from queue cache\n     */ this.clearQueue = (queueKey)=>{\n            var _a, _b;\n            const queue = this.getQueue(queueKey);\n            const newQueue = {\n                requests: [],\n                stopped: queue.stopped\n            };\n            this.storage.set(queueKey, newQueue);\n            (_b = (_a = this.options) == null ? void 0 : _a.onDeleteFromStorage) == null ? void 0 : _b.call(_a, queueKey, newQueue);\n            this.events.setQueueChanged(queueKey, newQueue);\n            return newQueue;\n        };\n        /**\n     * Method used to flush the queue requests\n     */ this.flushQueue = (queueKey)=>__async(this, null, function*() {\n                const queue = this.getQueue(queueKey);\n                const runningRequests = this.getRunningRequests(queueKey);\n                const queueElement = queue.requests.find((request)=>!request.stopped);\n                const isStopped = queue && queue.stopped;\n                const isOffline = !this.client.appManager.isOnline;\n                const isConcurrent = !(queueElement == null ? void 0 : queueElement.request.queued);\n                const isInactive = !runningRequests.length;\n                const isEmpty = !queueElement;\n                if (isStopped || isOffline || isEmpty) {\n                    this.logger.debug(\"Skipping queue trigger\", {\n                        isStopped,\n                        isOffline,\n                        isEmpty\n                    });\n                } else if (isConcurrent) {\n                    queue.requests.forEach((element)=>{\n                        if (!this.hasRunningRequest(queueKey, element.requestId)) {\n                            this.performRequest(element);\n                        }\n                    });\n                } else if (isInactive) {\n                    yield this.performRequest(queueElement);\n                    this.flushQueue(queueKey);\n                }\n            });\n        /**\n     * Flush all available requests from all queues\n     */ this.flush = ()=>__async(this, null, function*() {\n                const keys = this.getQueuesKeys();\n                for (const key of keys){\n                    const storageElement = this.getQueue(key);\n                    if (storageElement) {\n                        this.flushQueue(key);\n                    }\n                }\n            });\n        /**\n     * Clear all running requests and storage\n     */ this.clear = ()=>{\n            var _a, _b;\n            const keys = this.getQueuesKeys();\n            keys.forEach((queueKey)=>this.cancelRunningRequests(queueKey));\n            this.runningRequests.clear();\n            this.storage.clear();\n            (_b = (_a = this.options) == null ? void 0 : _a.onClearStorage) == null ? void 0 : _b.call(_a, this);\n        };\n        // ********************\n        // ********************\n        // Requests\n        // ********************\n        // ********************\n        /**\n     * Start particular request\n     */ this.startRequest = (queueKey, requestId)=>{\n            const queue = this.getQueue(queueKey);\n            const request = queue.requests.find((element)=>element.requestId === requestId);\n            if (request) {\n                request.stopped = false;\n                this.setQueue(queueKey, queue);\n                this.flushQueue(queueKey);\n                this.events.setQueueStatus(queueKey, queue);\n            }\n        };\n        /**\n     * Stop particular request\n     */ this.stopRequest = (queueKey, requestId)=>{\n            const queue = this.getQueue(queueKey);\n            const request = queue.requests.find((element)=>element.requestId === requestId);\n            if (request) {\n                request.stopped = true;\n                this.setQueue(queueKey, queue);\n                this.cancelRunningRequest(queueKey, requestId);\n                this.events.setQueueStatus(queueKey, queue);\n            }\n        };\n        /**\n     * Get currently running requests from all queueKeys\n     */ this.getAllRunningRequest = ()=>{\n            return Array.from(this.runningRequests.values()).flat();\n        };\n        /**\n     * Get currently running requests\n     */ this.getRunningRequests = (queueKey)=>{\n            return this.runningRequests.get(queueKey) || [];\n        };\n        /**\n     * Get running request by id\n     */ this.getRunningRequest = (queueKey, requestId)=>{\n            const runningRequests = this.getRunningRequests(queueKey);\n            return runningRequests.find((req)=>req.requestId === requestId);\n        };\n        /**\n     * Add request to the running requests list\n     */ this.addRunningRequest = (queueKey, requestId, request)=>{\n            const runningRequests = this.getRunningRequests(queueKey);\n            runningRequests.push({\n                requestId,\n                request,\n                timestamp: Date.now()\n            });\n            this.runningRequests.set(queueKey, runningRequests);\n        };\n        /**\n     * Get the value based on the currently running requests\n     */ this.hasRunningRequests = (queueKey)=>{\n            return !!this.getRunningRequests(queueKey).length;\n        };\n        /**\n     * Check if request is currently processing\n     */ this.hasRunningRequest = (queueKey, requestId)=>{\n            const runningRequests = this.getRunningRequests(queueKey);\n            return !!runningRequests.find((req)=>req.requestId === requestId);\n        };\n        /**\n     * Cancel all started requests, but do NOT remove it from main storage\n     */ this.cancelRunningRequests = (queueKey)=>{\n            var _a;\n            (_a = this.runningRequests.get(queueKey)) == null ? void 0 : _a.forEach((request)=>{\n                this.client.requestManager.abortByRequestId(request.request.abortKey, request.requestId);\n            });\n            this.deleteRunningRequests(queueKey);\n        };\n        /**\n     * Cancel started request, but do NOT remove it from main storage\n     */ this.cancelRunningRequest = (queueKey, requestId)=>{\n            const requests = this.getRunningRequests(queueKey).filter((request)=>{\n                if (request.requestId === requestId) {\n                    this.client.requestManager.abortByRequestId(request.request.abortKey, request.requestId);\n                    return false;\n                }\n                return true;\n            });\n            this.runningRequests.set(queueKey, requests);\n        };\n        /**\n     * Delete all started requests, but do NOT clear it from queue and do NOT cancel them\n     */ this.deleteRunningRequests = (queueKey)=>{\n            this.runningRequests.set(queueKey, []);\n        };\n        /**\n     * Delete request by id, but do NOT clear it from queue and do NOT cancel them\n     */ this.deleteRunningRequest = (queueKey, requestId)=>{\n            const runningRequests = this.getRunningRequests(queueKey);\n            this.runningRequests.set(queueKey, runningRequests.filter((req)=>req.requestId !== requestId));\n        };\n        /**\n     * Get count of requests from the same queueKey\n     */ this.getQueueRequestCount = (queueKey)=>{\n            return this.requestCount.get(queueKey) || 0;\n        };\n        /**\n     * Add request count to the queueKey\n     */ this.incrementQueueRequestCount = (queueKey)=>{\n            const count = this.requestCount.get(queueKey) || 0;\n            this.requestCount.set(queueKey, count + 1);\n        };\n        /**\n     * Create storage element from request\n     */ // eslint-disable-next-line class-methods-use-this\n        this.createStorageElement = (request)=>{\n            const requestId = getUniqueRequestId(request.queueKey);\n            const storageElement = {\n                requestId,\n                timestamp: +/* @__PURE__ */ new Date(),\n                request,\n                retries: 0,\n                stopped: false\n            };\n            return storageElement;\n        };\n        // ********************\n        // ********************\n        // Dispatching\n        // ********************\n        // ********************\n        /**\n     * Add request to the dispatcher handler\n     */ this.add = (request)=>{\n            const { queueKey } = request;\n            const storageElement = this.createStorageElement(request);\n            const { requestId } = storageElement;\n            const queue = this.getQueue(queueKey);\n            const [latestRequest] = queue.requests.slice(-1);\n            const requestType = getRequestType(request, latestRequest);\n            this.logger.debug(\"Adding request to queue\", {\n                requestType,\n                request,\n                requestId\n            });\n            switch(requestType){\n                case \"one-by-one\" /* oneByOne */ :\n                    {\n                        this.addQueueElement(queueKey, storageElement);\n                        this.flushQueue(queueKey);\n                        return requestId;\n                    }\n                case \"previous-canceled\" /* previousCanceled */ :\n                    {\n                        this.cancelRunningRequests(queueKey);\n                        this.clearQueue(queueKey);\n                        this.addQueueElement(queueKey, storageElement);\n                        this.flushQueue(queueKey);\n                        return requestId;\n                    }\n                case \"deduplicated\" /* deduplicated */ :\n                    {\n                        return queue.requests[0].requestId;\n                    }\n                default:\n                    {\n                        this.addQueueElement(queueKey, storageElement);\n                        this.flushQueue(queueKey);\n                        return requestId;\n                    }\n            }\n        };\n        /**\n     * Delete from the storage and cancel request\n     */ this.delete = (queueKey, requestId, abortKey)=>{\n            var _a, _b;\n            this.logger.debug(\"Deleting request\", {\n                queueKey,\n                requestId,\n                abortKey\n            });\n            const queue = this.getQueue(queueKey);\n            const queueElement = queue.requests.find((req)=>req.requestId === requestId);\n            if (!queueElement) return;\n            queue.requests = queue.requests.filter((req)=>req.requestId !== requestId);\n            this.storage.set(queueKey, queue);\n            if (this.hasRunningRequest(queueKey, requestId)) {\n                this.deleteRunningRequest(queueKey, requestId);\n                this.client.requestManager.abortByRequestId(abortKey, requestId);\n            }\n            (_b = (_a = this.options) == null ? void 0 : _a.onDeleteFromStorage) == null ? void 0 : _b.call(_a, queueKey, queue);\n            this.events.setQueueChanged(queueKey, queue);\n            this.client.requestManager.events.emitRemove(queueKey, requestId, {\n                requestId,\n                request: queueElement.request\n            });\n            if (!queue.requests.length) {\n                this.events.setDrained(queueKey, queue);\n            }\n            return queue;\n        };\n        /**\n     * Request can run for some time, once it's done, we have to check if it's successful or if it was aborted\n     * It can be different once the previous call was set as cancelled and removed from queue before this request got resolved\n     */ this.performRequest = (storageElement)=>__async(this, null, function*() {\n                var _a;\n                const { request, requestId } = storageElement;\n                this.logger.info(\"Performing request\", {\n                    request,\n                    requestId\n                });\n                const { retry, retryTime, queueKey, cacheKey, abortKey, offline } = request;\n                const { adapter: adapter4, requestManager, cache, appManager } = this.client;\n                const canRetry = canRetryRequest(storageElement.retries, retry);\n                const isOffline = !appManager.isOnline && offline;\n                const isAlreadyRunning = this.hasRunningRequest(queueKey, requestId);\n                const isStopped = storageElement.stopped;\n                if (isOffline || isAlreadyRunning || isStopped) {\n                    return this.logger.warning(\"Unable to perform request\", {\n                        isOffline,\n                        isAlreadyRunning,\n                        isStopped\n                    });\n                }\n                this.addRunningRequest(queueKey, requestId, request);\n                requestManager.events.emitLoading(queueKey, requestId, {\n                    queueKey,\n                    requestId,\n                    loading: true,\n                    isRetry: !!storageElement.retries,\n                    isOffline\n                });\n                this.incrementQueueRequestCount(queueKey);\n                requestManager.addAbortController(abortKey, requestId);\n                const response = yield adapter4(request, requestId);\n                requestManager.removeAbortController(abortKey, requestId);\n                const isOfflineResponseStatus = !appManager.isOnline;\n                const isCancelMessage = getErrorMessage(\"abort\").message === ((_a = response.error) == null ? void 0 : _a.message);\n                const isCanceled = !this.hasRunningRequest(queueKey, requestId) || isCancelMessage;\n                this.deleteRunningRequest(queueKey, requestId);\n                const requestDetails = {\n                    isCanceled,\n                    isOffline: isOfflineResponseStatus,\n                    retries: storageElement.retries,\n                    timestamp: +/* @__PURE__ */ new Date()\n                };\n                requestManager.events.emitLoading(queueKey, requestId, {\n                    queueKey,\n                    requestId,\n                    loading: false,\n                    isRetry: !!storageElement.retries,\n                    isOffline\n                });\n                requestManager.events.emitResponse(cacheKey, requestId, response, requestDetails);\n                cache.set(request, __spreadValues(__spreadValues({}, response), requestDetails));\n                this.logger.info(\"Request finished\", {\n                    requestId,\n                    request,\n                    response,\n                    requestDetails\n                });\n                if (isCanceled) {\n                    const queue = this.getQueue(queueKey);\n                    const queueElement = queue.requests.find((req)=>req.requestId === requestId);\n                    if (!queue.stopped && !(queueElement == null ? void 0 : queueElement.stopped)) {\n                        this.logger.debug(\"Request paused\", {\n                            response,\n                            requestDetails,\n                            request\n                        });\n                        return this.delete(queueKey, requestId, abortKey);\n                    }\n                    return this.logger.debug(\"Request canceled\", {\n                        response,\n                        requestDetails,\n                        request\n                    });\n                }\n                if (!response.success && isOfflineResponseStatus) {\n                    if (!offline) {\n                        this.logger.warning(\"Removing non-offline request\", {\n                            response,\n                            requestDetails,\n                            request\n                        });\n                        return this.delete(queueKey, requestId, abortKey);\n                    }\n                    return this.logger.debug(\"Awaiting for network restoration\", {\n                        response,\n                        requestDetails,\n                        request\n                    });\n                }\n                if (response.success) {\n                    this.delete(queueKey, requestId, abortKey);\n                    return this.logger.debug(\"Successful response, removing request from queue.\", {\n                        response,\n                        requestDetails,\n                        request\n                    });\n                }\n                if (!response.success && canRetry) {\n                    this.logger.debug(\"Waiting for retry\", {\n                        response,\n                        requestDetails,\n                        request\n                    });\n                    setTimeout(()=>{\n                        this.logger.warning(\"Error response, performing retry\");\n                        this.performRequest(__spreadProps(__spreadValues({}, storageElement), {\n                            retries: storageElement.retries + 1\n                        }));\n                    }, retryTime || 0);\n                } else {\n                    this.logger.error(\"All retries have been used. Removing request from queue.\");\n                    this.delete(queueKey, requestId, abortKey);\n                }\n            });\n        var _a, _b, _c, _d;\n        (_a = this.emitter) == null ? void 0 : _a.setMaxListeners(Infinity);\n        this.logger = client.loggerManager.init(\"Dispatcher\");\n        if ((_b = this.options) == null ? void 0 : _b.storage) {\n            this.storage = this.options.storage;\n        }\n        this.client.appManager.events.onOnline(()=>{\n            this.flush();\n        });\n        (_d = (_c = this.options) == null ? void 0 : _c.onInitialization) == null ? void 0 : _d.call(_c, this);\n    }\n};\n// src/dispatcher/dispatcher.utils.ts\nvar getDispatcherDrainedEventKey = (key)=>{\n    return `${key}-drained-event`;\n};\nvar getDispatcherStatusEventKey = (key)=>{\n    return `${key}-status-event`;\n};\nvar getDispatcherChangeEventKey = (key)=>{\n    return `${key}-change-event`;\n};\nvar getIsEqualTimestamp = (currentTimestamp, threshold, queueTimestamp)=>{\n    if (!queueTimestamp) {\n        return false;\n    }\n    return queueTimestamp - currentTimestamp <= threshold;\n};\nvar canRetryRequest = (currentRetries, retry)=>{\n    if (retry && currentRetries < retry) {\n        return true;\n    }\n    return false;\n};\nvar getRequestType = (request, latestRequest)=>{\n    const { queued, cancelable, deduplicate } = request;\n    const canDeduplicate = latestRequest ? +/* @__PURE__ */ new Date() - latestRequest.timestamp <= request.deduplicateTime : false;\n    if (queued) {\n        return \"one-by-one\" /* oneByOne */ ;\n    }\n    if (cancelable) {\n        return \"previous-canceled\" /* previousCanceled */ ;\n    }\n    if (canDeduplicate && deduplicate) {\n        return \"deduplicated\" /* deduplicated */ ;\n    }\n    return \"all-at-once\" /* allAtOnce */ ;\n};\n// src/request/request.utils.ts\nvar stringifyKey = (value)=>{\n    try {\n        if (typeof value === \"string\") return value;\n        if (value === void 0 || value === null) return \"\";\n        const data = JSON.stringify(value);\n        if (typeof data !== \"string\") throw new Error();\n        return data;\n    } catch (_) {\n        return \"\";\n    }\n};\nvar getProgressValue = ({ loaded, total })=>{\n    if (!loaded || !total) return 0;\n    return Number((loaded * 100 / total).toFixed(0));\n};\nvar getRequestEta = (startDate, progressDate, { total, loaded })=>{\n    const timeElapsed = +progressDate - +startDate || 1;\n    const uploadSpeed = loaded / timeElapsed;\n    const totalValue = Math.max(total, loaded);\n    const sizeLeft = totalValue - loaded;\n    const estimatedTimeValue = uploadSpeed ? sizeLeft / uploadSpeed : null;\n    const timeLeft = totalValue === loaded ? 0 : estimatedTimeValue;\n    return {\n        timeLeft,\n        sizeLeft\n    };\n};\nvar getProgressData = (requestStartTime, progressDate, progressEvent)=>{\n    const { total, loaded } = progressEvent;\n    if (Number.isNaN(total) || Number.isNaN(loaded)) {\n        return {\n            progress: 0,\n            timeLeft: 0,\n            sizeLeft: 0,\n            total: 0,\n            loaded: 0,\n            startTimestamp: +requestStartTime\n        };\n    }\n    const { timeLeft, sizeLeft } = getRequestEta(requestStartTime, progressDate, progressEvent);\n    return {\n        progress: getProgressValue(progressEvent),\n        timeLeft,\n        sizeLeft,\n        total,\n        loaded,\n        startTimestamp: +requestStartTime\n    };\n};\nvar getSimpleKey = (request)=>{\n    return `${request.method}_${request.requestOptions.endpoint}_${request.cancelable}`;\n};\nvar getRequestKey = (request, useInitialValues)=>{\n    const methodKey = stringifyKey(request.method);\n    const endpointKey = useInitialValues ? request.requestOptions.endpoint : stringifyKey(request.endpoint);\n    return `${methodKey}_${endpointKey}`;\n};\nvar getRequestDispatcher = (request, dispatcherType = \"auto\")=>{\n    const { fetchDispatcher, submitDispatcher } = request.client;\n    const isGet = request.method === \"GET\" /* get */ ;\n    const isFetchDispatcher = dispatcherType === \"auto\" && isGet || dispatcherType === \"fetch\";\n    const dispatcher = isFetchDispatcher ? fetchDispatcher : submitDispatcher;\n    return [\n        dispatcher,\n        isFetchDispatcher\n    ];\n};\nvar sendRequest = (request, options)=>{\n    const { requestManager } = request.client;\n    const [dispatcher] = getRequestDispatcher(request, options == null ? void 0 : options.dispatcherType);\n    return new Promise((resolve)=>{\n        var _a;\n        let isResolved = false;\n        const requestId = dispatcher.add(request);\n        (_a = options == null ? void 0 : options.onSettle) == null ? void 0 : _a.call(options, requestId, request);\n        const unmountRequestStart = requestManager.events.onRequestStartById(requestId, (...props)=>{\n            var _a2;\n            return (_a2 = options == null ? void 0 : options.onRequestStart) == null ? void 0 : _a2.call(options, ...props);\n        });\n        const unmountResponseStart = requestManager.events.onResponseStartById(requestId, (...props)=>{\n            var _a2;\n            return (_a2 = options == null ? void 0 : options.onResponseStart) == null ? void 0 : _a2.call(options, ...props);\n        });\n        const unmountUpload = requestManager.events.onUploadProgressById(requestId, (...props)=>{\n            var _a2;\n            return (_a2 = options == null ? void 0 : options.onUploadProgress) == null ? void 0 : _a2.call(options, ...props);\n        });\n        const unmountDownload = requestManager.events.onDownloadProgressById(requestId, (...props)=>{\n            var _a2;\n            return (_a2 = options == null ? void 0 : options.onDownloadProgress) == null ? void 0 : _a2.call(options, ...props);\n        });\n        const unmountResponse = requestManager.events.onResponseById(requestId, (response, details)=>{\n            var _a2;\n            isResolved = true;\n            const mapping = (_a2 = request.responseMapper) == null ? void 0 : _a2.call(request, response);\n            const isOfflineStatus = request.offline && details.isOffline;\n            const willRetry = canRetryRequest(details.retries, request.retry);\n            const handleResponse = (success, data)=>{\n                var _a3;\n                if (!success && isOfflineStatus) return;\n                if (!success && willRetry) return;\n                (_a3 = options == null ? void 0 : options.onResponse) == null ? void 0 : _a3.call(options, data, details);\n                resolve(data);\n                umountAll();\n            };\n            if (mapping instanceof Promise) {\n                (()=>__async(void 0, null, function*() {\n                        const responseData = yield mapping;\n                        const { success } = responseData;\n                        handleResponse(success, responseData);\n                    }))();\n            } else {\n                const data = mapping || response;\n                const { success } = data;\n                handleResponse(success, data);\n            }\n        });\n        const unmountRemoveQueueElement = requestManager.events.onRemoveById(requestId, (...props)=>{\n            var _a2;\n            if (!isResolved) {\n                (_a2 = options == null ? void 0 : options.onRemove) == null ? void 0 : _a2.call(options, ...props);\n                resolve({\n                    data: null,\n                    status: null,\n                    success: null,\n                    error: getErrorMessage(\"deleted\"),\n                    extra: request.client.defaultExtra\n                });\n                umountAll();\n            }\n        });\n        function umountAll() {\n            unmountRequestStart();\n            unmountResponseStart();\n            unmountUpload();\n            unmountDownload();\n            unmountResponse();\n            unmountRemoveQueueElement();\n        }\n    });\n};\n// src/mocker/mocker.ts\nvar mocker = (_0, _1)=>__async(void 0, [\n        _0,\n        _1\n    ], function*(request, { onError, onResponseEnd, onTimeoutError, onRequestEnd, createAbortListener, onResponseProgress, onRequestProgress, onResponseStart, onBeforeRequest, onRequestStart, onSuccess }) {\n        const mock = request.mock.next();\n        const result = mock.value instanceof Function ? yield mock.value(request) : mock.value;\n        return new Promise((resolve)=>{\n            const { data, status = 200, success = true, extra, config } = result;\n            const { requestTime = 20, responseTime = 20, totalUploaded = 1, totalDownloaded = 1, timeout = false } = config || {};\n            createAbortListener(0, {}, ()=>{}, resolve);\n            onBeforeRequest();\n            onRequestStart();\n            const progress = (totalTime, totalSize, progressFunction)=>new Promise((resolveProgress)=>{\n                    const interval = 20;\n                    const dataStart = +/* @__PURE__ */ new Date();\n                    const chunkSize = Math.floor(totalSize / Math.floor(totalTime / Math.min(totalTime, interval)));\n                    let currentlyLoaded = 0;\n                    const timer = setInterval(function handleProgressInterval() {\n                        const currentTime = Math.min(totalTime, +/* @__PURE__ */ new Date() - dataStart);\n                        currentlyLoaded += currentlyLoaded + chunkSize >= totalSize ? totalSize - currentlyLoaded : chunkSize;\n                        if (currentTime >= totalTime) {\n                            resolveProgress(true);\n                            clearInterval(timer);\n                        } else {\n                            progressFunction({\n                                total: totalSize,\n                                loaded: currentlyLoaded\n                            });\n                        }\n                    }, interval);\n                });\n            const getResponse = ()=>__async(void 0, null, function*() {\n                    yield progress(requestTime, totalUploaded, onRequestProgress);\n                    onRequestEnd();\n                    onResponseStart();\n                    yield progress(responseTime, totalDownloaded, onResponseProgress);\n                    if (success) {\n                        onSuccess(data, status, extra || {}, resolve);\n                    } else {\n                        onError(data, status, extra || {}, resolve);\n                    }\n                });\n            if (timeout) {\n                setTimeout(()=>onTimeoutError(0, extra || {}, resolve), 1);\n            } else {\n                setTimeout(getResponse, requestTime + responseTime + 1);\n            }\n            onResponseEnd();\n        });\n    });\n// src/adapter/adapter.bindings.ts\nvar getAdapterBindings = (req, requestId, systemErrorStatus, systemErrorExtra)=>__async(void 0, null, function*() {\n        const { url, requestManager, loggerManager, headerMapper, payloadMapper } = req.client;\n        const logger2 = loggerManager.init(\"Adapter\");\n        let processingError = null;\n        let requestStartTimestamp = null;\n        let responseStartTimestamp = null;\n        let request = req;\n        let requestTotal = 1;\n        let responseTotal = 1;\n        let previousRequestTotal = 0;\n        let previousResponseTotal = 0;\n        logger2.debug(`Starting request middleware callbacks`);\n        try {\n            request = yield request.client.__modifyRequest(req);\n            if (request.auth) {\n                request = yield request.client.__modifyAuth(req);\n            }\n            if (request.requestMapper) {\n                request = yield request.requestMapper(request, requestId);\n            }\n        } catch (err) {\n            processingError = err;\n        }\n        const { client, abortKey, queueKey, endpoint, data } = request;\n        const fullUrl = url + endpoint;\n        const effects = client.effects.filter((effect)=>request.effectKey === effect.getEffectKey());\n        const headers = headerMapper(request);\n        let payload = data;\n        try {\n            payload = payloadMapper(data);\n            if (request.dataMapper) {\n                payload = yield request.dataMapper(data);\n            }\n        } catch (err) {\n            processingError = err;\n        }\n        const config = __spreadValues({}, request.options);\n        const getRequestStartTimestamp = ()=>{\n            return requestStartTimestamp;\n        };\n        const getResponseStartTimestamp = ()=>{\n            return responseStartTimestamp;\n        };\n        const getTotal = (previousTotal, progress)=>{\n            if (!progress) return previousTotal;\n            const total = Number(progress.total || 0);\n            const loaded = Number(progress.loaded || 0);\n            return Math.max(total, loaded, previousTotal);\n        };\n        const handleRequestProgress = (startTimestamp, progressTimestamp, progressEvent)=>{\n            const progress = getProgressData(new Date(startTimestamp), new Date(progressTimestamp), progressEvent);\n            if (previousRequestTotal !== 100) {\n                previousRequestTotal = progress.total;\n                requestManager.events.emitUploadProgress(queueKey, requestId, progress, {\n                    requestId,\n                    request\n                });\n            }\n        };\n        const handleResponseProgress = (startTimestamp, progressTimestamp, progressEvent)=>{\n            const progress = getProgressData(new Date(startTimestamp), new Date(progressTimestamp), progressEvent);\n            if (previousResponseTotal !== 100) {\n                previousResponseTotal = progress.total;\n                requestManager.events.emitDownloadProgress(queueKey, requestId, progress, {\n                    requestId,\n                    request\n                });\n            }\n        };\n        const onBeforeRequest = ()=>{\n            effects.forEach((effect)=>effect.onTrigger(request));\n        };\n        const onRequestStart = (progress)=>{\n            effects.forEach((action)=>action.onStart(request));\n            if (progress == null ? void 0 : progress.total) {\n                requestTotal = getTotal(requestTotal, progress);\n            }\n            const initialPayload = {\n                total: requestTotal,\n                loaded: (progress == null ? void 0 : progress.loaded) || 0\n            };\n            requestStartTimestamp = +/* @__PURE__ */ new Date();\n            handleRequestProgress(requestStartTimestamp, requestStartTimestamp, initialPayload);\n            requestManager.events.emitRequestStart(queueKey, requestId, {\n                requestId,\n                request\n            });\n            return requestStartTimestamp;\n        };\n        const onRequestProgress = (progress)=>{\n            if (!requestStartTimestamp) {\n                requestStartTimestamp = +/* @__PURE__ */ new Date();\n            }\n            requestTotal = getTotal(requestTotal, progress);\n            const progressTimestamp = +/* @__PURE__ */ new Date();\n            handleRequestProgress(requestStartTimestamp, progressTimestamp, {\n                total: requestTotal,\n                loaded: progress.loaded || 0\n            });\n            return progressTimestamp;\n        };\n        const onRequestEnd = ()=>{\n            if (!requestStartTimestamp) {\n                requestStartTimestamp = +/* @__PURE__ */ new Date();\n            }\n            const progressTimestamp = +/* @__PURE__ */ new Date();\n            handleRequestProgress(requestStartTimestamp, progressTimestamp, {\n                total: requestTotal,\n                loaded: requestTotal\n            });\n            return progressTimestamp;\n        };\n        const onResponseStart = (progress)=>{\n            responseStartTimestamp = +/* @__PURE__ */ new Date();\n            responseTotal = getTotal(responseTotal, progress);\n            const initialPayload = {\n                total: responseTotal,\n                loaded: (progress == null ? void 0 : progress.loaded) || 0\n            };\n            handleResponseProgress(responseStartTimestamp, responseStartTimestamp, initialPayload);\n            requestManager.events.emitResponseStart(queueKey, requestId, {\n                requestId,\n                request\n            });\n            return responseStartTimestamp;\n        };\n        const onResponseProgress = (progress)=>{\n            if (!responseStartTimestamp) {\n                responseStartTimestamp = +/* @__PURE__ */ new Date();\n            }\n            const progressTimestamp = +/* @__PURE__ */ new Date();\n            responseTotal = getTotal(responseTotal, progress);\n            handleResponseProgress(responseStartTimestamp, progressTimestamp, {\n                total: progress.total || responseTotal,\n                loaded: progress.loaded || 0\n            });\n            return progressTimestamp;\n        };\n        const onResponseEnd = ()=>{\n            if (!responseStartTimestamp) {\n                responseStartTimestamp = +/* @__PURE__ */ new Date();\n            }\n            const progressTimestamp = +/* @__PURE__ */ new Date();\n            handleResponseProgress(responseStartTimestamp, progressTimestamp, {\n                total: responseTotal,\n                loaded: responseTotal\n            });\n            return progressTimestamp;\n        };\n        const onSuccess = (responseData, status, extra, resolve)=>__async(void 0, null, function*() {\n                let response = {\n                    data: responseData,\n                    error: null,\n                    success: true,\n                    status,\n                    extra\n                };\n                response = yield request.client.__modifyResponse(response, request);\n                response = yield request.client.__modifySuccessResponse(response, request);\n                effects.forEach((effect)=>effect.onSuccess(response, request));\n                effects.forEach((effect)=>effect.onFinished(response, request));\n                resolve(response);\n                return response;\n            });\n        const onError = (error, status, extra, resolve)=>__async(void 0, null, function*() {\n                let responseData = {\n                    data: null,\n                    status,\n                    error,\n                    success: false,\n                    extra\n                };\n                responseData = yield request.client.__modifyResponse(responseData, request);\n                responseData = yield request.client.__modifyErrorResponse(responseData, request);\n                effects.forEach((effect)=>effect.onError(responseData, request));\n                effects.forEach((effect)=>effect.onFinished(responseData, request));\n                resolve(responseData);\n                return responseData;\n            });\n        const onAbortError = (status, extra, resolve)=>{\n            const error = getErrorMessage(\"abort\");\n            return onError(error, status, extra, resolve);\n        };\n        const onTimeoutError = (status, extra, resolve)=>{\n            const error = getErrorMessage(\"timeout\");\n            return onError(error, status, extra, resolve);\n        };\n        const onUnexpectedError = (status, extra, resolve)=>{\n            const error = getErrorMessage();\n            return onError(error, status, extra, resolve);\n        };\n        const getAbortController = ()=>{\n            return requestManager.getAbortController(abortKey, requestId);\n        };\n        const createAbortListener = (status, abortExtra, callback, resolve)=>{\n            const controller = getAbortController();\n            if (!controller) {\n                throw new Error(\"Controller is not found\");\n            }\n            const fn = ()=>{\n                onAbortError(status, abortExtra, resolve);\n                callback();\n                requestManager.events.emitAbort(abortKey, requestId, request);\n            };\n            if (controller.signal.aborted) {\n                fn();\n            }\n            controller.signal.addEventListener(\"abort\", fn);\n            return ()=>controller.signal.removeEventListener(\"abort\", fn);\n        };\n        const makeRequest = (apiCall)=>{\n            if (processingError) {\n                return onError(processingError, systemErrorStatus, systemErrorExtra, ()=>null);\n            }\n            if (req.mock && req.isMockEnabled && req.client.isMockEnabled) {\n                return mocker(request, {\n                    onError,\n                    onResponseEnd,\n                    onTimeoutError,\n                    onRequestEnd,\n                    createAbortListener,\n                    onResponseProgress,\n                    onRequestProgress,\n                    onResponseStart,\n                    onBeforeRequest,\n                    onRequestStart,\n                    onSuccess\n                });\n            }\n            return new Promise(apiCall);\n        };\n        logger2.debug(`Finishing request bindings creation`, {\n            fullUrl,\n            data,\n            headers,\n            payload,\n            config\n        });\n        return {\n            fullUrl,\n            data,\n            headers,\n            payload,\n            config,\n            getAbortController,\n            getRequestStartTimestamp,\n            getResponseStartTimestamp,\n            createAbortListener,\n            onBeforeRequest,\n            onRequestStart,\n            onRequestProgress,\n            onRequestEnd,\n            onResponseStart,\n            onResponseProgress,\n            onResponseEnd,\n            onSuccess,\n            onAbortError,\n            onTimeoutError,\n            onUnexpectedError,\n            onError,\n            makeRequest\n        };\n    });\n// src/cache/cache.ts\n\nvar Cache = class {\n    constructor(client, options){\n        this.client = client;\n        this.options = options;\n        this.emitter = new (events__WEBPACK_IMPORTED_MODULE_2___default())();\n        this.garbageCollectors = /* @__PURE__ */ new Map();\n        /**\n     * Set the cache data to the storage\n     * @param request\n     * @param response\n     * @returns\n     */ this.set = (request, response)=>{\n            var _a, _b, _c;\n            this.logger.debug(\"Processing cache response\", {\n                request,\n                response\n            });\n            const { cacheKey, cache, cacheTime, garbageCollection } = request;\n            const cachedData = this.storage.get(cacheKey);\n            const processedResponse = typeof response === \"function\" ? response(cachedData) : response;\n            const data = getCacheData(cachedData, processedResponse);\n            const newCacheData = __spreadProps(__spreadValues({}, data), {\n                cacheTime,\n                clearKey: this.clearKey,\n                garbageCollection\n            });\n            this.events.emitCacheData(cacheKey, newCacheData);\n            this.logger.debug(\"Emitting cache response\", {\n                request,\n                data\n            });\n            if (!cache) {\n                return this.logger.debug(\"Prevented saving response to cache\", {\n                    request,\n                    data\n                });\n            }\n            if (processedResponse.success) {\n                this.logger.debug(\"Saving response to cache storage\", {\n                    request,\n                    data\n                });\n                this.storage.set(cacheKey, newCacheData);\n                (_a = this.lazyStorage) == null ? void 0 : _a.set(cacheKey, newCacheData);\n                (_c = (_b = this.options) == null ? void 0 : _b.onChange) == null ? void 0 : _c.call(_b, cacheKey, newCacheData);\n                this.scheduleGarbageCollector(cacheKey);\n            }\n        };\n        /**\n     * Update the cache data with partial response data\n     * @param request\n     * @param partialResponse\n     * @returns\n     */ this.update = (request, partialResponse)=>{\n            this.logger.debug(\"Processing cache update\", {\n                request,\n                partialResponse\n            });\n            const { cacheKey } = request;\n            const cachedData = this.storage.get(cacheKey);\n            const processedResponse = typeof partialResponse === \"function\" ? partialResponse(cachedData) : partialResponse;\n            if (cachedData) {\n                this.set(request, __spreadValues(__spreadValues({}, cachedData), processedResponse));\n            }\n        };\n        /**\n     * Get particular record from storage by cacheKey. It will trigger lazyStorage to emit lazy load event for reading it's data.\n     * @param cacheKey\n     * @returns\n     */ this.get = (cacheKey)=>{\n            this.getLazyResource(cacheKey);\n            const cachedData = this.storage.get(cacheKey);\n            return cachedData;\n        };\n        /**\n     * Get sync storage keys, lazyStorage keys will not be included\n     * @returns\n     */ this.keys = ()=>{\n            const values = this.storage.keys();\n            return Array.from(values);\n        };\n        /**\n     * Delete record from storages and trigger invalidation event\n     * @param cacheKey\n     */ this.delete = (cacheKey)=>{\n            var _a, _b, _c;\n            this.logger.debug(\"Deleting cache element\", {\n                cacheKey\n            });\n            this.storage.delete(cacheKey);\n            (_b = (_a = this.options) == null ? void 0 : _a.onDelete) == null ? void 0 : _b.call(_a, cacheKey);\n            (_c = this.lazyStorage) == null ? void 0 : _c.delete(cacheKey);\n        };\n        /**\n     * Invalidate cache by cacheKey or partial matching with RegExp\n     * @param cacheKey\n     */ this.invalidate = (cacheKey)=>__async(this, null, function*() {\n                this.logger.debug(\"Revalidating cache element\", {\n                    cacheKey\n                });\n                const keys = yield this.getLazyKeys();\n                if (typeof cacheKey === \"string\") {\n                    this.events.emitInvalidation(cacheKey);\n                    this.delete(cacheKey);\n                } else {\n                    for (const entityKey of keys){\n                        if (cacheKey.test(entityKey)) {\n                            this.events.emitInvalidation(entityKey);\n                            this.delete(entityKey);\n                        }\n                    }\n                }\n            });\n        /**\n     * Used to receive data from lazy storage\n     * @param cacheKey\n     */ this.getLazyResource = (cacheKey)=>__async(this, null, function*() {\n                var _a;\n                const data = yield (_a = this.lazyStorage) == null ? void 0 : _a.get(cacheKey);\n                const syncData = this.storage.get(cacheKey);\n                const hasLazyData = this.lazyStorage && data;\n                if (hasLazyData) {\n                    const now = +/* @__PURE__ */ new Date();\n                    const isNewestData = syncData ? syncData.timestamp < data.timestamp : true;\n                    const isStaleData = data.cacheTime <= now - data.timestamp;\n                    const isValidLazyData = data.clearKey === this.clearKey;\n                    if (!isValidLazyData) {\n                        this.lazyStorage.delete(cacheKey);\n                    }\n                    if (isNewestData && !isStaleData && isValidLazyData) {\n                        this.storage.set(cacheKey, data);\n                        this.events.emitCacheData(cacheKey, data);\n                        return data;\n                    }\n                }\n                const isValidData = (syncData == null ? void 0 : syncData.clearKey) === this.clearKey;\n                if (syncData && !isValidData) {\n                    this.delete(cacheKey);\n                }\n                return syncData;\n            });\n        /**\n     * Used to receive keys from sync storage and lazy storage\n     * @param cacheKey\n     */ this.getLazyKeys = ()=>__async(this, null, function*() {\n                var _a;\n                const keys = yield (_a = this.lazyStorage) == null ? void 0 : _a.keys();\n                const asyncKeys = Array.from(keys || []);\n                const syncKeys = Array.from(this.storage.keys());\n                return [\n                    .../* @__PURE__ */ new Set([\n                        ...asyncKeys,\n                        ...syncKeys\n                    ])\n                ];\n            });\n        /**\n     * Schedule garbage collection for given key\n     * @param cacheKey\n     * @returns\n     */ this.scheduleGarbageCollector = (cacheKey)=>__async(this, null, function*() {\n                const cacheData = yield this.getLazyResource(cacheKey);\n                clearTimeout(this.garbageCollectors.get(cacheKey));\n                if (cacheData) {\n                    const timeLeft = cacheData.garbageCollection + cacheData.timestamp - +/* @__PURE__ */ new Date();\n                    if (cacheData.garbageCollection !== null && JSON.stringify(cacheData.garbageCollection) === \"null\") {\n                        this.logger.info(\"Cache value is Infinite\", {\n                            cacheKey\n                        });\n                    } else if (timeLeft >= 0) {\n                        this.garbageCollectors.set(cacheKey, setTimeout(()=>{\n                            if (this.client.appManager.isOnline) {\n                                this.logger.info(\"Garbage collecting cache element\", {\n                                    cacheKey\n                                });\n                                this.delete(cacheKey);\n                            }\n                        }, timeLeft));\n                    } else if (this.client.appManager.isOnline) {\n                        this.logger.info(\"Garbage collecting cache element\", {\n                            cacheKey\n                        });\n                        this.delete(cacheKey);\n                    }\n                }\n            });\n        /**\n     * Clear cache storages\n     */ this.clear = ()=>__async(this, null, function*() {\n                this.storage.clear();\n            });\n        var _a, _b, _c, _d, _e, _f;\n        (_a = this.emitter) == null ? void 0 : _a.setMaxListeners(Infinity);\n        this.storage = ((_b = this.options) == null ? void 0 : _b.storage) || /* @__PURE__ */ new Map();\n        this.events = getCacheEvents(this.emitter);\n        (_d = (_c = this.options) == null ? void 0 : _c.onInitialization) == null ? void 0 : _d.call(_c, this);\n        this.clearKey = ((_e = this.options) == null ? void 0 : _e.clearKey) || \"\";\n        this.lazyStorage = (_f = this.options) == null ? void 0 : _f.lazyStorage;\n        this.logger = this.client.loggerManager.init(\"Cache\");\n        this.getLazyKeys().then((keys)=>{\n            keys.forEach(this.scheduleGarbageCollector);\n        });\n        this.client.appManager.events.onOnline(()=>{\n            this.getLazyKeys().then((keys)=>{\n                keys.forEach(this.scheduleGarbageCollector);\n            });\n        });\n    }\n};\n// src/cache/cache.utils.ts\nvar getCacheData = (previousResponse, response)=>{\n    const { data, success } = response;\n    const previousData = !success && previousResponse ? previousResponse.data : null;\n    const computedData = data || previousData;\n    return __spreadProps(__spreadValues({}, response), {\n        data: computedData\n    });\n};\nvar getInvalidateEventKey = (key)=>{\n    return `${key}_invalidate`;\n};\nvar getCacheKey = (key)=>{\n    return `${key}_cache`;\n};\nvar getCacheIdKey = (key)=>{\n    return `${key}_cache_by_id`;\n};\n// src/cache/cache.events.ts\nvar getCacheEvents = (emitter)=>({\n        /**\n   * Set cache data\n   * @param cacheKey\n   * @param data\n   */ emitCacheData: (cacheKey, data)=>{\n            emitter.emit(getCacheKey(cacheKey), data);\n        },\n        /**\n   * Invalidate cache values event\n   */ emitInvalidation: (cacheKey)=>{\n            emitter.emit(getInvalidateEventKey(cacheKey));\n        },\n        /** StatusType\n   * Cache data listener\n   * @param cacheKey\n   * @param callback\n   * @returns\n   */ onData: (cacheKey, callback)=>{\n            emitter.on(getCacheKey(cacheKey), callback);\n            return ()=>emitter.removeListener(getCacheKey(cacheKey), callback);\n        },\n        /**\n   * Cache invalidation listener\n   * @param cacheKey\n   * @param callback\n   * @returns\n   */ onInvalidate: (cacheKey, callback)=>{\n            emitter.on(getInvalidateEventKey(cacheKey), callback);\n            return ()=>emitter.removeListener(getInvalidateEventKey(cacheKey), callback);\n        }\n    });\n// src/managers/app/app.manager.ts\n\nvar AppManager = class {\n    constructor(options){\n        this.options = options;\n        this.emitter = new (events__WEBPACK_IMPORTED_MODULE_2___default())();\n        this.events = getAppManagerEvents(this.emitter);\n        this.setInitialFocus = (initValue)=>__async(this, null, function*() {\n                if (typeof initValue === \"function\") {\n                    this.isFocused = false;\n                    this.isFocused = yield initValue();\n                } else {\n                    this.isFocused = initValue;\n                }\n            });\n        this.setInitialOnline = (initValue)=>__async(this, null, function*() {\n                if (typeof initValue === \"function\") {\n                    this.isOnline = false;\n                    this.isOnline = yield initValue();\n                } else {\n                    this.isOnline = initValue;\n                }\n            });\n        this.setFocused = (isFocused)=>{\n            this.isFocused = isFocused;\n            if (isFocused) {\n                this.events.emitFocus();\n            } else {\n                this.events.emitBlur();\n            }\n        };\n        this.setOnline = (isOnline)=>{\n            this.isOnline = isOnline;\n            if (isOnline) {\n                this.events.emitOnline();\n            } else {\n                this.events.emitOffline();\n            }\n        };\n        var _a;\n        (_a = this.emitter) == null ? void 0 : _a.setMaxListeners(Infinity);\n        const { focusEvent = appManagerInitialOptions.focusEvent, onlineEvent = appManagerInitialOptions.onlineEvent, initiallyFocused = appManagerInitialOptions.initiallyFocused, initiallyOnline = appManagerInitialOptions.initiallyOnline } = this.options || appManagerInitialOptions;\n        this.setInitialFocus(initiallyFocused);\n        this.setInitialOnline(initiallyOnline);\n        focusEvent(this.setFocused);\n        onlineEvent(this.setOnline);\n        this.isBrowser = hasDocument();\n    }\n};\n// src/managers/app/app.manager.utils.ts\nvar hasWindow = ()=>{\n    try {\n        return Boolean(window && window.addEventListener);\n    } catch (err) {\n        return false;\n    }\n};\nvar hasDocument = ()=>{\n    try {\n        return Boolean(hasWindow() && window.document && window.document.addEventListener);\n    } catch (err) {\n        return false;\n    }\n};\nvar onWindowEvent = (key, listener, options)=>{\n    if (hasWindow()) {\n        window.addEventListener(key, listener, options);\n    }\n};\nvar onDocumentEvent = (key, listener, options)=>{\n    if (hasDocument()) {\n        window.document.addEventListener(key, listener, options);\n    }\n};\n// src/managers/app/app.manager.events.ts\nvar getAppManagerEvents = (emitter)=>({\n        emitFocus: ()=>{\n            emitter.emit(\"focus\" /* focus */ );\n        },\n        emitBlur: ()=>{\n            emitter.emit(\"blur\" /* blur */ );\n        },\n        emitOnline: ()=>{\n            emitter.emit(\"online\" /* online */ );\n        },\n        emitOffline: ()=>{\n            emitter.emit(\"offline\" /* offline */ );\n        },\n        onFocus: (callback)=>{\n            emitter.on(\"focus\" /* focus */ , callback);\n            return ()=>emitter.removeListener(\"focus\" /* focus */ , callback);\n        },\n        onBlur: (callback)=>{\n            emitter.on(\"blur\" /* blur */ , callback);\n            return ()=>emitter.removeListener(\"blur\" /* blur */ , callback);\n        },\n        onOnline: (callback)=>{\n            emitter.on(\"online\" /* online */ , callback);\n            return ()=>emitter.removeListener(\"online\" /* online */ , callback);\n        },\n        onOffline: (callback)=>{\n            emitter.on(\"offline\" /* offline */ , callback);\n            return ()=>emitter.removeListener(\"offline\" /* offline */ , callback);\n        }\n    });\n// src/managers/app/app.manager.constants.ts\nvar AppEvents = /* @__PURE__ */ ((AppEvents2)=>{\n    AppEvents2[\"focus\"] = \"focus\";\n    AppEvents2[\"blur\"] = \"blur\";\n    AppEvents2[\"online\"] = \"online\";\n    AppEvents2[\"offline\"] = \"offline\";\n    return AppEvents2;\n})(AppEvents || {});\nvar appManagerInitialOptions = {\n    initiallyFocused: true,\n    initiallyOnline: true,\n    focusEvent: (setFocused)=>{\n        onDocumentEvent(\"visibilitychange\", ()=>setFocused(true));\n        onWindowEvent(\"focus\", ()=>setFocused(true));\n        onWindowEvent(\"blur\", ()=>setFocused(false));\n    },\n    onlineEvent: (setOnline)=>{\n        onWindowEvent(\"online\", ()=>setOnline(true));\n        onWindowEvent(\"offline\", ()=>setOnline(false));\n    }\n};\n// src/managers/request/request.manager.ts\n\nvar RequestManager = class {\n    constructor(){\n        this.emitter = new (events__WEBPACK_IMPORTED_MODULE_2___default())();\n        this.events = getRequestManagerEvents(this.emitter);\n        this.abortControllers = /* @__PURE__ */ new Map();\n        this.addAbortController = (abortKey, requestId)=>{\n            let abortGroup = this.abortControllers.get(abortKey);\n            if (!abortGroup) {\n                const newAbortGroup = /* @__PURE__ */ new Map();\n                abortGroup = newAbortGroup;\n                this.abortControllers.set(abortKey, newAbortGroup);\n            }\n            const abortController = abortGroup.get(requestId);\n            if (!abortController || abortController.signal.aborted) {\n                abortGroup.set(requestId, new AbortController());\n            }\n        };\n        this.getAbortController = (abortKey, requestId)=>{\n            var _a;\n            return (_a = this.abortControllers.get(abortKey)) == null ? void 0 : _a.get(requestId);\n        };\n        this.removeAbortController = (abortKey, requestId)=>{\n            var _a;\n            (_a = this.abortControllers.get(abortKey)) == null ? void 0 : _a.delete(requestId);\n        };\n        // Aborting\n        this.useAbortController = (abortKey, requestId)=>{\n            var _a;\n            const controller = (_a = this.abortControllers.get(abortKey)) == null ? void 0 : _a.get(requestId);\n            controller == null ? void 0 : controller.abort();\n        };\n        this.abortByKey = (abortKey)=>{\n            const controllers = this.abortControllers.get(abortKey);\n            if (controllers) {\n                const entries = Array.from(controllers.entries());\n                entries.forEach(([key])=>{\n                    this.useAbortController(abortKey, key);\n                });\n            }\n        };\n        this.abortByRequestId = (abortKey, requestId)=>{\n            this.useAbortController(abortKey, requestId);\n        };\n        this.abortAll = ()=>{\n            const entries = Array.from(this.abortControllers.entries());\n            entries.forEach(([abortKey, value])=>{\n                const controllers = Array.from(value.entries());\n                controllers.forEach(([requestId])=>{\n                    this.useAbortController(abortKey, requestId);\n                });\n            });\n        };\n        var _a;\n        (_a = this.emitter) == null ? void 0 : _a.setMaxListeners(Infinity);\n    }\n};\n// src/managers/request/request.manager.utils.ts\nvar getLoadingEventKey = (key)=>`${key}-loading-event`;\nvar getLoadingIdEventKey = (key)=>`${key}-loading-event-by-id`;\nvar getRemoveEventKey = (key)=>`${key}-remove-event`;\nvar getRemoveIdEventKey = (key)=>`${key}-remove-event-by-id`;\nvar getAbortEventKey = (key)=>`${key}-request-abort`;\nvar getAbortByIdEventKey = (key)=>`${key}-request-abort-by-id`;\nvar getResponseEventKey = (key)=>`${key}-response`;\nvar getResponseIdEventKey = (key)=>`${key}-response-by-id`;\nvar getRequestStartEventKey = (key)=>`${key}-request-start`;\nvar getRequestStartIdEventKey = (key)=>`${key}-request-start-by-id`;\nvar getResponseStartEventKey = (key)=>`${key}-response-start`;\nvar getResponseStartIdEventKey = (key)=>`${key}-response-start-by-id`;\nvar getUploadProgressEventKey = (key)=>`${key}-request-progress`;\nvar getUploadProgressIdEventKey = (key)=>`${key}-request-progress-by-id`;\nvar getDownloadProgressEventKey = (key)=>`${key}-response-progress`;\nvar getDownloadProgressIdEventKey = (key)=>`${key}-response-progress-by-id`;\n// src/managers/request/request.manager.events.ts\nvar getRequestManagerEvents = (emitter)=>({\n        /**\n   * Emiter\n   */ // Loading\n        emitLoading: (queueKey, requestId, values)=>{\n            emitter.emit(getLoadingIdEventKey(requestId), values);\n            emitter.emit(getLoadingEventKey(queueKey), values);\n        },\n        // Start\n        emitRequestStart: (queueKey, requestId, details)=>{\n            emitter.emit(getRequestStartIdEventKey(requestId), details);\n            emitter.emit(getRequestStartEventKey(queueKey), details);\n        },\n        emitResponseStart: (queueKey, requestId, details)=>{\n            emitter.emit(getResponseStartIdEventKey(requestId), details);\n            emitter.emit(getResponseStartEventKey(queueKey), details);\n        },\n        // Progress\n        emitUploadProgress: (queueKey, requestId, values, details)=>{\n            emitter.emit(getUploadProgressIdEventKey(requestId), values, details);\n            emitter.emit(getUploadProgressEventKey(queueKey), values, details);\n        },\n        emitDownloadProgress: (queueKey, requestId, values, details)=>{\n            emitter.emit(getDownloadProgressIdEventKey(requestId), values, details);\n            emitter.emit(getDownloadProgressEventKey(queueKey), values, details);\n        },\n        // Response\n        emitResponse: (cacheKey, requestId, response, details)=>{\n            emitter.emit(getResponseIdEventKey(requestId), response, details);\n            emitter.emit(getResponseEventKey(cacheKey), response, details);\n        },\n        // Abort\n        emitAbort: (abortKey, requestId, request)=>{\n            emitter.emit(getAbortByIdEventKey(requestId), request);\n            emitter.emit(getAbortEventKey(abortKey), request);\n        },\n        // Remove\n        emitRemove: (queueKey, requestId, details)=>{\n            emitter.emit(getRemoveEventKey(queueKey), details);\n            emitter.emit(getRemoveIdEventKey(requestId), details);\n        },\n        /**\n   * Listeners\n   */ // Loading\n        onLoading: (queueKey, callback)=>{\n            emitter.on(getLoadingEventKey(queueKey), callback);\n            return ()=>emitter.removeListener(getLoadingEventKey(queueKey), callback);\n        },\n        onLoadingById: (requestId, callback)=>{\n            emitter.on(getLoadingIdEventKey(requestId), callback);\n            return ()=>emitter.removeListener(getLoadingIdEventKey(requestId), callback);\n        },\n        // Request Start\n        onRequestStart: (queueKey, callback)=>{\n            emitter.on(getRequestStartEventKey(queueKey), callback);\n            return ()=>emitter.removeListener(getRequestStartEventKey(queueKey), callback);\n        },\n        onRequestStartById: (requestId, callback)=>{\n            emitter.on(getRequestStartIdEventKey(requestId), callback);\n            return ()=>emitter.removeListener(getRequestStartIdEventKey(requestId), callback);\n        },\n        // Response Start\n        onResponseStart: (queueKey, callback)=>{\n            emitter.on(getResponseStartEventKey(queueKey), callback);\n            return ()=>emitter.removeListener(getResponseStartEventKey(queueKey), callback);\n        },\n        onResponseStartById: (requestId, callback)=>{\n            emitter.on(getResponseStartIdEventKey(requestId), callback);\n            return ()=>emitter.removeListener(getResponseStartIdEventKey(requestId), callback);\n        },\n        // Progress\n        onUploadProgress: (queueKey, callback)=>{\n            emitter.on(getUploadProgressEventKey(queueKey), callback);\n            return ()=>emitter.removeListener(getUploadProgressEventKey(queueKey), callback);\n        },\n        onUploadProgressById: (requestId, callback)=>{\n            emitter.on(getUploadProgressIdEventKey(requestId), callback);\n            return ()=>emitter.removeListener(getUploadProgressIdEventKey(requestId), callback);\n        },\n        onDownloadProgress: (queueKey, callback)=>{\n            emitter.on(getDownloadProgressEventKey(queueKey), callback);\n            return ()=>emitter.removeListener(getDownloadProgressEventKey(queueKey), callback);\n        },\n        onDownloadProgressById: (requestId, callback)=>{\n            emitter.on(getDownloadProgressIdEventKey(requestId), callback);\n            return ()=>emitter.removeListener(getDownloadProgressIdEventKey(requestId), callback);\n        },\n        // Response\n        onResponse: (cacheKey, callback)=>{\n            emitter.on(getResponseEventKey(cacheKey), callback);\n            return ()=>emitter.removeListener(getResponseEventKey(cacheKey), callback);\n        },\n        // Response by requestId\n        onResponseById: (requestId, callback)=>{\n            emitter.on(getResponseIdEventKey(requestId), callback);\n            return ()=>emitter.removeListener(getResponseIdEventKey(requestId), callback);\n        },\n        // Abort\n        onAbort: (abortKey, callback)=>{\n            emitter.on(getAbortEventKey(abortKey), callback);\n            return ()=>emitter.removeListener(getAbortEventKey(abortKey), callback);\n        },\n        onAbortById: (requestId, callback)=>{\n            emitter.on(getAbortByIdEventKey(requestId), callback);\n            return ()=>emitter.removeListener(getAbortByIdEventKey(requestId), callback);\n        },\n        // Remove\n        onRemove: (queueKey, callback)=>{\n            emitter.on(getRemoveEventKey(queueKey), callback);\n            return ()=>emitter.removeListener(getRemoveEventKey(queueKey), callback);\n        },\n        onRemoveById: (requestId, callback)=>{\n            emitter.on(getRemoveIdEventKey(requestId), callback);\n            return ()=>emitter.removeListener(getRemoveIdEventKey(requestId), callback);\n        }\n    });\n// src/managers/logger/logger.manager.ts\n\nvar LoggerManager = class {\n    constructor(client, options){\n        this.client = client;\n        this.options = options;\n        this.emitter = new (events__WEBPACK_IMPORTED_MODULE_2___default())();\n        this.setSeverity = (severity2)=>{\n            this.severity = severity2;\n        };\n        this.init = (module)=>{\n            return {\n                error: (message, ...extra)=>{\n                    this.logger({\n                        level: \"error\",\n                        module,\n                        message,\n                        extra,\n                        severity: this.severity,\n                        enabled: this.client.debug\n                    });\n                },\n                warning: (message, ...extra)=>{\n                    this.logger({\n                        level: \"warning\",\n                        module,\n                        message,\n                        extra,\n                        severity: this.severity,\n                        enabled: this.client.debug\n                    });\n                },\n                info: (message, ...extra)=>{\n                    this.logger({\n                        level: \"info\",\n                        module,\n                        message,\n                        extra,\n                        severity: this.severity,\n                        enabled: this.client.debug\n                    });\n                },\n                debug: (message, ...extra)=>{\n                    this.logger({\n                        level: \"debug\",\n                        module,\n                        message,\n                        extra,\n                        severity: this.severity,\n                        enabled: this.client.debug\n                    });\n                }\n            };\n        };\n        var _a, _b, _c;\n        (_a = this.emitter) == null ? void 0 : _a.setMaxListeners(Infinity);\n        this.logger = ((_b = this.options) == null ? void 0 : _b.logger) || logger;\n        this.severity = ((_c = this.options) == null ? void 0 : _c.severity) || 2;\n    }\n};\n// src/managers/logger/logger.manager.utils.ts\nvar getTime = ()=>{\n    const d = /* @__PURE__ */ new Date();\n    return `${d.toLocaleTimeString()}(:${d.getMilliseconds()})`;\n};\nvar logger = (log)=>{\n    var _a;\n    if (log.enabled && log.severity >= severity[log.level]) {\n        const styles = loggerStyles[log.level];\n        const emoji = loggerIconLevels[log.level];\n        const module = `%c[${log.module}]:[${getTime()}]:`;\n        const message = `${emoji}${module} ${log.message}`;\n        if ((_a = log.extra) == null ? void 0 : _a.length) {\n            console.groupCollapsed(message, styles);\n            log.extra.forEach((data)=>{\n                console.log(data);\n            });\n            console.groupEnd();\n        } else {\n            console.log(message, styles);\n        }\n    }\n};\n// src/managers/logger/logger.manager.constants.ts\nvar defaultStyles = \"background:rgba(0,0,0,0.2);padding:2px 5px;border-radius:5px;font-weight:bold;\";\nvar loggerStyles = {\n    error: `${defaultStyles}color:#db2525`,\n    warning: `${defaultStyles}color:#e1941e`,\n    info: `${defaultStyles}color:#1e74e1`,\n    debug: `${defaultStyles}color:#adadad`\n};\nvar loggerIconLevels = {\n    error: `\\u{1F6A8}`,\n    warning: `\\u{1F6A7}`,\n    info: `\\u2139\\uFE0F`,\n    debug: `\\u{1F6E9}\\uFE0F`\n};\nvar severity = {\n    error: 0,\n    warning: 1,\n    info: 2,\n    debug: 3\n};\n// src/client/client.utils.ts\nvar stringifyValue = (response)=>{\n    try {\n        return JSON.stringify(response);\n    } catch (err) {\n        return \"\";\n    }\n};\nvar interceptRequest = (interceptors, request)=>__async(void 0, null, function*() {\n        let newRequest = request;\n        if (!request.requestOptions.disableRequestInterceptors) {\n            for (const interceptor of interceptors){\n                newRequest = yield interceptor(request);\n                if (!newRequest) throw new Error(\"Request modifier must return request\");\n            }\n        }\n        return newRequest;\n    });\nvar interceptResponse = (interceptors, response, request)=>__async(void 0, null, function*() {\n        let newResponse = response;\n        if (!request.requestOptions.disableResponseInterceptors) {\n            for (const interceptor of interceptors){\n                newResponse = yield interceptor(response, request);\n                if (!newResponse) throw new Error(\"Response modifier must return data\");\n            }\n        }\n        return newResponse;\n    });\nvar getAdapterHeaders = (request)=>{\n    const isFormData = hasWindow() && request.data instanceof FormData;\n    const headers = {};\n    if (!isFormData) headers[\"Content-Type\"] = \"application/json\";\n    Object.assign(headers, request.headers);\n    return headers;\n};\nvar getAdapterPayload = (data)=>{\n    const isFormData = hasWindow() && data instanceof FormData;\n    if (isFormData) return data;\n    return stringifyValue(data);\n};\nvar isValidValue = (options)=>{\n    return (value)=>{\n        const { skipNull, skipEmptyString } = options;\n        if (skipEmptyString && value === void 0) {\n            return false;\n        }\n        if (skipEmptyString && value === \"\") {\n            return false;\n        }\n        if (skipNull && value === null) {\n            return false;\n        }\n        return true;\n    };\n};\nvar encodeValue = (value, { encode, strict })=>{\n    if (encode && strict) {\n        return encodeURIComponent(value).replace(/[!'()*]/g, (s)=>`%${s.charCodeAt(0).toString(16).toUpperCase()}`);\n    }\n    if (encode) {\n        return encodeURIComponent(value);\n    }\n    return value;\n};\nvar encodeParams = (key, value, options)=>{\n    const shouldSkip = !isValidValue(options)(value);\n    if (!key || shouldSkip) {\n        return \"\";\n    }\n    const parsedValue = ()=>{\n        var _a, _b;\n        if (value instanceof Date) {\n            return ((_a = options.dateParser) == null ? void 0 : _a.call(options, value)) || value.toISOString();\n        }\n        if (typeof value === \"object\" && !Array.isArray(value)) {\n            return ((_b = options.objectParser) == null ? void 0 : _b.call(options, value)) || JSON.stringify(value);\n        }\n        return String(value);\n    };\n    return `${encodeValue(key, options)}=${encodeValue(parsedValue(), options)}`;\n};\nvar encodeArray = (key, array, options)=>{\n    const { arrayFormat, arraySeparator } = options;\n    return array.filter(isValidValue(options)).reduce((acc, value, index)=>{\n        switch(arrayFormat){\n            case \"index\":\n                {\n                    const keyValue = `${encodeValue(key, options)}[${encodeValue(String(index), options)}]=`;\n                    acc.push(`${keyValue}${encodeValue(String(value), options)}`);\n                    break;\n                }\n            case \"bracket\":\n                {\n                    const keyValue = `${encodeValue(key, options)}[]=`;\n                    acc.push(`${keyValue}${encodeValue(String(value), options)}`);\n                    break;\n                }\n            case \"comma\":\n                {\n                    const keyValue = !acc.length && `${encodeValue(key, options)}=` || \"\";\n                    return [\n                        [\n                            ...acc,\n                            `${keyValue}${encodeValue(String(value), options)}`\n                        ].join(\",\")\n                    ];\n                }\n            case \"separator\":\n                {\n                    const keyValue = !acc.length && `${encodeValue(key, options)}=` || \"\";\n                    return [\n                        [\n                            ...acc,\n                            `${keyValue}${encodeValue(String(value), options)}`\n                        ].join(arraySeparator || \"|\")\n                    ];\n                }\n            case \"bracket-separator\":\n                {\n                    const keyValue = !acc.length && `${encodeValue(key, options)}[]=` || \"\";\n                    return [\n                        [\n                            ...acc,\n                            `${keyValue}${encodeValue(String(value), options)}`\n                        ].join(arraySeparator || \"|\")\n                    ];\n                }\n            default:\n                {\n                    const keyValue = `${encodeValue(key, options)}=`;\n                    acc.push(`${keyValue}${encodeValue(String(value), options)}`);\n                }\n        }\n        return acc;\n    }, []).join(\"&\");\n};\nvar stringifyQueryParams = (queryParams, options = stringifyDefaultOptions)=>{\n    if (!queryParams || !Object.keys(queryParams).length) {\n        return \"\";\n    }\n    if (typeof queryParams === \"string\") {\n        const hasQuestionMark = queryParams[0] === \"?\";\n        return hasQuestionMark ? queryParams : `?${queryParams}`;\n    }\n    const stringified = Object.entries(queryParams).map(([key, value])=>{\n        if (Array.isArray(value)) {\n            return encodeArray(key, value, options);\n        }\n        return encodeParams(key, value, options);\n    }).filter(Boolean).join(\"&\");\n    if (stringified) {\n        return `?${stringified}`;\n    }\n    return \"\";\n};\n// src/client/client.ts\nvar Client = class _Client {\n    constructor(options){\n        this.options = options;\n        // Private\n        this.__onErrorCallbacks = [];\n        this.__onSuccessCallbacks = [];\n        this.__onResponseCallbacks = [];\n        this.__onAuthCallbacks = [];\n        this.__onRequestCallbacks = [];\n        // Managers\n        this.requestManager = new RequestManager();\n        this.loggerManager = new LoggerManager(this);\n        this.defaultMethod = \"GET\" /* get */ ;\n        this.defaultExtra = xhrExtra;\n        this.isMockEnabled = true;\n        // Registered requests effect\n        this.effects = [];\n        this.abortKeyMapper = getSimpleKey;\n        this.cacheKeyMapper = getRequestKey;\n        this.queueKeyMapper = getRequestKey;\n        this.effectKeyMapper = getSimpleKey;\n        // Utils\n        /**\n     * Method to stringify query params from objects.\n     */ this.stringifyQueryParams = (queryParams)=>stringifyQueryParams(queryParams, this.queryParamsConfig);\n        /**\n     * Method to get default headers and to map them based on the data format exchange, by default it handles FormData / JSON formats.\n     */ this.headerMapper = getAdapterHeaders;\n        /**\n     * Method to get request data and transform them to the required format. It handles FormData and JSON by default.\n     */ this.payloadMapper = getAdapterPayload;\n        /**\n     * Method to get request data and transform them to the required format. It handles FormData and JSON by default.\n     */ // eslint-disable-next-line class-methods-use-this\n        this.endpointMapper = (endpoint)=>endpoint;\n        // Logger\n        this.logger = this.loggerManager.init(\"Client\");\n        /**\n     * This method allows to configure global defaults for the request configuration like method, auth, deduplication etc.\n     */ this.setRequestDefaultOptions = (callback)=>{\n            this.requestDefaultOptions = callback;\n            return this;\n        };\n        this.setAdapterDefaultOptions = (callback)=>{\n            this.adapterDefaultOptions = callback;\n            return this;\n        };\n        /**\n     * This method enables the logger usage and display the logs in console\n     */ this.setDebug = (debug)=>{\n            this.debug = debug;\n            return this;\n        };\n        /**\n     * Set the logger severity of the messages displayed to the console\n     */ this.setLoggerSeverity = (severity2)=>{\n            this.loggerManager.setSeverity(severity2);\n            return this;\n        };\n        /**\n     * Set the new logger instance to the Client\n     */ this.setLogger = (callback)=>{\n            this.loggerManager = callback(this);\n            return this;\n        };\n        /**\n     * Set config for the query params stringify method, we can set here, among others, arrayFormat, skipNull, encode, skipEmptyString and more\n     */ this.setQueryParamsConfig = (queryParamsConfig)=>{\n            this.queryParamsConfig = queryParamsConfig;\n            return this;\n        };\n        /**\n     * Set the custom query params stringify method to the Client\n     * @param stringifyFn Custom callback handling query params stringify\n     */ this.setStringifyQueryParams = (stringifyFn)=>{\n            this.stringifyQueryParams = stringifyFn;\n            return this;\n        };\n        /**\n     * Set the custom header mapping function\n     */ this.setHeaderMapper = (headerMapper)=>{\n            this.headerMapper = headerMapper;\n            return this;\n        };\n        /**\n     * Set the request payload mapping function which get triggered before request get send\n     */ this.setPayloadMapper = (payloadMapper)=>{\n            this.payloadMapper = payloadMapper;\n            return this;\n        };\n        /**\n     * Set globally if mocking should be enabled or disabled for all client requests.\n     * @param isMockEnabled\n     */ this.setEnableGlobalMocking = (isMockEnabled)=>{\n            this.isMockEnabled = isMockEnabled;\n            return this;\n        };\n        /**\n     * Set the request payload mapping function which get triggered before request get send\n     */ this.setEndpointMapper = (endpointMapper)=>{\n            this.endpointMapper = endpointMapper;\n            return this;\n        };\n        /**\n     * Set custom http adapter to handle graphql, rest, firebase or others\n     */ this.setAdapter = (callback)=>{\n            const value = callback(this);\n            if (value instanceof _Client) {\n                return value;\n            }\n            this.adapter = value;\n            return this;\n        };\n        /**\n     * Set default method for requests.\n     */ this.setDefaultMethod = (defaultMethod)=>{\n            this.defaultMethod = defaultMethod;\n            return this;\n        };\n        /**\n     * Set default additional data for initial state.\n     */ this.setDefaultExtra = (defaultExtra)=>{\n            this.defaultExtra = defaultExtra;\n            return this;\n        };\n        /**\n     * Method of manipulating requests before sending the request. We can for example add custom header with token to the request which request had the auth set to true.\n     */ this.onAuth = (callback)=>{\n            this.__onAuthCallbacks.push(callback);\n            return this;\n        };\n        /**\n     * Method for removing listeners on auth.\n     * */ this.removeOnAuthInterceptors = (callbacks)=>{\n            this.__onAuthCallbacks = this.__onAuthCallbacks.filter((callback)=>!callbacks.includes(callback));\n            return this;\n        };\n        /**\n     * Method for intercepting error responses. It can be used for example to refresh tokens.\n     */ this.onError = (callback)=>{\n            this.__onErrorCallbacks.push(callback);\n            return this;\n        };\n        /**\n     * Method for removing listeners on error.\n     * */ this.removeOnErrorInterceptors = (callbacks)=>{\n            this.__onErrorCallbacks = this.__onErrorCallbacks.filter((callback)=>!callbacks.includes(callback));\n            return this;\n        };\n        /**\n     * Method for intercepting success responses.\n     */ this.onSuccess = (callback)=>{\n            this.__onSuccessCallbacks.push(callback);\n            return this;\n        };\n        /**\n     * Method for removing listeners on success.\n     * */ this.removeOnSuccessInterceptors = (callbacks)=>{\n            this.__onSuccessCallbacks = this.__onSuccessCallbacks.filter((callback)=>!callbacks.includes(callback));\n            return this;\n        };\n        /**\n     * Method of manipulating requests before sending the request.\n     */ this.onRequest = (callback)=>{\n            this.__onRequestCallbacks.push(callback);\n            return this;\n        };\n        /**\n     * Method for removing listeners on request.\n     * */ this.removeOnRequestInterceptors = (callbacks)=>{\n            this.__onRequestCallbacks = this.__onRequestCallbacks.filter((callback)=>!callbacks.includes(callback));\n            return this;\n        };\n        /**\n     * Method for intercepting any responses.\n     */ this.onResponse = (callback)=>{\n            this.__onResponseCallbacks.push(callback);\n            return this;\n        };\n        /**\n     * Method for removing listeners on request.\n     * */ this.removeOnResponseInterceptors = (callbacks)=>{\n            this.__onResponseCallbacks = this.__onResponseCallbacks.filter((callback)=>!callbacks.includes(callback));\n            return this;\n        };\n        /**\n     * Add persistent effects which trigger on the request lifecycle\n     */ this.addEffect = (effect)=>{\n            this.effects = this.effects.concat(effect);\n            return this;\n        };\n        /**\n     * Remove effects from Client\n     */ this.removeEffect = (effect)=>{\n            const name = typeof effect === \"string\" ? effect : effect.getEffectKey();\n            this.effects = this.effects.filter((currentEffect)=>currentEffect.getEffectKey() !== name);\n            return this;\n        };\n        /**\n     * Key setters\n     */ this.setAbortKeyMapper = (callback)=>{\n            this.abortKeyMapper = callback;\n        };\n        this.setCacheKeyMapper = (callback)=>{\n            this.cacheKeyMapper = callback;\n        };\n        this.setQueueKeyMapper = (callback)=>{\n            this.queueKeyMapper = callback;\n        };\n        this.setEffectKeyMapper = (callback)=>{\n            this.effectKeyMapper = callback;\n        };\n        /**\n     * Helper used by http adapter to apply the modifications on response error\n     */ this.__modifyAuth = (request)=>__async(this, null, function*() {\n                return interceptRequest(this.__onAuthCallbacks, request);\n            });\n        /**\n     * Private helper to run async pre-request processing\n     */ this.__modifyRequest = (request)=>__async(this, null, function*() {\n                return interceptRequest(this.__onRequestCallbacks, request);\n            });\n        /**\n     * Private helper to run async on-error response processing\n     */ this.__modifyErrorResponse = (response, request)=>__async(this, null, function*() {\n                return interceptResponse(this.__onErrorCallbacks, response, request);\n            });\n        /**\n     * Private helper to run async on-success response processing\n     */ this.__modifySuccessResponse = (response, request)=>__async(this, null, function*() {\n                return interceptResponse(this.__onSuccessCallbacks, response, request);\n            });\n        /**\n     * Private helper to run async response processing\n     */ this.__modifyResponse = (response, request)=>__async(this, null, function*() {\n                return interceptResponse(this.__onResponseCallbacks, response, request);\n            });\n        /**\n     * Clears the Client instance and remove all listeners on it's dependencies\n     */ this.clear = ()=>{\n            const { appManager, cache, fetchDispatcher, submitDispatcher } = this.options;\n            this.requestManager.abortControllers.clear();\n            this.fetchDispatcher.clear();\n            this.submitDispatcher.clear();\n            this.cache.clear();\n            this.requestManager.emitter.removeAllListeners();\n            this.fetchDispatcher.emitter.removeAllListeners();\n            this.submitDispatcher.emitter.removeAllListeners();\n            this.cache.emitter.removeAllListeners();\n            this.appManager = (appManager == null ? void 0 : appManager(this)) || new AppManager();\n            this.cache = (cache == null ? void 0 : cache(this)) || new Cache(this);\n            this.fetchDispatcher = (fetchDispatcher == null ? void 0 : fetchDispatcher(this)) || new Dispatcher(this);\n            this.submitDispatcher = (submitDispatcher == null ? void 0 : submitDispatcher(this)) || new Dispatcher(this);\n        };\n        /**\n     * Create requests based on the Client setup\n     *\n     * @template {response: any, payload:any} Properties\n     */ this.createRequest = ()=>{\n            return (params)=>{\n                const endpoint = this.endpointMapper(params.endpoint);\n                const mappedParams = __spreadProps(__spreadValues({}, params), {\n                    endpoint\n                });\n                return new Request(this, mappedParams);\n            };\n        };\n        const { url, adapter: adapter4, appManager, cache, fetchDispatcher, submitDispatcher } = this.options;\n        this.url = url;\n        this.adapter = adapter4 || adapter3;\n        this.appManager = (appManager == null ? void 0 : appManager(this)) || new AppManager();\n        this.cache = (cache == null ? void 0 : cache(this)) || new Cache(this);\n        this.fetchDispatcher = (fetchDispatcher == null ? void 0 : fetchDispatcher(this)) || new Dispatcher(this);\n        this.submitDispatcher = (submitDispatcher == null ? void 0 : submitDispatcher(this)) || new Dispatcher(this);\n    }\n};\n// src/client/client.constants.ts\nvar stringifyDefaultOptions = {\n    strict: true,\n    encode: true,\n    arrayFormat: \"bracket\",\n    arraySeparator: \"bracket\",\n    sort: false,\n    skipNull: true,\n    skipEmptyString: true\n};\n //# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../packages/core/dist/index.esm.js\n");

/***/ }),

/***/ "(ssr)/../../packages/react/dist/index.esm.js":
/*!**********************************************!*\
  !*** ../../packages/react/dist/index.esm.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ConfigProvider: () => (/* binding */ ConfigProvider),\n/* harmony export */   getBounceData: () => (/* binding */ getBounceData),\n/* harmony export */   getDetailsState: () => (/* binding */ getDetailsState),\n/* harmony export */   getInitialState: () => (/* binding */ getInitialState),\n/* harmony export */   getRefreshTime: () => (/* binding */ getRefreshTime),\n/* harmony export */   getTimestamp: () => (/* binding */ getTimestamp),\n/* harmony export */   getValidCacheData: () => (/* binding */ getValidCacheData),\n/* harmony export */   initialSocketState: () => (/* binding */ initialSocketState),\n/* harmony export */   initialState: () => (/* binding */ initialState),\n/* harmony export */   isEmpty: () => (/* binding */ isEmpty),\n/* harmony export */   isEqual: () => (/* binding */ isEqual),\n/* harmony export */   isStaleCacheData: () => (/* binding */ isStaleCacheData),\n/* harmony export */   useAppManager: () => (/* binding */ useAppManager),\n/* harmony export */   useCache: () => (/* binding */ useCache),\n/* harmony export */   useCacheDefaultOptions: () => (/* binding */ useCacheDefaultOptions),\n/* harmony export */   useConfigProvider: () => (/* binding */ useConfigProvider),\n/* harmony export */   useEmitter: () => (/* binding */ useEmitter),\n/* harmony export */   useEventMessages: () => (/* binding */ useEventMessages),\n/* harmony export */   useFetch: () => (/* binding */ useFetch),\n/* harmony export */   useFetchDefaultOptions: () => (/* binding */ useFetchDefaultOptions),\n/* harmony export */   useListener: () => (/* binding */ useListener),\n/* harmony export */   useQueue: () => (/* binding */ useQueue),\n/* harmony export */   useQueueDefaultOptions: () => (/* binding */ useQueueDefaultOptions),\n/* harmony export */   useRequestEvents: () => (/* binding */ useRequestEvents),\n/* harmony export */   useSocketState: () => (/* binding */ useSocketState),\n/* harmony export */   useSubmit: () => (/* binding */ useSubmit),\n/* harmony export */   useSubmitDefaultOptions: () => (/* binding */ useSubmitDefaultOptions),\n/* harmony export */   useTrackedState: () => (/* binding */ useTrackedState)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @better-hooks/lifecycle */ \"(ssr)/../../node_modules/@better-hooks/lifecycle/dist/index.esm.js\");\n/* harmony import */ var _better_hooks_performance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @better-hooks/performance */ \"(ssr)/../../node_modules/@better-hooks/performance/dist/index.esm.js\");\n/* harmony import */ var _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @hyper-fetch/core */ \"(ssr)/../../packages/core/dist/index.esm.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__);\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value)=>key in obj ? __defProp(obj, key, {\n        enumerable: true,\n        configurable: true,\n        writable: true,\n        value\n    }) : obj[key] = value;\nvar __spreadValues = (a, b)=>{\n    for(var prop in b || (b = {}))if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)){\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n    }\n    return a;\n};\nvar __spreadProps = (a, b)=>__defProps(a, __getOwnPropDescs(b));\nvar __async = (__this, __arguments, generator)=>{\n    return new Promise((resolve, reject)=>{\n        var fulfilled = (value)=>{\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var rejected = (value)=>{\n            try {\n                step(generator.throw(value));\n            } catch (e) {\n                reject(e);\n            }\n        };\n        var step = (x)=>x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\n        step((generator = generator.apply(__this, __arguments)).next());\n    });\n};\n// src/hooks/use-fetch/use-fetch.hooks.ts\n\n\n\n\n// src/helpers/use-request-events/use-request-events.hooks.ts\n\n\nvar useRequestEvents = ({ request, dispatcher, logger, actions, setCacheData })=>{\n    const { responseMapper } = request;\n    const { cache, requestManager } = request.client;\n    const onSuccessCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onErrorCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onAbortCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onOfflineErrorCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onFinishedCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onRequestStartCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onResponseStartCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onDownloadProgressCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onUploadProgressCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const lifecycleEvents = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(/* @__PURE__ */ new Map());\n    const dataEvents = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const removeLifecycleListener = (requestId)=>{\n        const event = lifecycleEvents.current.get(requestId);\n        event == null ? void 0 : event.unmount();\n        lifecycleEvents.current.delete(requestId);\n    };\n    const clearLifecycleListeners = ()=>{\n        const events = lifecycleEvents.current;\n        const listeners = Array.from(events.values());\n        listeners.forEach((value)=>{\n            value.unmount();\n        });\n        events.clear();\n    };\n    const handleResponseCallbacks = (cmd, response, details)=>{\n        var _a, _b, _c, _d, _e;\n        const { data, error, success } = response;\n        const { isOffline, isCanceled } = details;\n        if (request.offline && isOffline && !success) {\n            logger.debug(\"Performing offline error callback\", {\n                data,\n                details\n            });\n            (_a = onOfflineErrorCallback.current) == null ? void 0 : _a.call(onOfflineErrorCallback, {\n                response: error,\n                request: cmd,\n                details\n            });\n        } else if (isCanceled) {\n            logger.debug(\"Performing abort callback\", {\n                data,\n                details\n            });\n            (_b = onAbortCallback.current) == null ? void 0 : _b.call(onAbortCallback, {\n                response: error,\n                request: cmd,\n                details\n            });\n        } else if (success) {\n            logger.debug(\"Performing success callback\", {\n                data,\n                details\n            });\n            (_c = onSuccessCallback.current) == null ? void 0 : _c.call(onSuccessCallback, {\n                response: data,\n                request: cmd,\n                details\n            });\n        } else {\n            logger.debug(\"Performing error callback\", {\n                data,\n                details\n            });\n            (_d = onErrorCallback.current) == null ? void 0 : _d.call(onErrorCallback, {\n                response: error,\n                request: cmd,\n                details\n            });\n        }\n        (_e = onFinishedCallback.current) == null ? void 0 : _e.call(onFinishedCallback, {\n            response,\n            request: cmd,\n            details\n        });\n    };\n    const handleGetLoadingEvent = (queueKey)=>{\n        return ({ loading })=>{\n            const canDisableLoading = !loading && !dispatcher.hasRunningRequests(queueKey);\n            if (loading || canDisableLoading) {\n                actions.setLoading(loading, false);\n            }\n        };\n    };\n    const handleDownloadProgress = (progress, details)=>{\n        var _a;\n        (_a = onDownloadProgressCallback.current) == null ? void 0 : _a.call(onDownloadProgressCallback, progress, details);\n    };\n    const handleUploadProgress = (progress, details)=>{\n        var _a;\n        (_a = onUploadProgressCallback.current) == null ? void 0 : _a.call(onUploadProgressCallback, progress, details);\n    };\n    const handleRequestStart = (cmd)=>{\n        return (details)=>{\n            var _a;\n            (_a = onRequestStartCallback.current) == null ? void 0 : _a.call(onRequestStartCallback, {\n                request: cmd,\n                details\n            });\n        };\n    };\n    const handleResponseStart = (cmd)=>{\n        return (details)=>{\n            var _a;\n            (_a = onResponseStartCallback.current) == null ? void 0 : _a.call(onResponseStartCallback, {\n                request: cmd,\n                details\n            });\n        };\n    };\n    const handleResponse = (req)=>{\n        return (response, details)=>{\n            const data = responseMapper ? responseMapper(response) : response;\n            if (data instanceof Promise) {\n                return (()=>__async(void 0, null, function*() {\n                        const promiseData = yield data;\n                        handleResponseCallbacks(req, promiseData, details);\n                    }))();\n            }\n            return handleResponseCallbacks(req, data, details);\n        };\n    };\n    const handleRemove = ({ requestId })=>{\n        removeLifecycleListener(requestId);\n    };\n    const clearDataListener = ()=>{\n        var _a;\n        (_a = dataEvents.current) == null ? void 0 : _a.unmount();\n        dataEvents.current = null;\n    };\n    const addDataListener = (req)=>{\n        const loadingUnmount = requestManager.events.onLoading(req.queueKey, handleGetLoadingEvent(req.queueKey));\n        const getResponseUnmount = cache.events.onData(req.cacheKey, setCacheData);\n        const unmount = ()=>{\n            loadingUnmount();\n            getResponseUnmount();\n        };\n        clearDataListener();\n        dataEvents.current = {\n            unmount\n        };\n        return unmount;\n    };\n    const addLifecycleListeners = (req, requestId)=>{\n        if (!requestId) {\n            clearLifecycleListeners();\n            const { queueKey, cacheKey } = req;\n            const requestStartUnmount2 = requestManager.events.onRequestStart(queueKey, handleRequestStart(req));\n            const responseStartUnmount2 = requestManager.events.onResponseStart(queueKey, handleResponseStart(req));\n            const uploadUnmount2 = requestManager.events.onUploadProgress(queueKey, handleUploadProgress);\n            const downloadUnmount2 = requestManager.events.onDownloadProgress(queueKey, handleDownloadProgress);\n            const responseUnmount2 = requestManager.events.onResponse(cacheKey, handleResponse(req));\n            const unmount2 = ()=>{\n                downloadUnmount2();\n                uploadUnmount2();\n                requestStartUnmount2();\n                responseStartUnmount2();\n                responseUnmount2();\n            };\n            lifecycleEvents.current.set(queueKey, {\n                unmount: unmount2\n            });\n            return unmount2;\n        }\n        const requestRemove = requestManager.events.onRemoveById(requestId, handleRemove);\n        const requestStartUnmount = requestManager.events.onRequestStartById(requestId, handleRequestStart(req));\n        const responseStartUnmount = requestManager.events.onResponseStartById(requestId, handleResponseStart(req));\n        const responseUnmount = requestManager.events.onResponseById(requestId, handleResponse(req));\n        const uploadUnmount = requestManager.events.onUploadProgressById(requestId, handleUploadProgress);\n        const downloadUnmount = requestManager.events.onDownloadProgressById(requestId, handleDownloadProgress);\n        const unmount = ()=>{\n            requestRemove();\n            downloadUnmount();\n            uploadUnmount();\n            requestStartUnmount();\n            responseStartUnmount();\n            responseUnmount();\n        };\n        lifecycleEvents.current.set(requestId, {\n            unmount\n        });\n        return unmount;\n    };\n    const abort = ()=>{\n        const { abortKey } = request;\n        const requests = dispatcher.getAllRunningRequest();\n        requests.forEach((requestData)=>{\n            if (requestData.request.abortKey === abortKey) {\n                dispatcher.delete(requestData.request.queueKey, requestData.requestId, abortKey);\n            }\n        });\n    };\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useWillUnmount)(()=>{\n        clearLifecycleListeners();\n        clearDataListener();\n    });\n    return [\n        {\n            abort,\n            onSuccess: (callback)=>{\n                onSuccessCallback.current = callback;\n            },\n            onError: (callback)=>{\n                onErrorCallback.current = callback;\n            },\n            onAbort: (callback)=>{\n                onAbortCallback.current = callback;\n            },\n            onOfflineError: (callback)=>{\n                onOfflineErrorCallback.current = callback;\n            },\n            onFinished: (callback)=>{\n                onFinishedCallback.current = callback;\n            },\n            onRequestStart: (callback)=>{\n                onRequestStartCallback.current = callback;\n            },\n            onResponseStart: (callback)=>{\n                onResponseStartCallback.current = callback;\n            },\n            onDownloadProgress: (callback)=>{\n                onDownloadProgressCallback.current = callback;\n            },\n            onUploadProgress: (callback)=>{\n                onUploadProgressCallback.current = callback;\n            }\n        },\n        {\n            addDataListener,\n            clearDataListener,\n            addLifecycleListeners,\n            removeLifecycleListener,\n            clearLifecycleListeners\n        }\n    ];\n};\n// src/helpers/use-tracked-state/use-tracked-state.constants.ts\nvar initialState = {\n    data: null,\n    error: null,\n    status: null,\n    extra: null,\n    success: null,\n    loading: false,\n    retries: 0,\n    timestamp: null\n};\n// src/helpers/use-tracked-state/use-tracked-state.hooks.ts\n\n\n\n// src/utils/deep-equal.utils.ts\nvar isEmpty = (value)=>{\n    const valueType = Object.prototype.toString.call(value);\n    if (Array.isArray(value)) return !value.length;\n    if (typeof value === \"object\" && value !== null && valueType === \"[object Object]\") return !Object.keys(value).length;\n    return false;\n};\nvar isEqual = (firstValue, secondValue)=>{\n    if (firstValue === secondValue) return true;\n    try {\n        const firstValueType = Object.prototype.toString.call(firstValue);\n        const secondValueType = Object.prototype.toString.call(secondValue);\n        const firstType = typeof firstValue;\n        const secondType = typeof secondValue;\n        const isType = (type)=>firstType === type && secondType === type;\n        const isTypeValue = (type)=>firstValueType === type && secondValueType === type;\n        if (firstValueType !== secondValueType) return false;\n        if (firstValue === null && secondValue === null) return true;\n        if (isType(\"number\") && Number.isNaN(firstValue) && Number.isNaN(secondValue)) return true;\n        if (isEmpty(firstValue) && isEmpty(secondValue)) return true;\n        if (Array.isArray(firstValue) && Array.isArray(secondValue)) {\n            if (firstValue.length !== secondValue.length) return false;\n            return !firstValue.some((element, i)=>!isEqual(element, secondValue[i]));\n        }\n        if (isType(\"object\") && isTypeValue(\"[object Object]\")) {\n            if (Object.keys(firstValue).length !== Object.keys(secondValue).length) return false;\n            return !Object.entries(firstValue).some(([key, value])=>!isEqual(value, secondValue[key]));\n        }\n        if (firstValue instanceof Date && secondValue instanceof Date) {\n            return +firstValue === +secondValue;\n        }\n        return firstValue === secondValue;\n    } catch (err) {\n        console.error(err);\n        return false;\n    }\n};\n// src/utils/bounce.utils.ts\nvar getBounceData = (bounceData)=>{\n    return __spreadValues(__spreadValues({}, bounceData), {\n        throttle: void 0,\n        debounce: void 0\n    });\n};\n// src/helpers/use-tracked-state/use-tracked-state.utils.ts\nvar getDetailsState = (state, details)=>{\n    return __spreadValues({\n        retries: (state == null ? void 0 : state.retries) || 0,\n        timestamp: +/* @__PURE__ */ new Date(),\n        isCanceled: false,\n        isOffline: false\n    }, details);\n};\nvar isStaleCacheData = (cacheTime, cacheTimestamp)=>{\n    if (!cacheTimestamp) return true;\n    return +/* @__PURE__ */ new Date() > +cacheTimestamp + cacheTime;\n};\nvar getValidCacheData = (request, initialData, cacheData)=>{\n    const isStale = isStaleCacheData(request.cacheTime, cacheData == null ? void 0 : cacheData.timestamp);\n    if (!isStale && cacheData) {\n        return cacheData;\n    }\n    if (initialData) {\n        return __spreadProps(__spreadValues(__spreadValues({\n            data: null,\n            error: null,\n            status: null,\n            success: null,\n            extra: null\n        }, initialData || {}), getDetailsState()), {\n            cacheTime: 1e3,\n            clearKey: request.client.cache.clearKey,\n            garbageCollection: request.garbageCollection\n        });\n    }\n    return null;\n};\nvar getTimestamp = (timestamp)=>{\n    return timestamp ? new Date(timestamp) : null;\n};\nvar getInitialState = (initialData, dispatcher, request)=>{\n    const { client, cacheKey, responseMapper } = request;\n    const { cache } = client;\n    const cacheData = cache.get(cacheKey);\n    const cacheState = getValidCacheData(request, initialData, cacheData);\n    const initialLoading = dispatcher.hasRunningRequests(request.queueKey);\n    if (cacheState) {\n        const mappedData = responseMapper ? responseMapper(cacheState) : cacheState;\n        if (mappedData instanceof Promise) {\n            return initialState;\n        }\n        return {\n            data: mappedData.data,\n            error: mappedData.error,\n            status: mappedData.status,\n            success: mappedData.success,\n            extra: mappedData.extra,\n            retries: cacheState.retries,\n            timestamp: getTimestamp(cacheState.timestamp),\n            loading: initialLoading\n        };\n    }\n    return {\n        data: initialState.data,\n        error: initialState.error,\n        status: initialState.status,\n        success: initialState.success,\n        extra: request.client.defaultExtra,\n        retries: initialState.retries,\n        timestamp: getTimestamp(initialState.timestamp),\n        loading: initialLoading\n    };\n};\n// src/config-provider/config-provider.tsx\n\n\n\nvar ConfigContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createContext({\n    config: {},\n    setConfig: ()=>null\n});\nvar ConfigProvider = ({ children, client, config, fallbacks, fallbacksConfig })=>{\n    const [currentConfig, setConfig] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(config || {});\n    const value = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        const contextValue = {\n            config: currentConfig,\n            setConfig,\n            fallbacks\n        };\n        return contextValue;\n    }, [\n        currentConfig,\n        fallbacks\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect)(()=>{\n        (0,_hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.hydrate)(client, fallbacks, fallbacksConfig);\n    }, [\n        client,\n        fallbacks,\n        fallbacksConfig\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(ConfigContext.Provider, {\n        value,\n        children\n    });\n};\nvar useConfigProvider = ()=>{\n    const config = (0,react__WEBPACK_IMPORTED_MODULE_0__.useContext)(ConfigContext);\n    return config;\n};\n// src/helpers/use-tracked-state/use-tracked-state.hooks.ts\nvar useTrackedState = ({ request, dispatcher, initialData, deepCompare, dependencyTracking, defaultCacheEmitting = true })=>{\n    const { client, cacheKey, queueKey, cacheTime, responseMapper } = request;\n    const { cache, requestManager } = client;\n    const forceUpdate = (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useForceUpdate)();\n    const { fallbacks } = useConfigProvider();\n    const { fallbackData } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>{\n        var _a;\n        const fallbackRawData = (_a = fallbacks == null ? void 0 : fallbacks.find((item)=>item.cacheKey === cacheKey)) == null ? void 0 : _a.data;\n        const data = fallbackRawData ? (0,_hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.parseResponse)(fallbackRawData) : void 0;\n        return {\n            fallbackData: data\n        };\n    }, [\n        cacheKey,\n        fallbacks\n    ]);\n    const state = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(getInitialState(initialData || fallbackData, dispatcher, request));\n    const renderKeys = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    const getStaleStatus = ()=>{\n        const cacheData = cache.get(cacheKey);\n        return !cacheData || isStaleCacheData(cacheTime, cacheData == null ? void 0 : cacheData.timestamp);\n    };\n    const renderKeyTrigger = (keys)=>{\n        const shouldRerender = renderKeys.current.some((renderKey)=>keys.includes(renderKey));\n        if (shouldRerender) forceUpdate();\n    };\n    const setRenderKey = (renderKey)=>{\n        if (!renderKeys.current.includes(renderKey)) {\n            renderKeys.current.push(renderKey);\n        }\n    };\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidUpdate)(()=>{\n        state.current.loading = dispatcher.hasRunningRequests(queueKey);\n        const cacheData = cache.get(cacheKey);\n        const cacheState = getValidCacheData(request, initialData || fallbackData, cacheData);\n        const hasInitialState = isEqual((initialData == null ? void 0 : initialData.data) || (fallbackData == null ? void 0 : fallbackData.data), state.current.data);\n        const hasState = !!(state.current.data || state.current.error) && !hasInitialState;\n        const shouldLoadInitialCache = !hasState && !!state.current.data;\n        const shouldRemovePreviousData = hasState && !state.current.data;\n        if (cacheState || shouldLoadInitialCache || shouldRemovePreviousData) {\n            setCacheData(cacheState);\n        }\n    }, [\n        cacheKey,\n        queueKey\n    ], true);\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidUpdate)(()=>{\n        const handleDependencyTracking = ()=>{\n            if (!dependencyTracking) {\n                Object.keys(state.current).forEach((key)=>setRenderKey(key));\n            }\n        };\n        handleDependencyTracking();\n    }, [\n        dependencyTracking\n    ], true);\n    const handleCompare = (firstValue, secondValue)=>{\n        if (typeof deepCompare === \"function\") {\n            return deepCompare(firstValue, secondValue);\n        }\n        if (deepCompare) {\n            return isEqual(firstValue, secondValue);\n        }\n        return false;\n    };\n    const handleCacheData = (cacheData)=>{\n        const newStateValues = {\n            data: cacheData.data,\n            error: cacheData.error,\n            status: cacheData.status,\n            success: cacheData.success,\n            extra: cacheData.extra,\n            retries: cacheData.retries,\n            timestamp: new Date(cacheData.timestamp),\n            loading: state.current.loading\n        };\n        const changedKeys = Object.keys(newStateValues).filter((key)=>{\n            const keyValue = key;\n            const firstValue = state.current[keyValue];\n            const secondValue = newStateValues[keyValue];\n            return !handleCompare(firstValue, secondValue);\n        });\n        state.current = __spreadValues(__spreadValues({}, state.current), newStateValues);\n        renderKeyTrigger(changedKeys);\n    };\n    const setCacheData = (cacheData)=>{\n        const data = responseMapper ? responseMapper(cacheData) : cacheData;\n        if (data instanceof Promise) {\n            return (()=>__async(void 0, null, function*() {\n                    const promiseData = yield data;\n                    handleCacheData(__spreadValues(__spreadValues({}, cacheData), promiseData));\n                }))();\n        }\n        return handleCacheData(__spreadValues(__spreadValues({}, cacheData), data));\n    };\n    const actions = {\n        setData: (data, emitToCache = defaultCacheEmitting)=>{\n            if (emitToCache) {\n                const currentState = state.current;\n                cache.set(request, __spreadProps(__spreadValues(__spreadValues({}, currentState), getDetailsState(state.current)), {\n                    success: true,\n                    data\n                }));\n            } else {\n                state.current.data = data;\n                renderKeyTrigger([\n                    \"data\"\n                ]);\n            }\n        },\n        setError: (error, emitToCache = defaultCacheEmitting)=>{\n            if (emitToCache) {\n                const currentState = state.current;\n                cache.set(request, __spreadProps(__spreadValues(__spreadValues({}, currentState), getDetailsState(state.current)), {\n                    success: false,\n                    error\n                }));\n            } else {\n                state.current.error = error;\n                renderKeyTrigger([\n                    \"error\"\n                ]);\n            }\n        },\n        setLoading: (loading, emitToHooks = true)=>{\n            if (emitToHooks) {\n                requestManager.events.emitLoading(queueKey, \"\", {\n                    queueKey,\n                    requestId: \"\",\n                    loading,\n                    isRetry: false,\n                    isOffline: false\n                });\n            } else {\n                state.current.loading = loading;\n                renderKeyTrigger([\n                    \"loading\"\n                ]);\n            }\n        },\n        setStatus: (status, emitToCache = defaultCacheEmitting)=>{\n            if (emitToCache) {\n                const currentState = state.current;\n                cache.set(request, __spreadProps(__spreadValues(__spreadValues({}, currentState), getDetailsState(state.current)), {\n                    status\n                }));\n            } else {\n                state.current.status = status;\n                renderKeyTrigger([\n                    \"status\"\n                ]);\n            }\n        },\n        setSuccess: (success, emitToCache = defaultCacheEmitting)=>{\n            if (emitToCache) {\n                const currentState = state.current;\n                cache.set(request, __spreadProps(__spreadValues(__spreadValues({}, currentState), getDetailsState(state.current)), {\n                    success\n                }));\n            } else {\n                state.current.success = success;\n                renderKeyTrigger([\n                    \"success\"\n                ]);\n            }\n        },\n        setExtra: (extra, emitToCache = defaultCacheEmitting)=>{\n            if (emitToCache) {\n                const currentState = state.current;\n                cache.set(request, __spreadProps(__spreadValues(__spreadValues({}, currentState), getDetailsState(state.current)), {\n                    extra\n                }));\n            } else {\n                state.current.extra = extra;\n                renderKeyTrigger([\n                    \"extra\"\n                ]);\n            }\n        },\n        setRetries: (retries, emitToCache = defaultCacheEmitting)=>{\n            if (emitToCache) {\n                const currentState = state.current;\n                cache.set(request, __spreadValues(__spreadValues({}, currentState), getDetailsState(state.current, {\n                    retries\n                })));\n            } else {\n                state.current.retries = retries;\n                renderKeyTrigger([\n                    \"retries\"\n                ]);\n            }\n        },\n        setTimestamp: (timestamp, emitToCache = defaultCacheEmitting)=>{\n            if (emitToCache) {\n                const currentState = state.current;\n                cache.set(request, __spreadValues(__spreadValues({}, currentState), getDetailsState(state.current, {\n                    timestamp: +timestamp\n                })));\n            } else {\n                state.current.timestamp = timestamp;\n                renderKeyTrigger([\n                    \"timestamp\"\n                ]);\n            }\n        }\n    };\n    return [\n        state.current,\n        actions,\n        {\n            setRenderKey,\n            setCacheData,\n            getStaleStatus\n        }\n    ];\n};\n// src/helpers/use-socket-state/use-socket-state.hooks.ts\n\n\nvar useSocketState = (socket, { dependencyTracking })=>{\n    const forceUpdate = (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useForceUpdate)();\n    const onOpenCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onCloseCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onErrorCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onConnectingCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onReconnectingCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onReconnectingStopCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const state = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(initialSocketState);\n    const renderKeys = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    const renderKeyTrigger = (keys)=>{\n        const shouldRerender = renderKeys.current.some((renderKey)=>keys.includes(renderKey));\n        if (shouldRerender) forceUpdate();\n    };\n    const setRenderKey = (renderKey)=>{\n        if (!renderKeys.current.includes(renderKey)) {\n            renderKeys.current.push(renderKey);\n        }\n    };\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidUpdate)(()=>{\n        const handleDependencyTracking = ()=>{\n            if (!dependencyTracking) {\n                Object.keys(state.current).forEach((key)=>setRenderKey(key));\n            }\n        };\n        handleDependencyTracking();\n    }, [\n        dependencyTracking\n    ], true);\n    const actions = {\n        setData: (data)=>{\n            state.current.data = data;\n            renderKeyTrigger([\n                \"data\"\n            ]);\n        },\n        setConnected: (connected)=>{\n            state.current.connected = connected;\n            renderKeyTrigger([\n                \"data\"\n            ]);\n        },\n        setConnecting: (connecting)=>{\n            state.current.connecting = connecting;\n            renderKeyTrigger([\n                \"data\"\n            ]);\n        },\n        setTimestamp: (timestamp)=>{\n            state.current.timestamp = timestamp;\n            renderKeyTrigger([\n                \"timestamp\"\n            ]);\n        }\n    };\n    const callbacks = {\n        onOpen: (callback)=>{\n            onOpenCallback.current = callback;\n        },\n        onClose: (callback)=>{\n            onCloseCallback.current = callback;\n        },\n        onError: (callback)=>{\n            onErrorCallback.current = callback;\n        },\n        onConnecting: (callback)=>{\n            onConnectingCallback.current = callback;\n        },\n        onReconnecting: (callback)=>{\n            onReconnectingCallback.current = callback;\n        },\n        onReconnectingStop: (callback)=>{\n            onReconnectingStopCallback.current = callback;\n        }\n    };\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidMount)(()=>{\n        const umountOnError = socket.events.onError((event)=>{\n            var _a;\n            (_a = onErrorCallback.current) == null ? void 0 : _a.call(onErrorCallback, event);\n        });\n        const umountOnConnecting = socket.events.onConnecting(()=>{\n            var _a;\n            actions.setConnecting(true);\n            (_a = onConnectingCallback.current) == null ? void 0 : _a.call(onConnectingCallback);\n        });\n        const umountOnOpen = socket.events.onOpen(()=>{\n            var _a;\n            actions.setConnected(true);\n            (_a = onOpenCallback.current) == null ? void 0 : _a.call(onOpenCallback);\n        });\n        const umountOnClose = socket.events.onClose(()=>{\n            var _a;\n            actions.setConnected(false);\n            (_a = onCloseCallback.current) == null ? void 0 : _a.call(onCloseCallback);\n        });\n        const umountOnReconnecting = socket.events.onReconnecting((attempts)=>{\n            var _a;\n            (_a = onReconnectingCallback.current) == null ? void 0 : _a.call(onReconnectingCallback, attempts);\n        });\n        const umountOnReconnectingStop = socket.events.onReconnectingStop((attempts)=>{\n            var _a;\n            (_a = onReconnectingStopCallback.current) == null ? void 0 : _a.call(onReconnectingStopCallback, attempts);\n        });\n        return ()=>{\n            umountOnError();\n            umountOnConnecting();\n            umountOnOpen();\n            umountOnClose();\n            umountOnReconnecting();\n            umountOnReconnectingStop();\n        };\n    });\n    return [\n        state.current,\n        actions,\n        callbacks,\n        {\n            setRenderKey\n        }\n    ];\n};\n// src/helpers/use-socket-state/use-socket-state.constants.ts\nvar initialSocketState = {\n    data: null,\n    connected: false,\n    connecting: false,\n    timestamp: null\n};\n// src/hooks/use-fetch/use-fetch.hooks.ts\nvar useFetch = (request, options = useFetchDefaultOptions)=>{\n    const { config: globalConfig } = useConfigProvider();\n    const { dependencies = useFetchDefaultOptions.dependencies, disabled = useFetchDefaultOptions.disabled, dependencyTracking = useFetchDefaultOptions.dependencyTracking, revalidate = useFetchDefaultOptions.revalidate, initialData = useFetchDefaultOptions.initialData, refresh = useFetchDefaultOptions.refresh, refreshTime = useFetchDefaultOptions.refreshTime, refetchBlurred = useFetchDefaultOptions.refetchBlurred, refetchOnBlur = useFetchDefaultOptions.refetchOnBlur, refetchOnFocus = useFetchDefaultOptions.refetchOnFocus, refetchOnReconnect = useFetchDefaultOptions.refetchOnReconnect, bounce = useFetchDefaultOptions.bounce, bounceType = useFetchDefaultOptions.bounceType, bounceTime = useFetchDefaultOptions.bounceTime, bounceTimeout = useFetchDefaultOptions.bounceTime, deepCompare = useFetchDefaultOptions.deepCompare } = __spreadValues(__spreadValues(__spreadValues({}, useFetchDefaultOptions), globalConfig.useFetchConfig), options);\n    const updateKey = JSON.stringify(request.toJSON());\n    const requestDebounce = (0,_better_hooks_performance__WEBPACK_IMPORTED_MODULE_2__.useDebounce)({\n        delay: bounceTime\n    });\n    const requestThrottle = (0,_better_hooks_performance__WEBPACK_IMPORTED_MODULE_2__.useThrottle)({\n        interval: bounceTime,\n        timeout: bounceTimeout\n    });\n    const refreshDebounce = (0,_better_hooks_performance__WEBPACK_IMPORTED_MODULE_2__.useDebounce)({\n        delay: refreshTime\n    });\n    const { cacheKey, queueKey, client } = request;\n    const { cache, fetchDispatcher: dispatcher, appManager, loggerManager } = client;\n    const ignoreReact18DoubleRender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n    const logger = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(loggerManager.init(\"useFetch\")).current;\n    const bounceData = bounceType === \"throttle\" ? requestThrottle : requestDebounce;\n    const bounceFunction = bounceType === \"throttle\" ? requestThrottle.throttle : requestDebounce.debounce;\n    const [state, actions, { setRenderKey, setCacheData, getStaleStatus }] = useTrackedState({\n        logger,\n        request,\n        dispatcher,\n        initialData,\n        deepCompare,\n        dependencyTracking\n    });\n    const [callbacks, listeners] = useRequestEvents({\n        logger,\n        actions,\n        request,\n        dispatcher,\n        setCacheData\n    });\n    const { addDataListener, addLifecycleListeners, clearDataListener } = listeners;\n    const handleFetch = ()=>{\n        if (!disabled) {\n            logger.debug(`Fetching data`);\n            dispatcher.add(request);\n        } else {\n            logger.debug(`Cannot add to fetch queue`, {\n                disabled\n            });\n        }\n    };\n    function handleRefresh() {\n        if (!refresh) {\n            refreshDebounce.reset();\n            return;\n        }\n        refreshDebounce.debounce(()=>{\n            const isBlurred = !appManager.isFocused;\n            const isFetching = dispatcher.hasRunningRequests(request.queueKey);\n            const isQueued = dispatcher.getIsActiveQueue(request.queueKey);\n            const isActive = isFetching || isQueued;\n            const canRefreshBlurred = isBlurred && refetchBlurred && !isActive;\n            const canRefreshFocused = !isBlurred && !isActive;\n            if (canRefreshBlurred || canRefreshFocused) {\n                handleFetch();\n                logger.debug(`Performing refresh request`);\n            }\n            handleRefresh();\n        });\n    }\n    const handleInvalidation = (invalidateKey)=>{\n        if (invalidateKey && invalidateKey instanceof _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.Request) {\n            cache.invalidate((0,_hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.getRequestKey)(invalidateKey));\n        } else if (invalidateKey && !(invalidateKey instanceof _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.Request)) {\n            cache.invalidate(invalidateKey);\n        }\n    };\n    const refetch = (invalidateKey)=>{\n        if (invalidateKey && Array.isArray(invalidateKey)) {\n            invalidateKey.forEach(handleInvalidation);\n        } else if (invalidateKey && !Array.isArray(invalidateKey)) {\n            handleInvalidation(invalidateKey);\n        } else {\n            handleFetch();\n            handleRefresh();\n        }\n    };\n    const getIsFetchingIdentity = ()=>{\n        return dispatcher.getRunningRequests(queueKey).some((running)=>running.request.cacheKey === cacheKey);\n    };\n    const initialFetchData = ()=>{\n        const hasStaleData = getStaleStatus();\n        const isFetching = getIsFetchingIdentity();\n        if ((revalidate || hasStaleData) && !isFetching) {\n            handleFetch();\n        }\n    };\n    const updateFetchData = ()=>{\n        const hasStaleData = getStaleStatus();\n        const shouldUpdate = !revalidate ? hasStaleData : true;\n        if (!ignoreReact18DoubleRender.current && shouldUpdate) {\n            if (bounce) {\n                logger.debug(`Bounce request with ${bounceType}`, {\n                    queueKey,\n                    request\n                });\n                bounceFunction(()=>handleFetch());\n            } else {\n                handleFetch();\n            }\n        } else {\n            ignoreReact18DoubleRender.current = false;\n        }\n    };\n    const handleMountEvents = ()=>{\n        addDataListener(request);\n        addLifecycleListeners(request);\n        const focusUnmount = appManager.events.onFocus(()=>{\n            if (refetchOnFocus) {\n                handleFetch();\n                handleRefresh();\n            }\n        });\n        const blurUnmount = appManager.events.onBlur(()=>{\n            if (refetchOnBlur) {\n                handleFetch();\n                handleRefresh();\n            }\n        });\n        const onlineUnmount = appManager.events.onOnline(()=>{\n            if (refetchOnReconnect) {\n                handleFetch();\n                handleRefresh();\n            }\n        });\n        const invalidateUnmount = cache.events.onInvalidate(cacheKey, handleFetch);\n        const unmount = ()=>{\n            clearDataListener();\n            focusUnmount();\n            blurUnmount();\n            onlineUnmount();\n            invalidateUnmount();\n        };\n        return unmount;\n    };\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidUpdate)(handleMountEvents, [\n        updateKey\n    ], true);\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidMount)(initialFetchData);\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidUpdate)(updateFetchData, [\n        updateKey,\n        disabled,\n        ...dependencies\n    ], true);\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidUpdate)(handleRefresh, [\n        updateKey,\n        ...dependencies,\n        disabled,\n        refresh,\n        refreshTime\n    ], true);\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useWillUnmount)(()=>{\n        ignoreReact18DoubleRender.current = true;\n    });\n    return __spreadProps(__spreadValues(__spreadValues({\n        get data () {\n            setRenderKey(\"data\");\n            return state.data;\n        },\n        get error () {\n            setRenderKey(\"error\");\n            return state.error;\n        },\n        get loading () {\n            setRenderKey(\"loading\");\n            return state.loading;\n        },\n        get status () {\n            setRenderKey(\"status\");\n            return state.status;\n        },\n        get success () {\n            setRenderKey(\"success\");\n            return state.success;\n        },\n        get extra () {\n            setRenderKey(\"extra\");\n            return state.extra;\n        },\n        get retries () {\n            setRenderKey(\"retries\");\n            return state.retries;\n        },\n        get timestamp () {\n            setRenderKey(\"timestamp\");\n            return state.timestamp;\n        },\n        bounce: getBounceData(bounceData)\n    }, actions), callbacks), {\n        refetch\n    });\n};\n// src/hooks/use-fetch/use-fetch.utils.ts\nvar getRefreshTime = (refreshTime, dataTimestamp)=>{\n    if (dataTimestamp) {\n        const timeDiff = Date.now() - +dataTimestamp;\n        return timeDiff < refreshTime ? refreshTime - timeDiff : refreshTime;\n    }\n    return refreshTime;\n};\n// src/hooks/use-fetch/use-fetch.constants.ts\n\nvar useFetchDefaultOptions = {\n    dependencies: [],\n    disabled: false,\n    dependencyTracking: true,\n    revalidate: true,\n    initialData: null,\n    refresh: false,\n    refreshTime: _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.Time.HOUR,\n    refetchBlurred: true,\n    refetchOnBlur: false,\n    refetchOnFocus: false,\n    refetchOnReconnect: false,\n    bounce: false,\n    bounceType: \"debounce\",\n    bounceTime: 400,\n    deepCompare: true\n};\n// src/hooks/use-submit/use-submit.hooks.ts\n\n\n\n\nvar useSubmit = (request, options = useSubmitDefaultOptions)=>{\n    const { config: globalConfig } = useConfigProvider();\n    const mergedOptions = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(()=>__spreadValues(__spreadValues(__spreadValues({}, useSubmitDefaultOptions), globalConfig.useSubmitConfig), options), // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n        globalConfig.useSubmitConfig,\n        JSON.stringify(options),\n        options.deepCompare\n    ]);\n    const { disabled, dependencyTracking, initialData, bounce, bounceType, bounceTime, deepCompare } = mergedOptions;\n    const { client } = request;\n    const { cache, submitDispatcher: dispatcher, loggerManager } = client;\n    const logger = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(loggerManager.init(\"useSubmit\")).current;\n    const requestDebounce = (0,_better_hooks_performance__WEBPACK_IMPORTED_MODULE_2__.useDebounce)({\n        delay: bounceTime\n    });\n    const requestThrottle = (0,_better_hooks_performance__WEBPACK_IMPORTED_MODULE_2__.useThrottle)({\n        interval: bounceTime,\n        timeout: \"bounceTimeout\" in mergedOptions ? mergedOptions.bounceTimeout : bounceTime\n    });\n    const bounceResolver = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(()=>null);\n    const bounceData = bounceType === \"throttle\" ? requestThrottle : requestDebounce;\n    const bounceFunction = bounceType === \"throttle\" ? requestThrottle.throttle : requestDebounce.debounce;\n    const [state, actions, { setRenderKey, setCacheData }] = useTrackedState({\n        logger,\n        request,\n        dispatcher,\n        initialData,\n        deepCompare,\n        dependencyTracking\n    });\n    const [callbacks, listeners] = useRequestEvents({\n        logger,\n        actions,\n        request,\n        dispatcher,\n        setCacheData\n    });\n    const { addDataListener, addLifecycleListeners } = listeners;\n    const handleSubmit = (submitOptions)=>{\n        const requestClone = request.clone(submitOptions);\n        if (disabled) {\n            logger.warning(`Cannot submit request`, {\n                disabled,\n                submitOptions\n            });\n            return Promise.resolve({\n                data: null,\n                error: new Error(\"Cannot submit request. Option 'disabled' is enabled\"),\n                status: null,\n                extra: request.client.defaultExtra\n            });\n        }\n        const triggerRequest = ()=>{\n            addDataListener(requestClone);\n            return (0,_hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.sendRequest)(requestClone, __spreadProps(__spreadValues({\n                dispatcherType: \"submit\"\n            }, submitOptions), {\n                onSettle: (requestId, cmd)=>{\n                    var _a;\n                    addLifecycleListeners(requestClone, requestId);\n                    (_a = submitOptions == null ? void 0 : submitOptions.onSettle) == null ? void 0 : _a.call(submitOptions, requestId, cmd);\n                }\n            }));\n        };\n        return new Promise((resolve)=>{\n            const performSubmit = ()=>__async(void 0, null, function*() {\n                    logger.debug(`Submitting request`, {\n                        disabled,\n                        submitOptions\n                    });\n                    if (bounce) {\n                        const bouncedResolve = bounceResolver.current;\n                        bounceResolver.current = (value)=>{\n                            bouncedResolve(value);\n                            resolve(value);\n                        };\n                        bounceFunction(()=>__async(void 0, null, function*() {\n                                const callback = bounceResolver.current;\n                                bounceResolver.current = ()=>null;\n                                const value = yield triggerRequest();\n                                callback(value);\n                            }));\n                    } else {\n                        const value = yield triggerRequest();\n                        resolve(value);\n                    }\n                });\n            performSubmit();\n        });\n    };\n    const handleInvalidation = (invalidateKey)=>{\n        if (invalidateKey && invalidateKey instanceof _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.Request) {\n            cache.invalidate((0,_hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.getRequestKey)(invalidateKey));\n        } else if (invalidateKey && !(invalidateKey instanceof _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.Request)) {\n            cache.invalidate(invalidateKey);\n        }\n    };\n    const refetch = (invalidateKey)=>{\n        if (!invalidateKey) return;\n        if (invalidateKey && Array.isArray(invalidateKey)) {\n            invalidateKey.forEach(handleInvalidation);\n        } else if (invalidateKey && !Array.isArray(invalidateKey)) {\n            handleInvalidation(invalidateKey);\n        }\n    };\n    const handlers = {\n        onSubmitSuccess: callbacks.onSuccess,\n        onSubmitError: callbacks.onError,\n        onSubmitFinished: callbacks.onFinished,\n        onSubmitRequestStart: callbacks.onRequestStart,\n        onSubmitResponseStart: callbacks.onResponseStart,\n        onSubmitDownloadProgress: callbacks.onDownloadProgress,\n        onSubmitUploadProgress: callbacks.onUploadProgress,\n        onSubmitOfflineError: callbacks.onOfflineError,\n        onSubmitAbort: callbacks.onAbort\n    };\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidMount)(()=>{\n        addDataListener(request);\n    });\n    return __spreadProps(__spreadValues(__spreadValues({\n        submit: handleSubmit,\n        get data () {\n            setRenderKey(\"data\");\n            return state.data;\n        },\n        get error () {\n            setRenderKey(\"error\");\n            return state.error;\n        },\n        get submitting () {\n            setRenderKey(\"loading\");\n            return state.loading;\n        },\n        get status () {\n            setRenderKey(\"status\");\n            return state.status;\n        },\n        get success () {\n            setRenderKey(\"success\");\n            return state.success;\n        },\n        get extra () {\n            setRenderKey(\"extra\");\n            return state.extra;\n        },\n        get retries () {\n            setRenderKey(\"retries\");\n            return state.retries;\n        },\n        get timestamp () {\n            setRenderKey(\"timestamp\");\n            return state.timestamp;\n        },\n        abort: callbacks.abort\n    }, actions), handlers), {\n        bounce: getBounceData(bounceData),\n        refetch\n    });\n};\n// src/hooks/use-submit/use-submit.constants.ts\nvar useSubmitDefaultOptions = {\n    disabled: false,\n    dependencyTracking: true,\n    initialData: null,\n    bounce: false,\n    bounceType: \"debounce\",\n    bounceTime: 400,\n    deepCompare: true\n};\n// src/hooks/use-queue/use-queue.hooks.ts\n\n\n\nvar useQueue = (request, options = useQueueDefaultOptions)=>{\n    const { config: globalConfig } = useConfigProvider();\n    const { queueType = \"auto\" } = __spreadValues(__spreadValues(__spreadValues({}, useQueueDefaultOptions), globalConfig.useQueueConfig), options);\n    const { abortKey, queueKey, client } = request;\n    const { requestManager } = client;\n    const [dispatcher] = (0,_hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.getRequestDispatcher)(request, queueType);\n    const unmountCallbacks = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [stopped, setStopped] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [requests, setRequests] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const createRequestsArray = (queueElements)=>{\n        return queueElements.map((req)=>__spreadProps(__spreadValues({}, req), {\n                stopRequest: ()=>dispatcher.stopRequest(queueKey, req.requestId),\n                startRequest: ()=>dispatcher.startRequest(queueKey, req.requestId),\n                deleteRequest: ()=>dispatcher.delete(queueKey, req.requestId, abortKey)\n            }));\n    };\n    const mergePayloadType = (requestId, data)=>{\n        setRequests((prev)=>prev.map((el)=>el.requestId === requestId ? __spreadValues(__spreadValues({}, el), data) : el));\n    };\n    const getInitialState2 = ()=>{\n        const requestQueue = dispatcher.getQueue(queueKey);\n        setStopped(requestQueue.stopped);\n        setRequests(createRequestsArray(requestQueue.requests));\n    };\n    const updateQueueState = (values)=>{\n        setStopped(values.stopped);\n        setRequests(createRequestsArray(values.requests));\n    };\n    const mountEvents = ()=>{\n        var _a;\n        const unmountChange = dispatcher.events.onQueueChange(queueKey, updateQueueState);\n        const unmountStatus = dispatcher.events.onQueueStatus(queueKey, updateQueueState);\n        const unmountDownload = requestManager.events.onDownloadProgress(queueKey, (progress, { requestId })=>{\n            mergePayloadType(requestId, {\n                downloading: progress\n            });\n        });\n        const unmountUpload = requestManager.events.onUploadProgress(queueKey, (progress, { requestId })=>{\n            mergePayloadType(requestId, {\n                uploading: progress\n            });\n        });\n        const unmount = ()=>{\n            unmountStatus();\n            unmountChange();\n            unmountDownload();\n            unmountUpload();\n        };\n        (_a = unmountCallbacks.current) == null ? void 0 : _a.call(unmountCallbacks);\n        unmountCallbacks.current = unmount;\n        return unmount;\n    };\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidMount)(getInitialState2);\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidUpdate)(mountEvents, [\n        stopped,\n        requests,\n        setRequests,\n        setStopped\n    ], true);\n    return {\n        stopped,\n        requests,\n        stop: ()=>dispatcher.stop(queueKey),\n        pause: ()=>dispatcher.pause(queueKey),\n        start: ()=>dispatcher.start(queueKey)\n    };\n};\n// src/hooks/use-queue/use-queue.constants.ts\nvar useQueueDefaultOptions = {\n    queueType: \"auto\"\n};\n// src/hooks/use-cache/use-cache.hooks.ts\n\n\n\nvar useCache = (request, options = useCacheDefaultOptions)=>{\n    const { cacheKey, client } = request;\n    const { cache, loggerManager } = client;\n    const logger = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(loggerManager.init(\"useCache\")).current;\n    const [dispatcher] = (0,_hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.getRequestDispatcher)(request);\n    const updateKey = JSON.stringify(request.toJSON());\n    const { config: globalConfig } = useConfigProvider();\n    const { dependencyTracking, initialData, deepCompare } = __spreadValues(__spreadValues(__spreadValues({}, useCacheDefaultOptions), globalConfig.useCacheConfig), options);\n    const [state, actions, { setRenderKey, setCacheData }] = useTrackedState({\n        logger,\n        request,\n        dispatcher,\n        initialData,\n        deepCompare,\n        dependencyTracking\n    });\n    const [callbacks, listeners] = useRequestEvents({\n        logger,\n        actions,\n        request,\n        dispatcher,\n        setCacheData\n    });\n    const { addDataListener, addLifecycleListeners } = listeners;\n    const handleMountEvents = ()=>{\n        const unmountDataListener = addDataListener(request);\n        const unmountLifecycleListener = addLifecycleListeners(request);\n        return ()=>{\n            unmountDataListener();\n            unmountLifecycleListener();\n        };\n    };\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidUpdate)(()=>{\n        return handleMountEvents();\n    }, [\n        updateKey\n    ], true);\n    const refetch = (invalidateKey)=>{\n        if (invalidateKey instanceof _hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.Request) {\n            cache.invalidate((0,_hyper_fetch_core__WEBPACK_IMPORTED_MODULE_3__.getRequestKey)(invalidateKey, true));\n        } else if (invalidateKey) {\n            cache.invalidate(invalidateKey);\n        } else {\n            cache.invalidate(cacheKey);\n        }\n    };\n    return __spreadProps(__spreadValues({\n        get data () {\n            setRenderKey(\"data\");\n            return state.data;\n        },\n        get error () {\n            setRenderKey(\"error\");\n            return state.error;\n        },\n        get loading () {\n            setRenderKey(\"loading\");\n            return state.loading;\n        },\n        get status () {\n            setRenderKey(\"status\");\n            return state.status;\n        },\n        get success () {\n            setRenderKey(\"success\");\n            return state.success;\n        },\n        get extra () {\n            setRenderKey(\"extra\");\n            return state.extra;\n        },\n        get retries () {\n            setRenderKey(\"retries\");\n            return state.retries;\n        },\n        get timestamp () {\n            setRenderKey(\"timestamp\");\n            return state.timestamp;\n        },\n        onCacheError: callbacks.onError,\n        onCacheSuccess: callbacks.onSuccess,\n        onCacheChange: callbacks.onFinished\n    }, actions), {\n        refetch\n    });\n};\n// src/hooks/use-cache/use-cache.constants.ts\nvar useCacheDefaultOptions = {\n    dependencyTracking: true,\n    initialData: null,\n    deepCompare: true\n};\n// src/hooks/use-listener/use-listener.hooks.ts\n\n\nvar useListener = (listener, options)=>{\n    const { config: globalConfig } = useConfigProvider();\n    const { dependencyTracking } = __spreadValues(__spreadValues({}, globalConfig.useListener), options);\n    const [state, actions, callbacks, { setRenderKey }] = useSocketState(listener.socket, {\n        dependencyTracking\n    });\n    const removeListenerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const onEventCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const stopListener = ()=>{\n        var _a;\n        (_a = removeListenerRef.current) == null ? void 0 : _a.call(removeListenerRef);\n    };\n    const listen = ()=>{\n        stopListener();\n        removeListenerRef.current = listener.listen({\n            callback: ({ data, extra })=>{\n                var _a;\n                (_a = onEventCallback.current) == null ? void 0 : _a.call(onEventCallback, {\n                    data,\n                    extra\n                });\n                actions.setData(data);\n                actions.setTimestamp(+/* @__PURE__ */ new Date());\n            }\n        });\n    };\n    const additionalCallbacks = {\n        onEvent: (callback)=>{\n            onEventCallback.current = callback;\n        }\n    };\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidUpdate)(()=>{\n        listen();\n    }, [\n        listener.params,\n        JSON.stringify(listener.options)\n    ], true);\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useWillUnmount)(()=>{\n        stopListener();\n    });\n    return __spreadProps(__spreadValues(__spreadValues(__spreadValues({\n        get data () {\n            setRenderKey(\"data\");\n            return state.data;\n        },\n        get connected () {\n            setRenderKey(\"connected\");\n            return state.connected;\n        },\n        get connecting () {\n            setRenderKey(\"connecting\");\n            return state.connecting;\n        },\n        get timestamp () {\n            setRenderKey(\"timestamp\");\n            return state.timestamp;\n        }\n    }, actions), callbacks), additionalCallbacks), {\n        listen\n    });\n};\n// src/hooks/use-emitter/use-emitter.hooks.ts\n\nvar useEmitter = (emitter, options)=>{\n    const { config: globalConfig } = useConfigProvider();\n    const { dependencyTracking } = __spreadValues(__spreadValues({}, globalConfig.useEmitter), options);\n    const onEventCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [state, actions, callbacks, { setRenderKey }] = useSocketState(emitter.socket, {\n        dependencyTracking\n    });\n    const additionalCallbacks = {\n        onEvent: (callback)=>{\n            onEventCallback.current = callback;\n        }\n    };\n    const emit = (emitOptions)=>{\n        var _a;\n        actions.setTimestamp(+/* @__PURE__ */ new Date());\n        (_a = onEventCallback.current) == null ? void 0 : _a.call(onEventCallback, emitter);\n        return emitter.emit(emitOptions);\n    };\n    return __spreadProps(__spreadValues(__spreadValues(__spreadValues({\n        get connected () {\n            setRenderKey(\"connected\");\n            return state.connected;\n        },\n        get connecting () {\n            setRenderKey(\"connecting\");\n            return state.connecting;\n        },\n        get timestamp () {\n            setRenderKey(\"timestamp\");\n            return state.timestamp;\n        }\n    }, actions), callbacks), additionalCallbacks), {\n        emit,\n        reconnect: emitter.socket.reconnect\n    });\n};\n// src/hooks/use-event-messages/use-event-messages.hooks.ts\n\n\nvar useEventMessages = (socket, options)=>{\n    const { config: globalConfig } = useConfigProvider();\n    const { dependencyTracking = false, filter } = __spreadValues(__spreadValues({}, globalConfig.useEventMessages), options);\n    const onEventCallback = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [state, actions, callbacks, { setRenderKey }] = useSocketState(socket, {\n        dependencyTracking\n    });\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidUpdate)(()=>{\n        const unmountListener = socket.events.onListenerEvent(({ endpoint, data, extra })=>{\n            var _a;\n            const filterFn = typeof filter === \"function\" ? ()=>filter(endpoint, data) : ()=>filter.includes(endpoint);\n            const isFiltered = filter ? filterFn() : false;\n            if (!isFiltered) {\n                (_a = onEventCallback.current) == null ? void 0 : _a.call(onEventCallback, data, extra);\n                actions.setData(data);\n                actions.setTimestamp(+/* @__PURE__ */ new Date());\n            }\n        });\n        return unmountListener;\n    }, [\n        socket,\n        filter\n    ], true);\n    const additionalCallbacks = {\n        onEvent: (callback)=>{\n            onEventCallback.current = callback;\n        }\n    };\n    return __spreadValues(__spreadValues(__spreadValues({\n        get data () {\n            setRenderKey(\"data\");\n            return state.data;\n        },\n        get connected () {\n            setRenderKey(\"connected\");\n            return state.connected;\n        },\n        get connecting () {\n            setRenderKey(\"connecting\");\n            return state.connecting;\n        },\n        get timestamp () {\n            setRenderKey(\"timestamp\");\n            return state.timestamp;\n        }\n    }, actions), callbacks), additionalCallbacks);\n};\n// src/hooks/use-app-manager/use-app-manager.hooks.ts\n\n\nvar useAppManager = (client)=>{\n    const [online, setIsOnline] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(client.appManager.isOnline);\n    const [focused, setIsFocused] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(client.appManager.isFocused);\n    const mountEvents = ()=>{\n        const unmountIsOnline = client.appManager.events.onOnline(()=>setIsOnline(true));\n        const unmountIsOffline = client.appManager.events.onOffline(()=>setIsOnline(false));\n        const unmountIsFocus = client.appManager.events.onFocus(()=>setIsFocused(true));\n        const unmountIsBlur = client.appManager.events.onBlur(()=>setIsFocused(false));\n        return ()=>{\n            unmountIsOnline();\n            unmountIsOffline();\n            unmountIsFocus();\n            unmountIsBlur();\n        };\n    };\n    const setOnline = (isOnline)=>{\n        client.appManager.setOnline(isOnline);\n    };\n    const setFocused = (isFocused)=>{\n        client.appManager.setFocused(isFocused);\n    };\n    (0,_better_hooks_lifecycle__WEBPACK_IMPORTED_MODULE_1__.useDidMount)(mountEvents);\n    return {\n        isOnline: online,\n        isFocused: focused,\n        setOnline,\n        setFocused\n    };\n};\n //# sourceMappingURL=index.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../packages/react/dist/index.esm.js\n");

/***/ }),

/***/ "(rsc)/./app/details/details.page.tsx":
/*!**************************************!*\
  !*** ./app/details/details.page.tsx ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DetailsPage: () => (/* binding */ e0)
/* harmony export */ });
/* harmony import */ var next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/build/webpack/loaders/next-flight-loader/module-proxy */ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-flight-loader/module-proxy.js");

const proxy = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx`)

// Accessing the __esModule property and exporting $$typeof are required here.
// The __esModule getter forces the proxy target to create the default export
// and the $$typeof value is for rendering logic to determine if the module
// is a client boundary.
const { __esModule, $$typeof } = proxy;
const __default__ = proxy.default;

const e0 = (0,next_dist_build_webpack_loaders_next_flight_loader_module_proxy__WEBPACK_IMPORTED_MODULE_0__.createProxy)(String.raw`/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/details/details.page.tsx#DetailsPage`);


/***/ }),

/***/ "(rsc)/./app/details/page.tsx":
/*!******************************!*\
  !*** ./app/details/page.tsx ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _details_page__WEBPACK_IMPORTED_MODULE_0__.DetailsPage)\n/* harmony export */ });\n/* harmony import */ var _details_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./details.page */ \"(rsc)/./app/details/details.page.tsx\");\n// eslint-disable-next-line no-restricted-exports\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvZGV0YWlscy9wYWdlLnRzeCIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLGlEQUFpRDtBQUNPIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vYXBwL2RldGFpbHMvcGFnZS50c3g/N2UxNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcmVzdHJpY3RlZC1leHBvcnRzXG5leHBvcnQgeyBEZXRhaWxzUGFnZSBhcyBkZWZhdWx0IH0gZnJvbSBcIi4vZGV0YWlscy5wYWdlXCI7XG4iXSwibmFtZXMiOlsiRGV0YWlsc1BhZ2UiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/details/page.tsx\n");

/***/ }),

/***/ "(rsc)/./app/layout.tsx":
/*!************************!*\
  !*** ./app/layout.tsx ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout),\n/* harmony export */   metadata: () => (/* binding */ metadata)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/../../node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n\nconst metadata = {\n    title: \"Next.js\",\n    description: \"Generated by Next.js\"\n};\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            children: children\n        }, void 0, false, {\n            fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/layout.tsx\",\n            lineNumber: 13,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/maciejpyrc/Praca/better-typed/open-source/hyper-fetch/examples/next-app-router/app/layout.tsx\",\n        lineNumber: 12,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvbGF5b3V0LnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFPLE1BQU1BLFdBQVc7SUFDdEJDLE9BQU87SUFDUEMsYUFBYTtBQUNmLEVBQUM7QUFFYyxTQUFTQyxXQUFXLEVBQ2pDQyxRQUFRLEVBR1Q7SUFDQyxxQkFDRSw4REFBQ0M7UUFBS0MsTUFBSztrQkFDVCw0RUFBQ0M7c0JBQU1IOzs7Ozs7Ozs7OztBQUdiIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vYXBwL2xheW91dC50c3g/OTk4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgbWV0YWRhdGEgPSB7XG4gIHRpdGxlOiAnTmV4dC5qcycsXG4gIGRlc2NyaXB0aW9uOiAnR2VuZXJhdGVkIGJ5IE5leHQuanMnLFxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSb290TGF5b3V0KHtcbiAgY2hpbGRyZW4sXG59OiB7XG4gIGNoaWxkcmVuOiBSZWFjdC5SZWFjdE5vZGVcbn0pIHtcbiAgcmV0dXJuIChcbiAgICA8aHRtbCBsYW5nPVwiZW5cIj5cbiAgICAgIDxib2R5PntjaGlsZHJlbn08L2JvZHk+XG4gICAgPC9odG1sPlxuICApXG59XG4iXSwibmFtZXMiOlsibWV0YWRhdGEiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwiUm9vdExheW91dCIsImNoaWxkcmVuIiwiaHRtbCIsImxhbmciLCJib2R5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/layout.tsx\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@opentelemetry","vendor-chunks/graphql","vendor-chunks/node-fetch","vendor-chunks/@mui","vendor-chunks/@mswjs","vendor-chunks/@xmldom","vendor-chunks/msw","vendor-chunks/headers-polyfill","vendor-chunks/@emotion","vendor-chunks/ansi-styles","vendor-chunks/debug","vendor-chunks/notistack","vendor-chunks/prop-types","vendor-chunks/react-transition-group","vendor-chunks/stylis","vendor-chunks/chalk","vendor-chunks/strict-event-emitter","vendor-chunks/set-cookie-parser","vendor-chunks/outvariant","vendor-chunks/hoist-non-react-statics","vendor-chunks/color-name","vendor-chunks/cookie","vendor-chunks/react-is","vendor-chunks/supports-color","vendor-chunks/js-levenshtein","vendor-chunks/is-node-process","vendor-chunks/@better-hooks","vendor-chunks/@babel","vendor-chunks/object-assign","vendor-chunks/@open-draft","vendor-chunks/has-flag","vendor-chunks/web-encoding","vendor-chunks/clsx","vendor-chunks/react-countdown"], () => (__webpack_exec__("(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fdetails%2Fpage&page=%2Fdetails%2Fpage&appPaths=%2Fdetails%2Fpage&pagePath=private-next-app-dir%2Fdetails%2Fpage.tsx&appDir=%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fexamples%2Fnext-app-router%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fmaciejpyrc%2FPraca%2Fbetter-typed%2Fopen-source%2Fhyper-fetch%2Fexamples%2Fnext-app-router&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();