name: Hyper Flow Release
on:
  push:
    tags:
      - "hyper-flow-v*"

jobs:
  prepare-environment:
    name: Prepare environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"
          cache-dependency-path: yarn.lock
        env:
          FORCE_COLOR: 0
      - name: Install node_modules
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install
      - name: Install HyperFlow dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: cd packages/hyper-flow && yarn install
      - name: Cache node_modules
        uses: actions/cache/save@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

  publish_on_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"
          cache-dependency-path: yarn.lock
      - name: Restore node_modules
        uses: actions/cache/restore@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          fail-on-cache-miss: false
      - name: Install node_modules on cache miss
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install
      - name: Install HyperFlow dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: cd packages/hyper-flow && yarn install
      - name: Build
        run: yarn build
      - name: Release
        run: yarn nx run hyper-flow:publish:app
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_on_mac:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"
          cache-dependency-path: yarn.lock
      - name: Restore node_modules
        uses: actions/cache/restore@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          fail-on-cache-miss: false
      - name: Install node_modules on cache miss
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install
      - name: Install HyperFlow dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: cd packages/hyper-flow && yarn install
      - name: Build
        run: yarn build
      - name: Release
        run: yarn nx run hyper-flow:publish:app
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish_on_win:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "yarn"
          cache-dependency-path: yarn.lock
      - name: Restore node_modules
        uses: actions/cache/restore@v3
        id: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          fail-on-cache-miss: false
      - name: Install node_modules on cache miss
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install
      - name: Install HyperFlow dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: cd packages/hyper-flow && yarn install
      - name: Build
        run: yarn build
      - name: Release
        run: yarn nx run hyper-flow:publish:app
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
